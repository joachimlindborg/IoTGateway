using System;
using System.Collections.Generic;
using System.Text;

namespace Waher.Content.Emoji
{
	/// <summary>
	/// Static class that provide methods for managing emojis.
	///
	/// Code is automatically generated by Waher.Utility.GetEmojiCatalog, which uses emoji source data from http://unicodey.com/emoji-data/table.htm
	/// </summary>
	public static class EmojiUtilities
	{
		/// <summary>
		/// Recognized emoji short names.
		/// </summary>
		public static readonly string[] EmojiShortNames = new string[]
		{
			"copyright",
			"registered",
			"bangbang",
			"interrobang",
			"tm",
			"information_source",
			"left_right_arrow",
			"arrow_up_down",
			"arrow_upper_left",
			"arrow_upper_right",
			"arrow_lower_right",
			"arrow_lower_left",
			"leftwards_arrow_with_hook",
			"arrow_right_hook",
			"watch",
			"hourglass",
			"keyboard",
			"fast_forward",
			"rewind",
			"arrow_double_up",
			"arrow_double_down",
			"black_right_pointing_double_triangle_with_vertical_bar",
			"black_left_pointing_double_triangle_with_vertical_bar",
			"black_right_pointing_triangle_with_double_vertical_bar",
			"alarm_clock",
			"stopwatch",
			"timer_clock",
			"hourglass_flowing_sand",
			"double_vertical_bar",
			"black_square_for_stop",
			"black_circle_for_record",
			"m",
			"black_small_square",
			"white_small_square",
			"arrow_forward",
			"arrow_backward",
			"white_medium_square",
			"black_medium_square",
			"white_medium_small_square",
			"black_medium_small_square",
			"sunny",
			"cloud",
			"umbrella",
			"showman",
			"comet",
			"phone",
			"ballot_box_with_check",
			"umbrella_rain",
			"coffee",
			"shamrock",
			"point_up",
			"skull_and_crossbones",
			"radioactive_sign",
			"biohazard_sign",
			"orthodox_cross",
			"star_and_crescent",
			"peace_symbol",
			"yin_yang",
			"wheel_of_dharma",
			"white_frowning_face",
			"relaxed",
			"aries",
			"taurus",
			"gemini",
			"cancer",
			"leo",
			"virgo",
			"libra",
			"scorpius",
			"sagittarius",
			"capricorn",
			"aquarius",
			"pisces",
			"spades",
			"clubs",
			"hearts",
			"diamonds",
			"hotsprings",
			"recycle",
			"wheelchair",
			"hammer_and_pick",
			"anchor",
			"crossed_swords",
			"scales",
			"alembic",
			"gear",
			"atom_symbol",
			"fleur_de_lis",
			"warning",
			"zap",
			"white_circle",
			"black_circle",
			"coffin",
			"funeral_urn",
			"soccer",
			"baseball",
			"snowman",
			"partly_sunny",
			"thunder_cloud_and_rain",
			"ophiuchus",
			"pick",
			"helmet_with_white_cross",
			"chains",
			"no_entry",
			"shinto_shrine",
			"church",
			"mountain",
			"umbrella_on_ground",
			"fountain",
			"golf",
			"ferry",
			"boat",
			"skier",
			"ice_skate",
			"person_with_ball",
			"tent",
			"fuelpump",
			"scissors",
			"white_check_mark",
			"airplane",
			"email",
			"fist",
			"hand",
			"v",
			"writing_hand",
			"pencil2",
			"black_nib",
			"heavy_check_mark",
			"heavy_multiplication_x",
			"latin_cross",
			"star_of_david",
			"sparkles",
			"eight_spoked_asterisk",
			"eight_pointed_black_star",
			"snowflake",
			"sparkle",
			"x",
			"negative_squared_cross_mark",
			"question",
			"grey_question",
			"grey_exclamation",
			"exclamation",
			"heavy_heart_exclamation_mark_ornament",
			"heart",
			"heavy_plus_sign",
			"heavy_minus_sign",
			"heavy_division_sign",
			"arrow_right",
			"curly_loop",
			"loop",
			"arrow_heading_up",
			"arrow_heading_down",
			"arrow_left",
			"arrow_up",
			"arrow_down",
			"black_large_square",
			"white_large_square",
			"star",
			"o",
			"wavy_dash",
			"part_alternation_mark",
			"congratulations",
			"secret",
			"mahjong",
			"black_joker",
			"a",
			"b",
			"o2",
			"parking",
			"ab",
			"cl",
			"cool",
			"free",
			"id",
			"new",
			"ng",
			"ok",
			"sos",
			"up",
			"vs",
			"koko",
			"sa",
			"u7121",
			"u6307",
			"u7981",
			"u7a7a",
			"u5408",
			"u6e80",
			"u6709",
			"u6708",
			"u7533",
			"u5272",
			"u55b6",
			"ideograph_advantage",
			"accept",
			"cyclone",
			"foggy",
			"closed_umbrella",
			"night_with_stars",
			"sunrise_over_mountains",
			"sunrise",
			"city_sunset",
			"city_sunrise",
			"rainbow",
			"bridge_at_night",
			"ocean",
			"volcano",
			"milky_way",
			"earth_africa",
			"earth_americas",
			"earth_asia",
			"globe_with_meridians",
			"new_moon",
			"waxing_crescent_moon",
			"first_quarter_moon",
			"moon",
			"full_moon",
			"waning_gibbous_moon",
			"last_quarter_moon",
			"waning_crescent_moon",
			"crescent_moon",
			"new_moon_with_face",
			"first_quarter_moon_with_face",
			"last_quarter_moon_with_face",
			"full_moon_with_face",
			"sun_with_face",
			"star2",
			"stars",
			"thermometer",
			"mostly_sunny",
			"barely_sunny",
			"partly_sunny_rain",
			"rain_cloud",
			"snow_cloud",
			"lightning",
			"tornado",
			"fog",
			"wind_blowing_face",
			"hotdog",
			"taco",
			"burrito",
			"chestnut",
			"seedling",
			"evergreen_tree",
			"deciduous_tree",
			"palm_tree",
			"cactus",
			"hot_pepper",
			"tulip",
			"cherry_blossom",
			"rose",
			"hibiscus",
			"sunflower",
			"blossom",
			"corn",
			"ear_of_rice",
			"herb",
			"four_leaf_clover",
			"maple_leaf",
			"fallen_leaf",
			"leaves",
			"mushroom",
			"tomato",
			"eggplant",
			"grapes",
			"melon",
			"watermelon",
			"tangerine",
			"lemon",
			"banana",
			"pineapple",
			"apple",
			"green_apple",
			"pear",
			"peach",
			"cherries",
			"strawberry",
			"hamburger",
			"pizza",
			"meat_on_bone",
			"poultry_leg",
			"rice_cracker",
			"rice_ball",
			"rice",
			"curry",
			"ramen",
			"spaghetti",
			"bread",
			"fries",
			"sweet_potato",
			"dango",
			"oden",
			"sushi",
			"fried_shrimp",
			"fish_cake",
			"icecream",
			"shaved_ice",
			"ice_cream",
			"doughnut",
			"cookie",
			"chocolate_bar",
			"candy",
			"lollipop",
			"custard",
			"honey_pot",
			"cake",
			"bento",
			"stew",
			"egg",
			"fork_and_knife",
			"tea",
			"sake",
			"wine_glass",
			"cocktail",
			"tropical_drink",
			"beer",
			"beers",
			"baby_bottle",
			"knife_fork_plate",
			"champagne",
			"popcorn",
			"ribbon",
			"gift",
			"birthday",
			"jack_o_lantern",
			"christmas_tree",
			"santa",
			"fireworks",
			"sparkler",
			"balloon",
			"tada",
			"confetti_ball",
			"tanabata_tree",
			"crossed_flags",
			"bamboo",
			"dolls",
			"flags",
			"wind_chime",
			"rice_scene",
			"school_satchel",
			"mortar_board",
			"medal",
			"reminder_ribbon",
			"studio_microphone",
			"level_slider",
			"control_knobs",
			"film_frames",
			"admission_tickets",
			"carousel_horse",
			"ferris_wheel",
			"roller_coaster",
			"fishing_pole_and_fish",
			"microphone",
			"movie_camera",
			"cinema",
			"headphones",
			"art",
			"tophat",
			"circus_tent",
			"ticket",
			"clapper",
			"performing_arts",
			"video_game",
			"dart",
			"slot_machine",
			"8ball",
			"game_die",
			"bowling",
			"flower_playing_cards",
			"musical_note",
			"notes",
			"saxophone",
			"guitar",
			"musical_keyboard",
			"trumpet",
			"violin",
			"musical_score",
			"running_shirt_with_sash",
			"tennis",
			"ski",
			"basketball",
			"checkered_flag",
			"snowboarder",
			"runner",
			"surfer",
			"sports_medal",
			"trophy",
			"horse_racing",
			"football",
			"rugby_football",
			"swimmer",
			"weight_lifter",
			"golfer",
			"racing_motorcycle",
			"racing_car",
			"cricket_bat_and_ball",
			"volleyball",
			"field_hockey_stick_and_ball",
			"ice_hockey_stick_and_puck",
			"table_tennis_paddle_and_ball",
			"snow_capped_mountain",
			"camping",
			"beach_with_umbrella",
			"building_construction",
			"house_buildings",
			"cityscape",
			"derelict_house_building",
			"classical_building",
			"desert",
			"desert_island",
			"national_park",
			"stadium",
			"house",
			"house_with_garden",
			"office",
			"post_office",
			"european_post_office",
			"hospital",
			"bank",
			"atm",
			"hotel",
			"love_hotel",
			"convenience_store",
			"school",
			"department_store",
			"factory",
			"izakaya_lantern",
			"japanese_castle",
			"european_castle",
			"waving_white_flag",
			"waving_black_flag",
			"rosette",
			"label",
			"badminton_racquet_and_shuttlecock",
			"bow_and_arrow",
			"amphora",
			"skin-tone-2",
			"skin-tone-3",
			"skin-tone-4",
			"skin-tone-5",
			"skin-tone-6",
			"rat",
			"mouse2",
			"ox",
			"water_buffalo",
			"cow2",
			"tiger2",
			"leopard",
			"rabbit2",
			"cat2",
			"dragon",
			"crocodile",
			"whale2",
			"snail",
			"snake",
			"racehorse",
			"ram",
			"goat",
			"sheep",
			"monkey",
			"rooster",
			"chicken",
			"dog2",
			"pig2",
			"boar",
			"elephant",
			"octopus",
			"shell",
			"bug",
			"ant",
			"bee",
			"beetle",
			"fish",
			"tropical_fish",
			"blowfish",
			"turtle",
			"hatching_chick",
			"baby_chick",
			"hatched_chick",
			"bird",
			"penguin",
			"koala",
			"poodle",
			"dromedary_camel",
			"camel",
			"dolphin",
			"mouse",
			"cow",
			"tiger",
			"rabbit",
			"cat",
			"dragon_face",
			"whale",
			"horse",
			"monkey_face",
			"dog",
			"pig",
			"frog",
			"hamster",
			"wolf",
			"bear",
			"panda_face",
			"pig_nose",
			"feet",
			"chipmunk",
			"eyes",
			"eye",
			"ear",
			"nose",
			"lips",
			"tongue",
			"point_up_2",
			"point_down",
			"point_left",
			"point_right",
			"facepunch",
			"wave",
			"ok_hand",
			"+1",
			"-1",
			"clap",
			"open_hands",
			"crown",
			"womans_hat",
			"eyeglasses",
			"necktie",
			"shirt",
			"jeans",
			"dress",
			"kimono",
			"bikini",
			"womans_clothes",
			"purse",
			"handbag",
			"pouch",
			"mans_shoe",
			"athletic_shoe",
			"high_heel",
			"sandal",
			"boot",
			"footprints",
			"bust_in_silhouette",
			"busts_in_silhouette",
			"boy",
			"girl",
			"man",
			"woman",
			"family",
			"couple",
			"two_men_holding_hands",
			"two_women_holding_hands",
			"cop",
			"dancers",
			"bride_with_veil",
			"person_with_blond_hair",
			"man_with_gua_pi_mao",
			"man_with_turban",
			"older_man",
			"older_woman",
			"baby",
			"construction_worker",
			"princess",
			"japanese_ogre",
			"japanese_goblin",
			"ghost",
			"angel",
			"alien",
			"space_invader",
			"imp",
			"skull",
			"information_desk_person",
			"guardsman",
			"dancer",
			"lipstick",
			"nail_care",
			"massage",
			"haircut",
			"barber",
			"syringe",
			"pill",
			"kiss",
			"love_letter",
			"ring",
			"gem",
			"couplekiss",
			"bouquet",
			"couple_with_heart",
			"wedding",
			"heartbeat",
			"broken_heart",
			"two_hearts",
			"sparkling_heart",
			"heartpulse",
			"cupid",
			"blue_heart",
			"green_heart",
			"yellow_heart",
			"purple_heart",
			"gift_heart",
			"revolving_hearts",
			"heart_decoration",
			"diamond_shape_with_a_dot_inside",
			"bulb",
			"anger",
			"bomb",
			"zzz",
			"boom",
			"sweat_drops",
			"droplet",
			"dash",
			"hankey",
			"muscle",
			"dizzy",
			"speech_balloon",
			"thought_balloon",
			"white_flower",
			"100",
			"moneybag",
			"currency_exchange",
			"heavy_dollar_sign",
			"credit_card",
			"yen",
			"dollar",
			"euro",
			"pound",
			"money_with_wings",
			"chart",
			"seat",
			"computer",
			"briefcase",
			"minidisc",
			"floppy_disk",
			"cd",
			"dvd",
			"file_folder",
			"open_file_folder",
			"page_with_curl",
			"page_facing_up",
			"date",
			"calendar",
			"card_index",
			"chart_with_upwards_trend",
			"chart_with_downwards_trend",
			"bar_chart",
			"clipboard",
			"pushpin",
			"round_pushpin",
			"paperclip",
			"straight_ruler",
			"triangular_ruler",
			"bookmark_tabs",
			"ledger",
			"notebook",
			"notebook_with_decorative_cover",
			"closed_book",
			"book",
			"green_book",
			"blue_book",
			"orange_book",
			"books",
			"name_badge",
			"scroll",
			"memo",
			"telephone_receiver",
			"pager",
			"fax",
			"satellite",
			"loudspeaker",
			"mega",
			"outbox_tray",
			"inbox_tray",
			"package",
			"e-mail",
			"incoming_envelope",
			"envelope_with_arrow",
			"mailbox_closed",
			"mailbox",
			"mailbox_with_mail",
			"mailbox_with_no_mail",
			"postbox",
			"postal_horn",
			"newspaper",
			"iphone",
			"calling",
			"vibration_mode",
			"mobile_phone_off",
			"no_mobile_phones",
			"signal_strength",
			"camera",
			"camera_with_flash",
			"video_camera",
			"tv",
			"radio",
			"vhs",
			"film_projector",
			"prayer_beads",
			"twisted_rightwards_arrows",
			"repeat",
			"repeat_one",
			"arrows_clockwise",
			"arrows_counterclockwise",
			"low_brightness",
			"high_brightness",
			"mute",
			"speaker",
			"sound",
			"loud_sound",
			"battery",
			"electric_plug",
			"mag",
			"mag_right",
			"lock_with_ink_pen",
			"closed_lock_with_key",
			"key",
			"lock",
			"unlock",
			"bell",
			"no_bell",
			"bookmark",
			"link",
			"radio_button",
			"back",
			"end",
			"on",
			"soon",
			"top",
			"underage",
			"keycap_ten",
			"capital_abcd",
			"abcd",
			"1234",
			"symbols",
			"abc",
			"fire",
			"flashlight",
			"wrench",
			"hammer",
			"nut_and_bolt",
			"hocho",
			"gun",
			"microscope",
			"telescope",
			"crystal_ball",
			"six_pointed_star",
			"beginner",
			"trident",
			"black_square_button",
			"white_square_button",
			"red_circle",
			"large_blue_circle",
			"large_orange_diamond",
			"large_blue_diamond",
			"small_orange_diamond",
			"small_blue_diamond",
			"small_red_triangle",
			"small_red_triangle_down",
			"arrow_up_small",
			"arrow_down_small",
			"om_symbol",
			"dove_of_peace",
			"kaaba",
			"mosque",
			"synagogue",
			"menorah_with_nine_branches",
			"clock1",
			"clock2",
			"clock3",
			"clock4",
			"clock5",
			"clock6",
			"clock7",
			"clock8",
			"clock9",
			"clock10",
			"clock11",
			"clock12",
			"clock130",
			"clock230",
			"clock330",
			"clock430",
			"clock530",
			"clock630",
			"clock730",
			"clock830",
			"clock930",
			"clock1030",
			"clock1130",
			"clock1230",
			"candle",
			"mantelpiece_clock",
			"hole",
			"man_in_business_suit_levitating",
			"sleuth_or_spy",
			"dark_sunglasses",
			"spider",
			"spider_web",
			"joystick",
			"linked_paperclips",
			"lower_left_ballpoint_pen",
			"lower_left_fountain_pen",
			"lower_left_paintbrush",
			"lower_left_crayon",
			"raised_hand_with_fingers_splayed",
			"middle_finger",
			"spock-hand",
			"desktop_computer",
			"printer",
			"three_button_mouse",
			"trackball",
			"frame_with_picture",
			"card_index_dividers",
			"card_file_box",
			"file_cabinet",
			"wastebasket",
			"spiral_note_pad",
			"spiral_calendar_pad",
			"compression",
			"old_key",
			"rolled_up_newspaper",
			"dagger_knife",
			"speaking_head_in_silhouette",
			"left_speech_bubble",
			"right_anger_bubble",
			"ballot_box_with_ballot",
			"world_map",
			"mount_fuji",
			"tokyo_tower",
			"statue_of_liberty",
			"japan",
			"moyai",
			"grinning",
			"grin",
			"joy",
			"smiley",
			"smile",
			"sweat_smile",
			"laughing",
			"innocent",
			"smiling_imp",
			"wink",
			"blush",
			"yum",
			"relieved",
			"heart_eyes",
			"sunglasses",
			"smirk",
			"neutral_face",
			"expressionless",
			"unamused",
			"sweat",
			"pensive",
			"confused",
			"confounded",
			"kissing",
			"kissing_heart",
			"kissing_smiling_eyes",
			"kissing_closed_eyes",
			"stuck_out_tongue",
			"stuck_out_tongue_winking_eye",
			"stuck_out_tongue_closed_eyes",
			"disappointed",
			"worried",
			"angry",
			"rage",
			"cry",
			"persevere",
			"triumph",
			"disappointed_relieved",
			"frowning",
			"anguished",
			"fearful",
			"weary",
			"sleepy",
			"tired_face",
			"grimacing",
			"sob",
			"open_mouth",
			"hushed",
			"cold_sweat",
			"scream",
			"astonished",
			"flushed",
			"sleeping",
			"dizzy_face",
			"no_mouth",
			"mask",
			"smile_cat",
			"joy_cat",
			"smiley_cat",
			"heart_eyes_cat",
			"smirk_cat",
			"kissing_cat",
			"pouting_cat",
			"crying_cat_face",
			"scream_cat",
			"slightly_frowning_face",
			"slightly_smiling_face",
			"upside_down_face",
			"face_with_rolling_eyes",
			"no_good",
			"ok_woman",
			"bow",
			"see_no_evil",
			"hear_no_evil",
			"speak_no_evil",
			"raising_hand",
			"raised_hands",
			"person_frowning",
			"person_with_pouting_face",
			"pray",
			"rocket",
			"helicopter",
			"steam_locomotive",
			"railway_car",
			"bullettrain_side",
			"bullettrain_front",
			"train2",
			"metro",
			"light_rail",
			"station",
			"tram",
			"train",
			"bus",
			"oncoming_bus",
			"trolleybus",
			"busstop",
			"minibus",
			"ambulance",
			"fire_engine",
			"police_car",
			"oncoming_police_car",
			"taxi",
			"oncoming_taxi",
			"car",
			"oncoming_automobile",
			"blue_car",
			"truck",
			"articulated_lorry",
			"tractor",
			"monorail",
			"mountain_railway",
			"suspension_railway",
			"mountain_cableway",
			"aerial_tramway",
			"ship",
			"rowboat",
			"speedboat",
			"traffic_light",
			"vertical_traffic_light",
			"construction",
			"rotating_light",
			"triangular_flag_on_post",
			"door",
			"no_entry_sign",
			"smoking",
			"no_smoking",
			"put_litter_in_its_place",
			"do_not_litter",
			"potable_water",
			"non-potable_water",
			"bike",
			"no_bicycles",
			"bicyclist",
			"mountain_bicyclist",
			"walking",
			"no_pedestrians",
			"children_crossing",
			"mens",
			"womens",
			"restroom",
			"baby_symbol",
			"toilet",
			"wc",
			"shower",
			"bath",
			"bathtub",
			"passport_control",
			"customs",
			"baggage_claim",
			"left_luggage",
			"couch_and_lamp",
			"sleeping_accommodation",
			"shopping_bags",
			"bellhop_bell",
			"bed",
			"place_of_worship",
			"hammer_and_wrench",
			"shield",
			"oil_drum",
			"motorway",
			"railway_track",
			"motor_boat",
			"small_airplane",
			"airplane_departure",
			"airplane_arriving",
			"satellite2",
			"passenger_ship",
			"zipper_mouth_face",
			"money_mouth_face",
			"face_with_thermometer",
			"nerd_face",
			"thinking_face",
			"face_with_head_bandage",
			"robot_face",
			"hugging_face",
			"the_horns",
			"crab",
			"lion_face",
			"scorpion",
			"turkey",
			"unicorn_face",
			"cheese_wedge",
			"hash",
			"keycap_star",
			"zero",
			"one",
			"two",
			"three",
			"four",
			"five",
			"six",
			"seven",
			"eight",
			"nine",
			"flag-ac",
			"flag-ad",
			"flag-ae",
			"flag-af",
			"flag-ag",
			"flag-ai",
			"flag-al",
			"flag-am",
			"flag-ao",
			"flag-aq",
			"flag-ar",
			"flag-as",
			"flag-at",
			"flag-au",
			"flag-aw",
			"flag-ax",
			"flag-az",
			"flag-ba",
			"flag-bb",
			"flag-bd",
			"flag-be",
			"flag-bf",
			"flag-bg",
			"flag-bh",
			"flag-bi",
			"flag-bj",
			"flag-bl",
			"flag-bm",
			"flag-bn",
			"flag-bo",
			"flag-bq",
			"flag-br",
			"flag-bs",
			"flag-bt",
			"flag-bv",
			"flag-bw",
			"flag-by",
			"flag-bz",
			"flag-ca",
			"flag-cc",
			"flag-cd",
			"flag-cf",
			"flag-cg",
			"flag-ch",
			"flag-ci",
			"flag-ck",
			"flag-cl",
			"flag-cm",
			"flag-cn",
			"flag-co",
			"flag-cp",
			"flag-cr",
			"flag-cu",
			"flag-cv",
			"flag-cw",
			"flag-cx",
			"flag-cy",
			"flag-cz",
			"flag-de",
			"flag-dg",
			"flag-dj",
			"flag-dk",
			"flag-dm",
			"flag-do",
			"flag-dz",
			"flag-ea",
			"flag-ec",
			"flag-ee",
			"flag-eg",
			"flag-eh",
			"flag-er",
			"flag-es",
			"flag-et",
			"flag-eu",
			"flag-fi",
			"flag-fj",
			"flag-fk",
			"flag-fm",
			"flag-fo",
			"flag-fr",
			"flag-ga",
			"flag-gb",
			"flag-gd",
			"flag-ge",
			"flag-gf",
			"flag-gg",
			"flag-gh",
			"flag-gi",
			"flag-gl",
			"flag-gm",
			"flag-gn",
			"flag-gp",
			"flag-gq",
			"flag-gr",
			"flag-gs",
			"flag-gt",
			"flag-gu",
			"flag-gw",
			"flag-gy",
			"flag-hk",
			"flag-hm",
			"flag-hn",
			"flag-hr",
			"flag-ht",
			"flag-hu",
			"flag-ic",
			"flag-id",
			"flag-ie",
			"flag-il",
			"flag-im",
			"flag-in",
			"flag-io",
			"flag-iq",
			"flag-ir",
			"flag-is",
			"flag-it",
			"flag-je",
			"flag-jm",
			"flag-jo",
			"flag-jp",
			"flag-ke",
			"flag-kg",
			"flag-kh",
			"flag-ki",
			"flag-km",
			"flag-kn",
			"flag-kp",
			"flag-kr",
			"flag-kw",
			"flag-ky",
			"flag-kz",
			"flag-la",
			"flag-lb",
			"flag-lc",
			"flag-li",
			"flag-lk",
			"flag-lr",
			"flag-ls",
			"flag-lt",
			"flag-lu",
			"flag-lv",
			"flag-ly",
			"flag-ma",
			"flag-mc",
			"flag-md",
			"flag-me",
			"flag-mf",
			"flag-mg",
			"flag-mh",
			"flag-mk",
			"flag-ml",
			"flag-mm",
			"flag-mn",
			"flag-mo",
			"flag-mp",
			"flag-mq",
			"flag-mr",
			"flag-ms",
			"flag-mt",
			"flag-mu",
			"flag-mv",
			"flag-mw",
			"flag-mx",
			"flag-my",
			"flag-mz",
			"flag-na",
			"flag-nc",
			"flag-ne",
			"flag-nf",
			"flag-ng",
			"flag-ni",
			"flag-nl",
			"flag-no",
			"flag-np",
			"flag-nr",
			"flag-nu",
			"flag-nz",
			"flag-om",
			"flag-pa",
			"flag-pe",
			"flag-pf",
			"flag-pg",
			"flag-ph",
			"flag-pk",
			"flag-pl",
			"flag-pm",
			"flag-pn",
			"flag-pr",
			"flag-ps",
			"flag-pt",
			"flag-pw",
			"flag-py",
			"flag-qa",
			"flag-re",
			"flag-ro",
			"flag-rs",
			"flag-ru",
			"flag-rw",
			"flag-sa",
			"flag-sb",
			"flag-sc",
			"flag-sd",
			"flag-se",
			"flag-sg",
			"flag-sh",
			"flag-si",
			"flag-sj",
			"flag-sk",
			"flag-sl",
			"flag-sm",
			"flag-sn",
			"flag-so",
			"flag-sr",
			"flag-ss",
			"flag-st",
			"flag-sv",
			"flag-sx",
			"flag-sy",
			"flag-sz",
			"flag-ta",
			"flag-tc",
			"flag-td",
			"flag-tf",
			"flag-tg",
			"flag-th",
			"flag-tj",
			"flag-tk",
			"flag-tl",
			"flag-tm",
			"flag-tn",
			"flag-to",
			"flag-tr",
			"flag-tt",
			"flag-tv",
			"flag-tw",
			"flag-tz",
			"flag-ua",
			"flag-ug",
			"flag-um",
			"flag-us",
			"flag-uy",
			"flag-uz",
			"flag-va",
			"flag-vc",
			"flag-ve",
			"flag-vg",
			"flag-vi",
			"flag-vn",
			"flag-vu",
			"flag-wf",
			"flag-ws",
			"flag-xk",
			"flag-ye",
			"flag-yt",
			"flag-za",
			"flag-zm",
			"flag-zw",
			"man-man-boy",
			"man-man-boy-boy",
			"man-man-girl",
			"man-man-girl-boy",
			"man-man-girl-girl",
			"man-woman-boy-boy",
			"man-woman-girl",
			"man-woman-girl-boy",
			"man-woman-girl-girl",
			"man-heart-man",
			"man-kiss-man",
			"woman-woman-boy",
			"woman-woman-boy-boy",
			"woman-woman-girl",
			"woman-woman-girl-boy",
			"woman-woman-girl-girl",
			"woman-heart-woman",
			"woman-kiss-woman"
		};

		/// <summary>
		/// Tries to get information about an emoji, given its short name.
		/// </summary>
		/// <param name="ShortName">Emoji short name.</param>
		/// <param name="Emoji">Reference to emoji, if found, null otherwise.</param>
		/// <returns>If the emoji was reconized.</returns>
		public static bool TryGetEmoji(string ShortName, out EmojiInfo Emoji)
		{
			if (ShortName.StartsWith(":"))
				ShortName = ShortName.Substring(1);

			if (ShortName.EndsWith(":"))
				ShortName = ShortName.Substring(0, ShortName.Length - 1);

			Emoji = null;

			switch (ShortName)
			{
				case "copyright": Emoji = Emoji_copyright; break;
				case "registered": Emoji = Emoji_registered; break;
				case "bangbang": Emoji = Emoji_bangbang; break;
				case "interrobang": Emoji = Emoji_interrobang; break;
				case "tm": Emoji = Emoji_tm; break;
				case "information_source": Emoji = Emoji_information_source; break;
				case "left_right_arrow": Emoji = Emoji_left_right_arrow; break;
				case "arrow_up_down": Emoji = Emoji_arrow_up_down; break;
				case "arrow_upper_left": Emoji = Emoji_arrow_upper_left; break;
				case "arrow_upper_right": Emoji = Emoji_arrow_upper_right; break;
				case "arrow_lower_right": Emoji = Emoji_arrow_lower_right; break;
				case "arrow_lower_left": Emoji = Emoji_arrow_lower_left; break;
				case "leftwards_arrow_with_hook": Emoji = Emoji_leftwards_arrow_with_hook; break;
				case "arrow_right_hook": Emoji = Emoji_arrow_right_hook; break;
				case "watch": Emoji = Emoji_watch; break;
				case "hourglass": Emoji = Emoji_hourglass; break;
				case "keyboard": Emoji = Emoji_keyboard; break;
				case "fast_forward": Emoji = Emoji_fast_forward; break;
				case "rewind": Emoji = Emoji_rewind; break;
				case "arrow_double_up": Emoji = Emoji_arrow_double_up; break;
				case "arrow_double_down": Emoji = Emoji_arrow_double_down; break;
				case "black_right_pointing_double_triangle_with_vertical_bar": Emoji = Emoji_black_right_pointing_double_triangle_with_vertical_bar; break;
				case "black_left_pointing_double_triangle_with_vertical_bar": Emoji = Emoji_black_left_pointing_double_triangle_with_vertical_bar; break;
				case "black_right_pointing_triangle_with_double_vertical_bar": Emoji = Emoji_black_right_pointing_triangle_with_double_vertical_bar; break;
				case "alarm_clock": Emoji = Emoji_alarm_clock; break;
				case "stopwatch": Emoji = Emoji_stopwatch; break;
				case "timer_clock": Emoji = Emoji_timer_clock; break;
				case "hourglass_flowing_sand": Emoji = Emoji_hourglass_flowing_sand; break;
				case "double_vertical_bar": Emoji = Emoji_double_vertical_bar; break;
				case "black_square_for_stop": Emoji = Emoji_black_square_for_stop; break;
				case "black_circle_for_record": Emoji = Emoji_black_circle_for_record; break;
				case "m": Emoji = Emoji_m; break;
				case "black_small_square": Emoji = Emoji_black_small_square; break;
				case "white_small_square": Emoji = Emoji_white_small_square; break;
				case "arrow_forward": Emoji = Emoji_arrow_forward; break;
				case "arrow_backward": Emoji = Emoji_arrow_backward; break;
				case "white_medium_square": Emoji = Emoji_white_medium_square; break;
				case "black_medium_square": Emoji = Emoji_black_medium_square; break;
				case "white_medium_small_square": Emoji = Emoji_white_medium_small_square; break;
				case "black_medium_small_square": Emoji = Emoji_black_medium_small_square; break;
				case "sunny": Emoji = Emoji_sunny; break;
				case "cloud": Emoji = Emoji_cloud; break;
				case "umbrella": Emoji = Emoji_umbrella; break;
				case "showman": Emoji = Emoji_showman; break;
				case "comet": Emoji = Emoji_comet; break;
				case "phone": Emoji = Emoji_phone; break;
				case "ballot_box_with_check": Emoji = Emoji_ballot_box_with_check; break;
				case "umbrella_rain": Emoji = Emoji_umbrella_rain; break;
				case "coffee": Emoji = Emoji_coffee; break;
				case "shamrock": Emoji = Emoji_shamrock; break;
				case "point_up": Emoji = Emoji_point_up; break;
				case "skull_and_crossbones": Emoji = Emoji_skull_and_crossbones; break;
				case "radioactive_sign": Emoji = Emoji_radioactive_sign; break;
				case "biohazard_sign": Emoji = Emoji_biohazard_sign; break;
				case "orthodox_cross": Emoji = Emoji_orthodox_cross; break;
				case "star_and_crescent": Emoji = Emoji_star_and_crescent; break;
				case "peace_symbol": Emoji = Emoji_peace_symbol; break;
				case "yin_yang": Emoji = Emoji_yin_yang; break;
				case "wheel_of_dharma": Emoji = Emoji_wheel_of_dharma; break;
				case "white_frowning_face": Emoji = Emoji_white_frowning_face; break;
				case "relaxed": Emoji = Emoji_relaxed; break;
				case "aries": Emoji = Emoji_aries; break;
				case "taurus": Emoji = Emoji_taurus; break;
				case "gemini": Emoji = Emoji_gemini; break;
				case "cancer": Emoji = Emoji_cancer; break;
				case "leo": Emoji = Emoji_leo; break;
				case "virgo": Emoji = Emoji_virgo; break;
				case "libra": Emoji = Emoji_libra; break;
				case "scorpius": Emoji = Emoji_scorpius; break;
				case "sagittarius": Emoji = Emoji_sagittarius; break;
				case "capricorn": Emoji = Emoji_capricorn; break;
				case "aquarius": Emoji = Emoji_aquarius; break;
				case "pisces": Emoji = Emoji_pisces; break;
				case "spades": Emoji = Emoji_spades; break;
				case "clubs": Emoji = Emoji_clubs; break;
				case "hearts": Emoji = Emoji_hearts; break;
				case "diamonds": Emoji = Emoji_diamonds; break;
				case "hotsprings": Emoji = Emoji_hotsprings; break;
				case "recycle": Emoji = Emoji_recycle; break;
				case "wheelchair": Emoji = Emoji_wheelchair; break;
				case "hammer_and_pick": Emoji = Emoji_hammer_and_pick; break;
				case "anchor": Emoji = Emoji_anchor; break;
				case "crossed_swords": Emoji = Emoji_crossed_swords; break;
				case "scales": Emoji = Emoji_scales; break;
				case "alembic": Emoji = Emoji_alembic; break;
				case "gear": Emoji = Emoji_gear; break;
				case "atom_symbol": Emoji = Emoji_atom_symbol; break;
				case "fleur_de_lis": Emoji = Emoji_fleur_de_lis; break;
				case "warning": Emoji = Emoji_warning; break;
				case "zap": Emoji = Emoji_zap; break;
				case "white_circle": Emoji = Emoji_white_circle; break;
				case "black_circle": Emoji = Emoji_black_circle; break;
				case "coffin": Emoji = Emoji_coffin; break;
				case "funeral_urn": Emoji = Emoji_funeral_urn; break;
				case "soccer": Emoji = Emoji_soccer; break;
				case "baseball": Emoji = Emoji_baseball; break;
				case "snowman": Emoji = Emoji_snowman; break;
				case "partly_sunny": Emoji = Emoji_partly_sunny; break;
				case "thunder_cloud_and_rain": Emoji = Emoji_thunder_cloud_and_rain; break;
				case "ophiuchus": Emoji = Emoji_ophiuchus; break;
				case "pick": Emoji = Emoji_pick; break;
				case "helmet_with_white_cross": Emoji = Emoji_helmet_with_white_cross; break;
				case "chains": Emoji = Emoji_chains; break;
				case "no_entry": Emoji = Emoji_no_entry; break;
				case "shinto_shrine": Emoji = Emoji_shinto_shrine; break;
				case "church": Emoji = Emoji_church; break;
				case "mountain": Emoji = Emoji_mountain; break;
				case "umbrella_on_ground": Emoji = Emoji_umbrella_on_ground; break;
				case "fountain": Emoji = Emoji_fountain; break;
				case "golf": Emoji = Emoji_golf; break;
				case "ferry": Emoji = Emoji_ferry; break;
				case "boat": Emoji = Emoji_boat; break;
				case "skier": Emoji = Emoji_skier; break;
				case "ice_skate": Emoji = Emoji_ice_skate; break;
				case "person_with_ball": Emoji = Emoji_person_with_ball; break;
				case "tent": Emoji = Emoji_tent; break;
				case "fuelpump": Emoji = Emoji_fuelpump; break;
				case "scissors": Emoji = Emoji_scissors; break;
				case "white_check_mark": Emoji = Emoji_white_check_mark; break;
				case "airplane": Emoji = Emoji_airplane; break;
				case "email": Emoji = Emoji_email; break;
				case "fist": Emoji = Emoji_fist; break;
				case "hand": Emoji = Emoji_hand; break;
				case "v": Emoji = Emoji_v; break;
				case "writing_hand": Emoji = Emoji_writing_hand; break;
				case "pencil2": Emoji = Emoji_pencil2; break;
				case "black_nib": Emoji = Emoji_black_nib; break;
				case "heavy_check_mark": Emoji = Emoji_heavy_check_mark; break;
				case "heavy_multiplication_x": Emoji = Emoji_heavy_multiplication_x; break;
				case "latin_cross": Emoji = Emoji_latin_cross; break;
				case "star_of_david": Emoji = Emoji_star_of_david; break;
				case "sparkles": Emoji = Emoji_sparkles; break;
				case "eight_spoked_asterisk": Emoji = Emoji_eight_spoked_asterisk; break;
				case "eight_pointed_black_star": Emoji = Emoji_eight_pointed_black_star; break;
				case "snowflake": Emoji = Emoji_snowflake; break;
				case "sparkle": Emoji = Emoji_sparkle; break;
				case "x": Emoji = Emoji_x; break;
				case "negative_squared_cross_mark": Emoji = Emoji_negative_squared_cross_mark; break;
				case "question": Emoji = Emoji_question; break;
				case "grey_question": Emoji = Emoji_grey_question; break;
				case "grey_exclamation": Emoji = Emoji_grey_exclamation; break;
				case "exclamation": Emoji = Emoji_exclamation; break;
				case "heavy_heart_exclamation_mark_ornament": Emoji = Emoji_heavy_heart_exclamation_mark_ornament; break;
				case "heart": Emoji = Emoji_heart; break;
				case "heavy_plus_sign": Emoji = Emoji_heavy_plus_sign; break;
				case "heavy_minus_sign": Emoji = Emoji_heavy_minus_sign; break;
				case "heavy_division_sign": Emoji = Emoji_heavy_division_sign; break;
				case "arrow_right": Emoji = Emoji_arrow_right; break;
				case "curly_loop": Emoji = Emoji_curly_loop; break;
				case "loop": Emoji = Emoji_loop; break;
				case "arrow_heading_up": Emoji = Emoji_arrow_heading_up; break;
				case "arrow_heading_down": Emoji = Emoji_arrow_heading_down; break;
				case "arrow_left": Emoji = Emoji_arrow_left; break;
				case "arrow_up": Emoji = Emoji_arrow_up; break;
				case "arrow_down": Emoji = Emoji_arrow_down; break;
				case "black_large_square": Emoji = Emoji_black_large_square; break;
				case "white_large_square": Emoji = Emoji_white_large_square; break;
				case "star": Emoji = Emoji_star; break;
				case "o": Emoji = Emoji_o; break;
				case "wavy_dash": Emoji = Emoji_wavy_dash; break;
				case "part_alternation_mark": Emoji = Emoji_part_alternation_mark; break;
				case "congratulations": Emoji = Emoji_congratulations; break;
				case "secret": Emoji = Emoji_secret; break;
				case "mahjong": Emoji = Emoji_mahjong; break;
				case "black_joker": Emoji = Emoji_black_joker; break;
				case "a": Emoji = Emoji_a; break;
				case "b": Emoji = Emoji_b; break;
				case "o2": Emoji = Emoji_o2; break;
				case "parking": Emoji = Emoji_parking; break;
				case "ab": Emoji = Emoji_ab; break;
				case "cl": Emoji = Emoji_cl; break;
				case "cool": Emoji = Emoji_cool; break;
				case "free": Emoji = Emoji_free; break;
				case "id": Emoji = Emoji_id; break;
				case "new": Emoji = Emoji_new; break;
				case "ng": Emoji = Emoji_ng; break;
				case "ok": Emoji = Emoji_ok; break;
				case "sos": Emoji = Emoji_sos; break;
				case "up": Emoji = Emoji_up; break;
				case "vs": Emoji = Emoji_vs; break;
				case "koko": Emoji = Emoji_koko; break;
				case "sa": Emoji = Emoji_sa; break;
				case "u7121": Emoji = Emoji_u7121; break;
				case "u6307": Emoji = Emoji_u6307; break;
				case "u7981": Emoji = Emoji_u7981; break;
				case "u7a7a": Emoji = Emoji_u7a7a; break;
				case "u5408": Emoji = Emoji_u5408; break;
				case "u6e80": Emoji = Emoji_u6e80; break;
				case "u6709": Emoji = Emoji_u6709; break;
				case "u6708": Emoji = Emoji_u6708; break;
				case "u7533": Emoji = Emoji_u7533; break;
				case "u5272": Emoji = Emoji_u5272; break;
				case "u55b6": Emoji = Emoji_u55b6; break;
				case "ideograph_advantage": Emoji = Emoji_ideograph_advantage; break;
				case "accept": Emoji = Emoji_accept; break;
				case "cyclone": Emoji = Emoji_cyclone; break;
				case "foggy": Emoji = Emoji_foggy; break;
				case "closed_umbrella": Emoji = Emoji_closed_umbrella; break;
				case "night_with_stars": Emoji = Emoji_night_with_stars; break;
				case "sunrise_over_mountains": Emoji = Emoji_sunrise_over_mountains; break;
				case "sunrise": Emoji = Emoji_sunrise; break;
				case "city_sunset": Emoji = Emoji_city_sunset; break;
				case "city_sunrise": Emoji = Emoji_city_sunrise; break;
				case "rainbow": Emoji = Emoji_rainbow; break;
				case "bridge_at_night": Emoji = Emoji_bridge_at_night; break;
				case "ocean": Emoji = Emoji_ocean; break;
				case "volcano": Emoji = Emoji_volcano; break;
				case "milky_way": Emoji = Emoji_milky_way; break;
				case "earth_africa": Emoji = Emoji_earth_africa; break;
				case "earth_americas": Emoji = Emoji_earth_americas; break;
				case "earth_asia": Emoji = Emoji_earth_asia; break;
				case "globe_with_meridians": Emoji = Emoji_globe_with_meridians; break;
				case "new_moon": Emoji = Emoji_new_moon; break;
				case "waxing_crescent_moon": Emoji = Emoji_waxing_crescent_moon; break;
				case "first_quarter_moon": Emoji = Emoji_first_quarter_moon; break;
				case "moon": Emoji = Emoji_moon; break;
				case "full_moon": Emoji = Emoji_full_moon; break;
				case "waning_gibbous_moon": Emoji = Emoji_waning_gibbous_moon; break;
				case "last_quarter_moon": Emoji = Emoji_last_quarter_moon; break;
				case "waning_crescent_moon": Emoji = Emoji_waning_crescent_moon; break;
				case "crescent_moon": Emoji = Emoji_crescent_moon; break;
				case "new_moon_with_face": Emoji = Emoji_new_moon_with_face; break;
				case "first_quarter_moon_with_face": Emoji = Emoji_first_quarter_moon_with_face; break;
				case "last_quarter_moon_with_face": Emoji = Emoji_last_quarter_moon_with_face; break;
				case "full_moon_with_face": Emoji = Emoji_full_moon_with_face; break;
				case "sun_with_face": Emoji = Emoji_sun_with_face; break;
				case "star2": Emoji = Emoji_star2; break;
				case "stars": Emoji = Emoji_stars; break;
				case "thermometer": Emoji = Emoji_thermometer; break;
				case "mostly_sunny": Emoji = Emoji_mostly_sunny; break;
				case "barely_sunny": Emoji = Emoji_barely_sunny; break;
				case "partly_sunny_rain": Emoji = Emoji_partly_sunny_rain; break;
				case "rain_cloud": Emoji = Emoji_rain_cloud; break;
				case "snow_cloud": Emoji = Emoji_snow_cloud; break;
				case "lightning": Emoji = Emoji_lightning; break;
				case "tornado": Emoji = Emoji_tornado; break;
				case "fog": Emoji = Emoji_fog; break;
				case "wind_blowing_face": Emoji = Emoji_wind_blowing_face; break;
				case "hotdog": Emoji = Emoji_hotdog; break;
				case "taco": Emoji = Emoji_taco; break;
				case "burrito": Emoji = Emoji_burrito; break;
				case "chestnut": Emoji = Emoji_chestnut; break;
				case "seedling": Emoji = Emoji_seedling; break;
				case "evergreen_tree": Emoji = Emoji_evergreen_tree; break;
				case "deciduous_tree": Emoji = Emoji_deciduous_tree; break;
				case "palm_tree": Emoji = Emoji_palm_tree; break;
				case "cactus": Emoji = Emoji_cactus; break;
				case "hot_pepper": Emoji = Emoji_hot_pepper; break;
				case "tulip": Emoji = Emoji_tulip; break;
				case "cherry_blossom": Emoji = Emoji_cherry_blossom; break;
				case "rose": Emoji = Emoji_rose; break;
				case "hibiscus": Emoji = Emoji_hibiscus; break;
				case "sunflower": Emoji = Emoji_sunflower; break;
				case "blossom": Emoji = Emoji_blossom; break;
				case "corn": Emoji = Emoji_corn; break;
				case "ear_of_rice": Emoji = Emoji_ear_of_rice; break;
				case "herb": Emoji = Emoji_herb; break;
				case "four_leaf_clover": Emoji = Emoji_four_leaf_clover; break;
				case "maple_leaf": Emoji = Emoji_maple_leaf; break;
				case "fallen_leaf": Emoji = Emoji_fallen_leaf; break;
				case "leaves": Emoji = Emoji_leaves; break;
				case "mushroom": Emoji = Emoji_mushroom; break;
				case "tomato": Emoji = Emoji_tomato; break;
				case "eggplant": Emoji = Emoji_eggplant; break;
				case "grapes": Emoji = Emoji_grapes; break;
				case "melon": Emoji = Emoji_melon; break;
				case "watermelon": Emoji = Emoji_watermelon; break;
				case "tangerine": Emoji = Emoji_tangerine; break;
				case "lemon": Emoji = Emoji_lemon; break;
				case "banana": Emoji = Emoji_banana; break;
				case "pineapple": Emoji = Emoji_pineapple; break;
				case "apple": Emoji = Emoji_apple; break;
				case "green_apple": Emoji = Emoji_green_apple; break;
				case "pear": Emoji = Emoji_pear; break;
				case "peach": Emoji = Emoji_peach; break;
				case "cherries": Emoji = Emoji_cherries; break;
				case "strawberry": Emoji = Emoji_strawberry; break;
				case "hamburger": Emoji = Emoji_hamburger; break;
				case "pizza": Emoji = Emoji_pizza; break;
				case "meat_on_bone": Emoji = Emoji_meat_on_bone; break;
				case "poultry_leg": Emoji = Emoji_poultry_leg; break;
				case "rice_cracker": Emoji = Emoji_rice_cracker; break;
				case "rice_ball": Emoji = Emoji_rice_ball; break;
				case "rice": Emoji = Emoji_rice; break;
				case "curry": Emoji = Emoji_curry; break;
				case "ramen": Emoji = Emoji_ramen; break;
				case "spaghetti": Emoji = Emoji_spaghetti; break;
				case "bread": Emoji = Emoji_bread; break;
				case "fries": Emoji = Emoji_fries; break;
				case "sweet_potato": Emoji = Emoji_sweet_potato; break;
				case "dango": Emoji = Emoji_dango; break;
				case "oden": Emoji = Emoji_oden; break;
				case "sushi": Emoji = Emoji_sushi; break;
				case "fried_shrimp": Emoji = Emoji_fried_shrimp; break;
				case "fish_cake": Emoji = Emoji_fish_cake; break;
				case "icecream": Emoji = Emoji_icecream; break;
				case "shaved_ice": Emoji = Emoji_shaved_ice; break;
				case "ice_cream": Emoji = Emoji_ice_cream; break;
				case "doughnut": Emoji = Emoji_doughnut; break;
				case "cookie": Emoji = Emoji_cookie; break;
				case "chocolate_bar": Emoji = Emoji_chocolate_bar; break;
				case "candy": Emoji = Emoji_candy; break;
				case "lollipop": Emoji = Emoji_lollipop; break;
				case "custard": Emoji = Emoji_custard; break;
				case "honey_pot": Emoji = Emoji_honey_pot; break;
				case "cake": Emoji = Emoji_cake; break;
				case "bento": Emoji = Emoji_bento; break;
				case "stew": Emoji = Emoji_stew; break;
				case "egg": Emoji = Emoji_egg; break;
				case "fork_and_knife": Emoji = Emoji_fork_and_knife; break;
				case "tea": Emoji = Emoji_tea; break;
				case "sake": Emoji = Emoji_sake; break;
				case "wine_glass": Emoji = Emoji_wine_glass; break;
				case "cocktail": Emoji = Emoji_cocktail; break;
				case "tropical_drink": Emoji = Emoji_tropical_drink; break;
				case "beer": Emoji = Emoji_beer; break;
				case "beers": Emoji = Emoji_beers; break;
				case "baby_bottle": Emoji = Emoji_baby_bottle; break;
				case "knife_fork_plate": Emoji = Emoji_knife_fork_plate; break;
				case "champagne": Emoji = Emoji_champagne; break;
				case "popcorn": Emoji = Emoji_popcorn; break;
				case "ribbon": Emoji = Emoji_ribbon; break;
				case "gift": Emoji = Emoji_gift; break;
				case "birthday": Emoji = Emoji_birthday; break;
				case "jack_o_lantern": Emoji = Emoji_jack_o_lantern; break;
				case "christmas_tree": Emoji = Emoji_christmas_tree; break;
				case "santa": Emoji = Emoji_santa; break;
				case "fireworks": Emoji = Emoji_fireworks; break;
				case "sparkler": Emoji = Emoji_sparkler; break;
				case "balloon": Emoji = Emoji_balloon; break;
				case "tada": Emoji = Emoji_tada; break;
				case "confetti_ball": Emoji = Emoji_confetti_ball; break;
				case "tanabata_tree": Emoji = Emoji_tanabata_tree; break;
				case "crossed_flags": Emoji = Emoji_crossed_flags; break;
				case "bamboo": Emoji = Emoji_bamboo; break;
				case "dolls": Emoji = Emoji_dolls; break;
				case "flags": Emoji = Emoji_flags; break;
				case "wind_chime": Emoji = Emoji_wind_chime; break;
				case "rice_scene": Emoji = Emoji_rice_scene; break;
				case "school_satchel": Emoji = Emoji_school_satchel; break;
				case "mortar_board": Emoji = Emoji_mortar_board; break;
				case "medal": Emoji = Emoji_medal; break;
				case "reminder_ribbon": Emoji = Emoji_reminder_ribbon; break;
				case "studio_microphone": Emoji = Emoji_studio_microphone; break;
				case "level_slider": Emoji = Emoji_level_slider; break;
				case "control_knobs": Emoji = Emoji_control_knobs; break;
				case "film_frames": Emoji = Emoji_film_frames; break;
				case "admission_tickets": Emoji = Emoji_admission_tickets; break;
				case "carousel_horse": Emoji = Emoji_carousel_horse; break;
				case "ferris_wheel": Emoji = Emoji_ferris_wheel; break;
				case "roller_coaster": Emoji = Emoji_roller_coaster; break;
				case "fishing_pole_and_fish": Emoji = Emoji_fishing_pole_and_fish; break;
				case "microphone": Emoji = Emoji_microphone; break;
				case "movie_camera": Emoji = Emoji_movie_camera; break;
				case "cinema": Emoji = Emoji_cinema; break;
				case "headphones": Emoji = Emoji_headphones; break;
				case "art": Emoji = Emoji_art; break;
				case "tophat": Emoji = Emoji_tophat; break;
				case "circus_tent": Emoji = Emoji_circus_tent; break;
				case "ticket": Emoji = Emoji_ticket; break;
				case "clapper": Emoji = Emoji_clapper; break;
				case "performing_arts": Emoji = Emoji_performing_arts; break;
				case "video_game": Emoji = Emoji_video_game; break;
				case "dart": Emoji = Emoji_dart; break;
				case "slot_machine": Emoji = Emoji_slot_machine; break;
				case "8ball": Emoji = Emoji_8ball; break;
				case "game_die": Emoji = Emoji_game_die; break;
				case "bowling": Emoji = Emoji_bowling; break;
				case "flower_playing_cards": Emoji = Emoji_flower_playing_cards; break;
				case "musical_note": Emoji = Emoji_musical_note; break;
				case "notes": Emoji = Emoji_notes; break;
				case "saxophone": Emoji = Emoji_saxophone; break;
				case "guitar": Emoji = Emoji_guitar; break;
				case "musical_keyboard": Emoji = Emoji_musical_keyboard; break;
				case "trumpet": Emoji = Emoji_trumpet; break;
				case "violin": Emoji = Emoji_violin; break;
				case "musical_score": Emoji = Emoji_musical_score; break;
				case "running_shirt_with_sash": Emoji = Emoji_running_shirt_with_sash; break;
				case "tennis": Emoji = Emoji_tennis; break;
				case "ski": Emoji = Emoji_ski; break;
				case "basketball": Emoji = Emoji_basketball; break;
				case "checkered_flag": Emoji = Emoji_checkered_flag; break;
				case "snowboarder": Emoji = Emoji_snowboarder; break;
				case "runner": Emoji = Emoji_runner; break;
				case "surfer": Emoji = Emoji_surfer; break;
				case "sports_medal": Emoji = Emoji_sports_medal; break;
				case "trophy": Emoji = Emoji_trophy; break;
				case "horse_racing": Emoji = Emoji_horse_racing; break;
				case "football": Emoji = Emoji_football; break;
				case "rugby_football": Emoji = Emoji_rugby_football; break;
				case "swimmer": Emoji = Emoji_swimmer; break;
				case "weight_lifter": Emoji = Emoji_weight_lifter; break;
				case "golfer": Emoji = Emoji_golfer; break;
				case "racing_motorcycle": Emoji = Emoji_racing_motorcycle; break;
				case "racing_car": Emoji = Emoji_racing_car; break;
				case "cricket_bat_and_ball": Emoji = Emoji_cricket_bat_and_ball; break;
				case "volleyball": Emoji = Emoji_volleyball; break;
				case "field_hockey_stick_and_ball": Emoji = Emoji_field_hockey_stick_and_ball; break;
				case "ice_hockey_stick_and_puck": Emoji = Emoji_ice_hockey_stick_and_puck; break;
				case "table_tennis_paddle_and_ball": Emoji = Emoji_table_tennis_paddle_and_ball; break;
				case "snow_capped_mountain": Emoji = Emoji_snow_capped_mountain; break;
				case "camping": Emoji = Emoji_camping; break;
				case "beach_with_umbrella": Emoji = Emoji_beach_with_umbrella; break;
				case "building_construction": Emoji = Emoji_building_construction; break;
				case "house_buildings": Emoji = Emoji_house_buildings; break;
				case "cityscape": Emoji = Emoji_cityscape; break;
				case "derelict_house_building": Emoji = Emoji_derelict_house_building; break;
				case "classical_building": Emoji = Emoji_classical_building; break;
				case "desert": Emoji = Emoji_desert; break;
				case "desert_island": Emoji = Emoji_desert_island; break;
				case "national_park": Emoji = Emoji_national_park; break;
				case "stadium": Emoji = Emoji_stadium; break;
				case "house": Emoji = Emoji_house; break;
				case "house_with_garden": Emoji = Emoji_house_with_garden; break;
				case "office": Emoji = Emoji_office; break;
				case "post_office": Emoji = Emoji_post_office; break;
				case "european_post_office": Emoji = Emoji_european_post_office; break;
				case "hospital": Emoji = Emoji_hospital; break;
				case "bank": Emoji = Emoji_bank; break;
				case "atm": Emoji = Emoji_atm; break;
				case "hotel": Emoji = Emoji_hotel; break;
				case "love_hotel": Emoji = Emoji_love_hotel; break;
				case "convenience_store": Emoji = Emoji_convenience_store; break;
				case "school": Emoji = Emoji_school; break;
				case "department_store": Emoji = Emoji_department_store; break;
				case "factory": Emoji = Emoji_factory; break;
				case "izakaya_lantern": Emoji = Emoji_izakaya_lantern; break;
				case "japanese_castle": Emoji = Emoji_japanese_castle; break;
				case "european_castle": Emoji = Emoji_european_castle; break;
				case "waving_white_flag": Emoji = Emoji_waving_white_flag; break;
				case "waving_black_flag": Emoji = Emoji_waving_black_flag; break;
				case "rosette": Emoji = Emoji_rosette; break;
				case "label": Emoji = Emoji_label; break;
				case "badminton_racquet_and_shuttlecock": Emoji = Emoji_badminton_racquet_and_shuttlecock; break;
				case "bow_and_arrow": Emoji = Emoji_bow_and_arrow; break;
				case "amphora": Emoji = Emoji_amphora; break;
				case "skin-tone-2": Emoji = Emoji_skin_tone_2; break;
				case "skin-tone-3": Emoji = Emoji_skin_tone_3; break;
				case "skin-tone-4": Emoji = Emoji_skin_tone_4; break;
				case "skin-tone-5": Emoji = Emoji_skin_tone_5; break;
				case "skin-tone-6": Emoji = Emoji_skin_tone_6; break;
				case "rat": Emoji = Emoji_rat; break;
				case "mouse2": Emoji = Emoji_mouse2; break;
				case "ox": Emoji = Emoji_ox; break;
				case "water_buffalo": Emoji = Emoji_water_buffalo; break;
				case "cow2": Emoji = Emoji_cow2; break;
				case "tiger2": Emoji = Emoji_tiger2; break;
				case "leopard": Emoji = Emoji_leopard; break;
				case "rabbit2": Emoji = Emoji_rabbit2; break;
				case "cat2": Emoji = Emoji_cat2; break;
				case "dragon": Emoji = Emoji_dragon; break;
				case "crocodile": Emoji = Emoji_crocodile; break;
				case "whale2": Emoji = Emoji_whale2; break;
				case "snail": Emoji = Emoji_snail; break;
				case "snake": Emoji = Emoji_snake; break;
				case "racehorse": Emoji = Emoji_racehorse; break;
				case "ram": Emoji = Emoji_ram; break;
				case "goat": Emoji = Emoji_goat; break;
				case "sheep": Emoji = Emoji_sheep; break;
				case "monkey": Emoji = Emoji_monkey; break;
				case "rooster": Emoji = Emoji_rooster; break;
				case "chicken": Emoji = Emoji_chicken; break;
				case "dog2": Emoji = Emoji_dog2; break;
				case "pig2": Emoji = Emoji_pig2; break;
				case "boar": Emoji = Emoji_boar; break;
				case "elephant": Emoji = Emoji_elephant; break;
				case "octopus": Emoji = Emoji_octopus; break;
				case "shell": Emoji = Emoji_shell; break;
				case "bug": Emoji = Emoji_bug; break;
				case "ant": Emoji = Emoji_ant; break;
				case "bee": Emoji = Emoji_bee; break;
				case "beetle": Emoji = Emoji_beetle; break;
				case "fish": Emoji = Emoji_fish; break;
				case "tropical_fish": Emoji = Emoji_tropical_fish; break;
				case "blowfish": Emoji = Emoji_blowfish; break;
				case "turtle": Emoji = Emoji_turtle; break;
				case "hatching_chick": Emoji = Emoji_hatching_chick; break;
				case "baby_chick": Emoji = Emoji_baby_chick; break;
				case "hatched_chick": Emoji = Emoji_hatched_chick; break;
				case "bird": Emoji = Emoji_bird; break;
				case "penguin": Emoji = Emoji_penguin; break;
				case "koala": Emoji = Emoji_koala; break;
				case "poodle": Emoji = Emoji_poodle; break;
				case "dromedary_camel": Emoji = Emoji_dromedary_camel; break;
				case "camel": Emoji = Emoji_camel; break;
				case "dolphin": Emoji = Emoji_dolphin; break;
				case "mouse": Emoji = Emoji_mouse; break;
				case "cow": Emoji = Emoji_cow; break;
				case "tiger": Emoji = Emoji_tiger; break;
				case "rabbit": Emoji = Emoji_rabbit; break;
				case "cat": Emoji = Emoji_cat; break;
				case "dragon_face": Emoji = Emoji_dragon_face; break;
				case "whale": Emoji = Emoji_whale; break;
				case "horse": Emoji = Emoji_horse; break;
				case "monkey_face": Emoji = Emoji_monkey_face; break;
				case "dog": Emoji = Emoji_dog; break;
				case "pig": Emoji = Emoji_pig; break;
				case "frog": Emoji = Emoji_frog; break;
				case "hamster": Emoji = Emoji_hamster; break;
				case "wolf": Emoji = Emoji_wolf; break;
				case "bear": Emoji = Emoji_bear; break;
				case "panda_face": Emoji = Emoji_panda_face; break;
				case "pig_nose": Emoji = Emoji_pig_nose; break;
				case "feet": Emoji = Emoji_feet; break;
				case "chipmunk": Emoji = Emoji_chipmunk; break;
				case "eyes": Emoji = Emoji_eyes; break;
				case "eye": Emoji = Emoji_eye; break;
				case "ear": Emoji = Emoji_ear; break;
				case "nose": Emoji = Emoji_nose; break;
				case "lips": Emoji = Emoji_lips; break;
				case "tongue": Emoji = Emoji_tongue; break;
				case "point_up_2": Emoji = Emoji_point_up_2; break;
				case "point_down": Emoji = Emoji_point_down; break;
				case "point_left": Emoji = Emoji_point_left; break;
				case "point_right": Emoji = Emoji_point_right; break;
				case "facepunch": Emoji = Emoji_facepunch; break;
				case "wave": Emoji = Emoji_wave; break;
				case "ok_hand": Emoji = Emoji_ok_hand; break;
				case "+1": Emoji = Emoji_P1; break;
				case "-1": Emoji = Emoji__1; break;
				case "clap": Emoji = Emoji_clap; break;
				case "open_hands": Emoji = Emoji_open_hands; break;
				case "crown": Emoji = Emoji_crown; break;
				case "womans_hat": Emoji = Emoji_womans_hat; break;
				case "eyeglasses": Emoji = Emoji_eyeglasses; break;
				case "necktie": Emoji = Emoji_necktie; break;
				case "shirt": Emoji = Emoji_shirt; break;
				case "jeans": Emoji = Emoji_jeans; break;
				case "dress": Emoji = Emoji_dress; break;
				case "kimono": Emoji = Emoji_kimono; break;
				case "bikini": Emoji = Emoji_bikini; break;
				case "womans_clothes": Emoji = Emoji_womans_clothes; break;
				case "purse": Emoji = Emoji_purse; break;
				case "handbag": Emoji = Emoji_handbag; break;
				case "pouch": Emoji = Emoji_pouch; break;
				case "mans_shoe": Emoji = Emoji_mans_shoe; break;
				case "athletic_shoe": Emoji = Emoji_athletic_shoe; break;
				case "high_heel": Emoji = Emoji_high_heel; break;
				case "sandal": Emoji = Emoji_sandal; break;
				case "boot": Emoji = Emoji_boot; break;
				case "footprints": Emoji = Emoji_footprints; break;
				case "bust_in_silhouette": Emoji = Emoji_bust_in_silhouette; break;
				case "busts_in_silhouette": Emoji = Emoji_busts_in_silhouette; break;
				case "boy": Emoji = Emoji_boy; break;
				case "girl": Emoji = Emoji_girl; break;
				case "man": Emoji = Emoji_man; break;
				case "woman": Emoji = Emoji_woman; break;
				case "family": Emoji = Emoji_family; break;
				case "couple": Emoji = Emoji_couple; break;
				case "two_men_holding_hands": Emoji = Emoji_two_men_holding_hands; break;
				case "two_women_holding_hands": Emoji = Emoji_two_women_holding_hands; break;
				case "cop": Emoji = Emoji_cop; break;
				case "dancers": Emoji = Emoji_dancers; break;
				case "bride_with_veil": Emoji = Emoji_bride_with_veil; break;
				case "person_with_blond_hair": Emoji = Emoji_person_with_blond_hair; break;
				case "man_with_gua_pi_mao": Emoji = Emoji_man_with_gua_pi_mao; break;
				case "man_with_turban": Emoji = Emoji_man_with_turban; break;
				case "older_man": Emoji = Emoji_older_man; break;
				case "older_woman": Emoji = Emoji_older_woman; break;
				case "baby": Emoji = Emoji_baby; break;
				case "construction_worker": Emoji = Emoji_construction_worker; break;
				case "princess": Emoji = Emoji_princess; break;
				case "japanese_ogre": Emoji = Emoji_japanese_ogre; break;
				case "japanese_goblin": Emoji = Emoji_japanese_goblin; break;
				case "ghost": Emoji = Emoji_ghost; break;
				case "angel": Emoji = Emoji_angel; break;
				case "alien": Emoji = Emoji_alien; break;
				case "space_invader": Emoji = Emoji_space_invader; break;
				case "imp": Emoji = Emoji_imp; break;
				case "skull": Emoji = Emoji_skull; break;
				case "information_desk_person": Emoji = Emoji_information_desk_person; break;
				case "guardsman": Emoji = Emoji_guardsman; break;
				case "dancer": Emoji = Emoji_dancer; break;
				case "lipstick": Emoji = Emoji_lipstick; break;
				case "nail_care": Emoji = Emoji_nail_care; break;
				case "massage": Emoji = Emoji_massage; break;
				case "haircut": Emoji = Emoji_haircut; break;
				case "barber": Emoji = Emoji_barber; break;
				case "syringe": Emoji = Emoji_syringe; break;
				case "pill": Emoji = Emoji_pill; break;
				case "kiss": Emoji = Emoji_kiss; break;
				case "love_letter": Emoji = Emoji_love_letter; break;
				case "ring": Emoji = Emoji_ring; break;
				case "gem": Emoji = Emoji_gem; break;
				case "couplekiss": Emoji = Emoji_couplekiss; break;
				case "bouquet": Emoji = Emoji_bouquet; break;
				case "couple_with_heart": Emoji = Emoji_couple_with_heart; break;
				case "wedding": Emoji = Emoji_wedding; break;
				case "heartbeat": Emoji = Emoji_heartbeat; break;
				case "broken_heart": Emoji = Emoji_broken_heart; break;
				case "two_hearts": Emoji = Emoji_two_hearts; break;
				case "sparkling_heart": Emoji = Emoji_sparkling_heart; break;
				case "heartpulse": Emoji = Emoji_heartpulse; break;
				case "cupid": Emoji = Emoji_cupid; break;
				case "blue_heart": Emoji = Emoji_blue_heart; break;
				case "green_heart": Emoji = Emoji_green_heart; break;
				case "yellow_heart": Emoji = Emoji_yellow_heart; break;
				case "purple_heart": Emoji = Emoji_purple_heart; break;
				case "gift_heart": Emoji = Emoji_gift_heart; break;
				case "revolving_hearts": Emoji = Emoji_revolving_hearts; break;
				case "heart_decoration": Emoji = Emoji_heart_decoration; break;
				case "diamond_shape_with_a_dot_inside": Emoji = Emoji_diamond_shape_with_a_dot_inside; break;
				case "bulb": Emoji = Emoji_bulb; break;
				case "anger": Emoji = Emoji_anger; break;
				case "bomb": Emoji = Emoji_bomb; break;
				case "zzz": Emoji = Emoji_zzz; break;
				case "boom": Emoji = Emoji_boom; break;
				case "sweat_drops": Emoji = Emoji_sweat_drops; break;
				case "droplet": Emoji = Emoji_droplet; break;
				case "dash": Emoji = Emoji_dash; break;
				case "hankey": Emoji = Emoji_hankey; break;
				case "muscle": Emoji = Emoji_muscle; break;
				case "dizzy": Emoji = Emoji_dizzy; break;
				case "speech_balloon": Emoji = Emoji_speech_balloon; break;
				case "thought_balloon": Emoji = Emoji_thought_balloon; break;
				case "white_flower": Emoji = Emoji_white_flower; break;
				case "100": Emoji = Emoji_100; break;
				case "moneybag": Emoji = Emoji_moneybag; break;
				case "currency_exchange": Emoji = Emoji_currency_exchange; break;
				case "heavy_dollar_sign": Emoji = Emoji_heavy_dollar_sign; break;
				case "credit_card": Emoji = Emoji_credit_card; break;
				case "yen": Emoji = Emoji_yen; break;
				case "dollar": Emoji = Emoji_dollar; break;
				case "euro": Emoji = Emoji_euro; break;
				case "pound": Emoji = Emoji_pound; break;
				case "money_with_wings": Emoji = Emoji_money_with_wings; break;
				case "chart": Emoji = Emoji_chart; break;
				case "seat": Emoji = Emoji_seat; break;
				case "computer": Emoji = Emoji_computer; break;
				case "briefcase": Emoji = Emoji_briefcase; break;
				case "minidisc": Emoji = Emoji_minidisc; break;
				case "floppy_disk": Emoji = Emoji_floppy_disk; break;
				case "cd": Emoji = Emoji_cd; break;
				case "dvd": Emoji = Emoji_dvd; break;
				case "file_folder": Emoji = Emoji_file_folder; break;
				case "open_file_folder": Emoji = Emoji_open_file_folder; break;
				case "page_with_curl": Emoji = Emoji_page_with_curl; break;
				case "page_facing_up": Emoji = Emoji_page_facing_up; break;
				case "date": Emoji = Emoji_date; break;
				case "calendar": Emoji = Emoji_calendar; break;
				case "card_index": Emoji = Emoji_card_index; break;
				case "chart_with_upwards_trend": Emoji = Emoji_chart_with_upwards_trend; break;
				case "chart_with_downwards_trend": Emoji = Emoji_chart_with_downwards_trend; break;
				case "bar_chart": Emoji = Emoji_bar_chart; break;
				case "clipboard": Emoji = Emoji_clipboard; break;
				case "pushpin": Emoji = Emoji_pushpin; break;
				case "round_pushpin": Emoji = Emoji_round_pushpin; break;
				case "paperclip": Emoji = Emoji_paperclip; break;
				case "straight_ruler": Emoji = Emoji_straight_ruler; break;
				case "triangular_ruler": Emoji = Emoji_triangular_ruler; break;
				case "bookmark_tabs": Emoji = Emoji_bookmark_tabs; break;
				case "ledger": Emoji = Emoji_ledger; break;
				case "notebook": Emoji = Emoji_notebook; break;
				case "notebook_with_decorative_cover": Emoji = Emoji_notebook_with_decorative_cover; break;
				case "closed_book": Emoji = Emoji_closed_book; break;
				case "book": Emoji = Emoji_book; break;
				case "green_book": Emoji = Emoji_green_book; break;
				case "blue_book": Emoji = Emoji_blue_book; break;
				case "orange_book": Emoji = Emoji_orange_book; break;
				case "books": Emoji = Emoji_books; break;
				case "name_badge": Emoji = Emoji_name_badge; break;
				case "scroll": Emoji = Emoji_scroll; break;
				case "memo": Emoji = Emoji_memo; break;
				case "telephone_receiver": Emoji = Emoji_telephone_receiver; break;
				case "pager": Emoji = Emoji_pager; break;
				case "fax": Emoji = Emoji_fax; break;
				case "satellite": Emoji = Emoji_satellite; break;
				case "loudspeaker": Emoji = Emoji_loudspeaker; break;
				case "mega": Emoji = Emoji_mega; break;
				case "outbox_tray": Emoji = Emoji_outbox_tray; break;
				case "inbox_tray": Emoji = Emoji_inbox_tray; break;
				case "package": Emoji = Emoji_package; break;
				case "e-mail": Emoji = Emoji_e_mail; break;
				case "incoming_envelope": Emoji = Emoji_incoming_envelope; break;
				case "envelope_with_arrow": Emoji = Emoji_envelope_with_arrow; break;
				case "mailbox_closed": Emoji = Emoji_mailbox_closed; break;
				case "mailbox": Emoji = Emoji_mailbox; break;
				case "mailbox_with_mail": Emoji = Emoji_mailbox_with_mail; break;
				case "mailbox_with_no_mail": Emoji = Emoji_mailbox_with_no_mail; break;
				case "postbox": Emoji = Emoji_postbox; break;
				case "postal_horn": Emoji = Emoji_postal_horn; break;
				case "newspaper": Emoji = Emoji_newspaper; break;
				case "iphone": Emoji = Emoji_iphone; break;
				case "calling": Emoji = Emoji_calling; break;
				case "vibration_mode": Emoji = Emoji_vibration_mode; break;
				case "mobile_phone_off": Emoji = Emoji_mobile_phone_off; break;
				case "no_mobile_phones": Emoji = Emoji_no_mobile_phones; break;
				case "signal_strength": Emoji = Emoji_signal_strength; break;
				case "camera": Emoji = Emoji_camera; break;
				case "camera_with_flash": Emoji = Emoji_camera_with_flash; break;
				case "video_camera": Emoji = Emoji_video_camera; break;
				case "tv": Emoji = Emoji_tv; break;
				case "radio": Emoji = Emoji_radio; break;
				case "vhs": Emoji = Emoji_vhs; break;
				case "film_projector": Emoji = Emoji_film_projector; break;
				case "prayer_beads": Emoji = Emoji_prayer_beads; break;
				case "twisted_rightwards_arrows": Emoji = Emoji_twisted_rightwards_arrows; break;
				case "repeat": Emoji = Emoji_repeat; break;
				case "repeat_one": Emoji = Emoji_repeat_one; break;
				case "arrows_clockwise": Emoji = Emoji_arrows_clockwise; break;
				case "arrows_counterclockwise": Emoji = Emoji_arrows_counterclockwise; break;
				case "low_brightness": Emoji = Emoji_low_brightness; break;
				case "high_brightness": Emoji = Emoji_high_brightness; break;
				case "mute": Emoji = Emoji_mute; break;
				case "speaker": Emoji = Emoji_speaker; break;
				case "sound": Emoji = Emoji_sound; break;
				case "loud_sound": Emoji = Emoji_loud_sound; break;
				case "battery": Emoji = Emoji_battery; break;
				case "electric_plug": Emoji = Emoji_electric_plug; break;
				case "mag": Emoji = Emoji_mag; break;
				case "mag_right": Emoji = Emoji_mag_right; break;
				case "lock_with_ink_pen": Emoji = Emoji_lock_with_ink_pen; break;
				case "closed_lock_with_key": Emoji = Emoji_closed_lock_with_key; break;
				case "key": Emoji = Emoji_key; break;
				case "lock": Emoji = Emoji_lock; break;
				case "unlock": Emoji = Emoji_unlock; break;
				case "bell": Emoji = Emoji_bell; break;
				case "no_bell": Emoji = Emoji_no_bell; break;
				case "bookmark": Emoji = Emoji_bookmark; break;
				case "link": Emoji = Emoji_link; break;
				case "radio_button": Emoji = Emoji_radio_button; break;
				case "back": Emoji = Emoji_back; break;
				case "end": Emoji = Emoji_end; break;
				case "on": Emoji = Emoji_on; break;
				case "soon": Emoji = Emoji_soon; break;
				case "top": Emoji = Emoji_top; break;
				case "underage": Emoji = Emoji_underage; break;
				case "keycap_ten": Emoji = Emoji_keycap_ten; break;
				case "capital_abcd": Emoji = Emoji_capital_abcd; break;
				case "abcd": Emoji = Emoji_abcd; break;
				case "1234": Emoji = Emoji_1234; break;
				case "symbols": Emoji = Emoji_symbols; break;
				case "abc": Emoji = Emoji_abc; break;
				case "fire": Emoji = Emoji_fire; break;
				case "flashlight": Emoji = Emoji_flashlight; break;
				case "wrench": Emoji = Emoji_wrench; break;
				case "hammer": Emoji = Emoji_hammer; break;
				case "nut_and_bolt": Emoji = Emoji_nut_and_bolt; break;
				case "hocho": Emoji = Emoji_hocho; break;
				case "gun": Emoji = Emoji_gun; break;
				case "microscope": Emoji = Emoji_microscope; break;
				case "telescope": Emoji = Emoji_telescope; break;
				case "crystal_ball": Emoji = Emoji_crystal_ball; break;
				case "six_pointed_star": Emoji = Emoji_six_pointed_star; break;
				case "beginner": Emoji = Emoji_beginner; break;
				case "trident": Emoji = Emoji_trident; break;
				case "black_square_button": Emoji = Emoji_black_square_button; break;
				case "white_square_button": Emoji = Emoji_white_square_button; break;
				case "red_circle": Emoji = Emoji_red_circle; break;
				case "large_blue_circle": Emoji = Emoji_large_blue_circle; break;
				case "large_orange_diamond": Emoji = Emoji_large_orange_diamond; break;
				case "large_blue_diamond": Emoji = Emoji_large_blue_diamond; break;
				case "small_orange_diamond": Emoji = Emoji_small_orange_diamond; break;
				case "small_blue_diamond": Emoji = Emoji_small_blue_diamond; break;
				case "small_red_triangle": Emoji = Emoji_small_red_triangle; break;
				case "small_red_triangle_down": Emoji = Emoji_small_red_triangle_down; break;
				case "arrow_up_small": Emoji = Emoji_arrow_up_small; break;
				case "arrow_down_small": Emoji = Emoji_arrow_down_small; break;
				case "om_symbol": Emoji = Emoji_om_symbol; break;
				case "dove_of_peace": Emoji = Emoji_dove_of_peace; break;
				case "kaaba": Emoji = Emoji_kaaba; break;
				case "mosque": Emoji = Emoji_mosque; break;
				case "synagogue": Emoji = Emoji_synagogue; break;
				case "menorah_with_nine_branches": Emoji = Emoji_menorah_with_nine_branches; break;
				case "clock1": Emoji = Emoji_clock1; break;
				case "clock2": Emoji = Emoji_clock2; break;
				case "clock3": Emoji = Emoji_clock3; break;
				case "clock4": Emoji = Emoji_clock4; break;
				case "clock5": Emoji = Emoji_clock5; break;
				case "clock6": Emoji = Emoji_clock6; break;
				case "clock7": Emoji = Emoji_clock7; break;
				case "clock8": Emoji = Emoji_clock8; break;
				case "clock9": Emoji = Emoji_clock9; break;
				case "clock10": Emoji = Emoji_clock10; break;
				case "clock11": Emoji = Emoji_clock11; break;
				case "clock12": Emoji = Emoji_clock12; break;
				case "clock130": Emoji = Emoji_clock130; break;
				case "clock230": Emoji = Emoji_clock230; break;
				case "clock330": Emoji = Emoji_clock330; break;
				case "clock430": Emoji = Emoji_clock430; break;
				case "clock530": Emoji = Emoji_clock530; break;
				case "clock630": Emoji = Emoji_clock630; break;
				case "clock730": Emoji = Emoji_clock730; break;
				case "clock830": Emoji = Emoji_clock830; break;
				case "clock930": Emoji = Emoji_clock930; break;
				case "clock1030": Emoji = Emoji_clock1030; break;
				case "clock1130": Emoji = Emoji_clock1130; break;
				case "clock1230": Emoji = Emoji_clock1230; break;
				case "candle": Emoji = Emoji_candle; break;
				case "mantelpiece_clock": Emoji = Emoji_mantelpiece_clock; break;
				case "hole": Emoji = Emoji_hole; break;
				case "man_in_business_suit_levitating": Emoji = Emoji_man_in_business_suit_levitating; break;
				case "sleuth_or_spy": Emoji = Emoji_sleuth_or_spy; break;
				case "dark_sunglasses": Emoji = Emoji_dark_sunglasses; break;
				case "spider": Emoji = Emoji_spider; break;
				case "spider_web": Emoji = Emoji_spider_web; break;
				case "joystick": Emoji = Emoji_joystick; break;
				case "linked_paperclips": Emoji = Emoji_linked_paperclips; break;
				case "lower_left_ballpoint_pen": Emoji = Emoji_lower_left_ballpoint_pen; break;
				case "lower_left_fountain_pen": Emoji = Emoji_lower_left_fountain_pen; break;
				case "lower_left_paintbrush": Emoji = Emoji_lower_left_paintbrush; break;
				case "lower_left_crayon": Emoji = Emoji_lower_left_crayon; break;
				case "raised_hand_with_fingers_splayed": Emoji = Emoji_raised_hand_with_fingers_splayed; break;
				case "middle_finger": Emoji = Emoji_middle_finger; break;
				case "spock-hand": Emoji = Emoji_spock_hand; break;
				case "desktop_computer": Emoji = Emoji_desktop_computer; break;
				case "printer": Emoji = Emoji_printer; break;
				case "three_button_mouse": Emoji = Emoji_three_button_mouse; break;
				case "trackball": Emoji = Emoji_trackball; break;
				case "frame_with_picture": Emoji = Emoji_frame_with_picture; break;
				case "card_index_dividers": Emoji = Emoji_card_index_dividers; break;
				case "card_file_box": Emoji = Emoji_card_file_box; break;
				case "file_cabinet": Emoji = Emoji_file_cabinet; break;
				case "wastebasket": Emoji = Emoji_wastebasket; break;
				case "spiral_note_pad": Emoji = Emoji_spiral_note_pad; break;
				case "spiral_calendar_pad": Emoji = Emoji_spiral_calendar_pad; break;
				case "compression": Emoji = Emoji_compression; break;
				case "old_key": Emoji = Emoji_old_key; break;
				case "rolled_up_newspaper": Emoji = Emoji_rolled_up_newspaper; break;
				case "dagger_knife": Emoji = Emoji_dagger_knife; break;
				case "speaking_head_in_silhouette": Emoji = Emoji_speaking_head_in_silhouette; break;
				case "left_speech_bubble": Emoji = Emoji_left_speech_bubble; break;
				case "right_anger_bubble": Emoji = Emoji_right_anger_bubble; break;
				case "ballot_box_with_ballot": Emoji = Emoji_ballot_box_with_ballot; break;
				case "world_map": Emoji = Emoji_world_map; break;
				case "mount_fuji": Emoji = Emoji_mount_fuji; break;
				case "tokyo_tower": Emoji = Emoji_tokyo_tower; break;
				case "statue_of_liberty": Emoji = Emoji_statue_of_liberty; break;
				case "japan": Emoji = Emoji_japan; break;
				case "moyai": Emoji = Emoji_moyai; break;
				case "grinning": Emoji = Emoji_grinning; break;
				case "grin": Emoji = Emoji_grin; break;
				case "joy": Emoji = Emoji_joy; break;
				case "smiley": Emoji = Emoji_smiley; break;
				case "smile": Emoji = Emoji_smile; break;
				case "sweat_smile": Emoji = Emoji_sweat_smile; break;
				case "laughing": Emoji = Emoji_laughing; break;
				case "innocent": Emoji = Emoji_innocent; break;
				case "smiling_imp": Emoji = Emoji_smiling_imp; break;
				case "wink": Emoji = Emoji_wink; break;
				case "blush": Emoji = Emoji_blush; break;
				case "yum": Emoji = Emoji_yum; break;
				case "relieved": Emoji = Emoji_relieved; break;
				case "heart_eyes": Emoji = Emoji_heart_eyes; break;
				case "sunglasses": Emoji = Emoji_sunglasses; break;
				case "smirk": Emoji = Emoji_smirk; break;
				case "neutral_face": Emoji = Emoji_neutral_face; break;
				case "expressionless": Emoji = Emoji_expressionless; break;
				case "unamused": Emoji = Emoji_unamused; break;
				case "sweat": Emoji = Emoji_sweat; break;
				case "pensive": Emoji = Emoji_pensive; break;
				case "confused": Emoji = Emoji_confused; break;
				case "confounded": Emoji = Emoji_confounded; break;
				case "kissing": Emoji = Emoji_kissing; break;
				case "kissing_heart": Emoji = Emoji_kissing_heart; break;
				case "kissing_smiling_eyes": Emoji = Emoji_kissing_smiling_eyes; break;
				case "kissing_closed_eyes": Emoji = Emoji_kissing_closed_eyes; break;
				case "stuck_out_tongue": Emoji = Emoji_stuck_out_tongue; break;
				case "stuck_out_tongue_winking_eye": Emoji = Emoji_stuck_out_tongue_winking_eye; break;
				case "stuck_out_tongue_closed_eyes": Emoji = Emoji_stuck_out_tongue_closed_eyes; break;
				case "disappointed": Emoji = Emoji_disappointed; break;
				case "worried": Emoji = Emoji_worried; break;
				case "angry": Emoji = Emoji_angry; break;
				case "rage": Emoji = Emoji_rage; break;
				case "cry": Emoji = Emoji_cry; break;
				case "persevere": Emoji = Emoji_persevere; break;
				case "triumph": Emoji = Emoji_triumph; break;
				case "disappointed_relieved": Emoji = Emoji_disappointed_relieved; break;
				case "frowning": Emoji = Emoji_frowning; break;
				case "anguished": Emoji = Emoji_anguished; break;
				case "fearful": Emoji = Emoji_fearful; break;
				case "weary": Emoji = Emoji_weary; break;
				case "sleepy": Emoji = Emoji_sleepy; break;
				case "tired_face": Emoji = Emoji_tired_face; break;
				case "grimacing": Emoji = Emoji_grimacing; break;
				case "sob": Emoji = Emoji_sob; break;
				case "open_mouth": Emoji = Emoji_open_mouth; break;
				case "hushed": Emoji = Emoji_hushed; break;
				case "cold_sweat": Emoji = Emoji_cold_sweat; break;
				case "scream": Emoji = Emoji_scream; break;
				case "astonished": Emoji = Emoji_astonished; break;
				case "flushed": Emoji = Emoji_flushed; break;
				case "sleeping": Emoji = Emoji_sleeping; break;
				case "dizzy_face": Emoji = Emoji_dizzy_face; break;
				case "no_mouth": Emoji = Emoji_no_mouth; break;
				case "mask": Emoji = Emoji_mask; break;
				case "smile_cat": Emoji = Emoji_smile_cat; break;
				case "joy_cat": Emoji = Emoji_joy_cat; break;
				case "smiley_cat": Emoji = Emoji_smiley_cat; break;
				case "heart_eyes_cat": Emoji = Emoji_heart_eyes_cat; break;
				case "smirk_cat": Emoji = Emoji_smirk_cat; break;
				case "kissing_cat": Emoji = Emoji_kissing_cat; break;
				case "pouting_cat": Emoji = Emoji_pouting_cat; break;
				case "crying_cat_face": Emoji = Emoji_crying_cat_face; break;
				case "scream_cat": Emoji = Emoji_scream_cat; break;
				case "slightly_frowning_face": Emoji = Emoji_slightly_frowning_face; break;
				case "slightly_smiling_face": Emoji = Emoji_slightly_smiling_face; break;
				case "upside_down_face": Emoji = Emoji_upside_down_face; break;
				case "face_with_rolling_eyes": Emoji = Emoji_face_with_rolling_eyes; break;
				case "no_good": Emoji = Emoji_no_good; break;
				case "ok_woman": Emoji = Emoji_ok_woman; break;
				case "bow": Emoji = Emoji_bow; break;
				case "see_no_evil": Emoji = Emoji_see_no_evil; break;
				case "hear_no_evil": Emoji = Emoji_hear_no_evil; break;
				case "speak_no_evil": Emoji = Emoji_speak_no_evil; break;
				case "raising_hand": Emoji = Emoji_raising_hand; break;
				case "raised_hands": Emoji = Emoji_raised_hands; break;
				case "person_frowning": Emoji = Emoji_person_frowning; break;
				case "person_with_pouting_face": Emoji = Emoji_person_with_pouting_face; break;
				case "pray": Emoji = Emoji_pray; break;
				case "rocket": Emoji = Emoji_rocket; break;
				case "helicopter": Emoji = Emoji_helicopter; break;
				case "steam_locomotive": Emoji = Emoji_steam_locomotive; break;
				case "railway_car": Emoji = Emoji_railway_car; break;
				case "bullettrain_side": Emoji = Emoji_bullettrain_side; break;
				case "bullettrain_front": Emoji = Emoji_bullettrain_front; break;
				case "train2": Emoji = Emoji_train2; break;
				case "metro": Emoji = Emoji_metro; break;
				case "light_rail": Emoji = Emoji_light_rail; break;
				case "station": Emoji = Emoji_station; break;
				case "tram": Emoji = Emoji_tram; break;
				case "train": Emoji = Emoji_train; break;
				case "bus": Emoji = Emoji_bus; break;
				case "oncoming_bus": Emoji = Emoji_oncoming_bus; break;
				case "trolleybus": Emoji = Emoji_trolleybus; break;
				case "busstop": Emoji = Emoji_busstop; break;
				case "minibus": Emoji = Emoji_minibus; break;
				case "ambulance": Emoji = Emoji_ambulance; break;
				case "fire_engine": Emoji = Emoji_fire_engine; break;
				case "police_car": Emoji = Emoji_police_car; break;
				case "oncoming_police_car": Emoji = Emoji_oncoming_police_car; break;
				case "taxi": Emoji = Emoji_taxi; break;
				case "oncoming_taxi": Emoji = Emoji_oncoming_taxi; break;
				case "car": Emoji = Emoji_car; break;
				case "oncoming_automobile": Emoji = Emoji_oncoming_automobile; break;
				case "blue_car": Emoji = Emoji_blue_car; break;
				case "truck": Emoji = Emoji_truck; break;
				case "articulated_lorry": Emoji = Emoji_articulated_lorry; break;
				case "tractor": Emoji = Emoji_tractor; break;
				case "monorail": Emoji = Emoji_monorail; break;
				case "mountain_railway": Emoji = Emoji_mountain_railway; break;
				case "suspension_railway": Emoji = Emoji_suspension_railway; break;
				case "mountain_cableway": Emoji = Emoji_mountain_cableway; break;
				case "aerial_tramway": Emoji = Emoji_aerial_tramway; break;
				case "ship": Emoji = Emoji_ship; break;
				case "rowboat": Emoji = Emoji_rowboat; break;
				case "speedboat": Emoji = Emoji_speedboat; break;
				case "traffic_light": Emoji = Emoji_traffic_light; break;
				case "vertical_traffic_light": Emoji = Emoji_vertical_traffic_light; break;
				case "construction": Emoji = Emoji_construction; break;
				case "rotating_light": Emoji = Emoji_rotating_light; break;
				case "triangular_flag_on_post": Emoji = Emoji_triangular_flag_on_post; break;
				case "door": Emoji = Emoji_door; break;
				case "no_entry_sign": Emoji = Emoji_no_entry_sign; break;
				case "smoking": Emoji = Emoji_smoking; break;
				case "no_smoking": Emoji = Emoji_no_smoking; break;
				case "put_litter_in_its_place": Emoji = Emoji_put_litter_in_its_place; break;
				case "do_not_litter": Emoji = Emoji_do_not_litter; break;
				case "potable_water": Emoji = Emoji_potable_water; break;
				case "non-potable_water": Emoji = Emoji_non_potable_water; break;
				case "bike": Emoji = Emoji_bike; break;
				case "no_bicycles": Emoji = Emoji_no_bicycles; break;
				case "bicyclist": Emoji = Emoji_bicyclist; break;
				case "mountain_bicyclist": Emoji = Emoji_mountain_bicyclist; break;
				case "walking": Emoji = Emoji_walking; break;
				case "no_pedestrians": Emoji = Emoji_no_pedestrians; break;
				case "children_crossing": Emoji = Emoji_children_crossing; break;
				case "mens": Emoji = Emoji_mens; break;
				case "womens": Emoji = Emoji_womens; break;
				case "restroom": Emoji = Emoji_restroom; break;
				case "baby_symbol": Emoji = Emoji_baby_symbol; break;
				case "toilet": Emoji = Emoji_toilet; break;
				case "wc": Emoji = Emoji_wc; break;
				case "shower": Emoji = Emoji_shower; break;
				case "bath": Emoji = Emoji_bath; break;
				case "bathtub": Emoji = Emoji_bathtub; break;
				case "passport_control": Emoji = Emoji_passport_control; break;
				case "customs": Emoji = Emoji_customs; break;
				case "baggage_claim": Emoji = Emoji_baggage_claim; break;
				case "left_luggage": Emoji = Emoji_left_luggage; break;
				case "couch_and_lamp": Emoji = Emoji_couch_and_lamp; break;
				case "sleeping_accommodation": Emoji = Emoji_sleeping_accommodation; break;
				case "shopping_bags": Emoji = Emoji_shopping_bags; break;
				case "bellhop_bell": Emoji = Emoji_bellhop_bell; break;
				case "bed": Emoji = Emoji_bed; break;
				case "place_of_worship": Emoji = Emoji_place_of_worship; break;
				case "hammer_and_wrench": Emoji = Emoji_hammer_and_wrench; break;
				case "shield": Emoji = Emoji_shield; break;
				case "oil_drum": Emoji = Emoji_oil_drum; break;
				case "motorway": Emoji = Emoji_motorway; break;
				case "railway_track": Emoji = Emoji_railway_track; break;
				case "motor_boat": Emoji = Emoji_motor_boat; break;
				case "small_airplane": Emoji = Emoji_small_airplane; break;
				case "airplane_departure": Emoji = Emoji_airplane_departure; break;
				case "airplane_arriving": Emoji = Emoji_airplane_arriving; break;
				case "satellite2": Emoji = Emoji_satellite2; break;
				case "passenger_ship": Emoji = Emoji_passenger_ship; break;
				case "zipper_mouth_face": Emoji = Emoji_zipper_mouth_face; break;
				case "money_mouth_face": Emoji = Emoji_money_mouth_face; break;
				case "face_with_thermometer": Emoji = Emoji_face_with_thermometer; break;
				case "nerd_face": Emoji = Emoji_nerd_face; break;
				case "thinking_face": Emoji = Emoji_thinking_face; break;
				case "face_with_head_bandage": Emoji = Emoji_face_with_head_bandage; break;
				case "robot_face": Emoji = Emoji_robot_face; break;
				case "hugging_face": Emoji = Emoji_hugging_face; break;
				case "the_horns": Emoji = Emoji_the_horns; break;
				case "crab": Emoji = Emoji_crab; break;
				case "lion_face": Emoji = Emoji_lion_face; break;
				case "scorpion": Emoji = Emoji_scorpion; break;
				case "turkey": Emoji = Emoji_turkey; break;
				case "unicorn_face": Emoji = Emoji_unicorn_face; break;
				case "cheese_wedge": Emoji = Emoji_cheese_wedge; break;
				case "hash": Emoji = Emoji_hash; break;
				case "keycap_star": Emoji = Emoji_keycap_star; break;
				case "zero": Emoji = Emoji_zero; break;
				case "one": Emoji = Emoji_one; break;
				case "two": Emoji = Emoji_two; break;
				case "three": Emoji = Emoji_three; break;
				case "four": Emoji = Emoji_four; break;
				case "five": Emoji = Emoji_five; break;
				case "six": Emoji = Emoji_six; break;
				case "seven": Emoji = Emoji_seven; break;
				case "eight": Emoji = Emoji_eight; break;
				case "nine": Emoji = Emoji_nine; break;
				case "flag-ac": Emoji = Emoji_flag_ac; break;
				case "flag-ad": Emoji = Emoji_flag_ad; break;
				case "flag-ae": Emoji = Emoji_flag_ae; break;
				case "flag-af": Emoji = Emoji_flag_af; break;
				case "flag-ag": Emoji = Emoji_flag_ag; break;
				case "flag-ai": Emoji = Emoji_flag_ai; break;
				case "flag-al": Emoji = Emoji_flag_al; break;
				case "flag-am": Emoji = Emoji_flag_am; break;
				case "flag-ao": Emoji = Emoji_flag_ao; break;
				case "flag-aq": Emoji = Emoji_flag_aq; break;
				case "flag-ar": Emoji = Emoji_flag_ar; break;
				case "flag-as": Emoji = Emoji_flag_as; break;
				case "flag-at": Emoji = Emoji_flag_at; break;
				case "flag-au": Emoji = Emoji_flag_au; break;
				case "flag-aw": Emoji = Emoji_flag_aw; break;
				case "flag-ax": Emoji = Emoji_flag_ax; break;
				case "flag-az": Emoji = Emoji_flag_az; break;
				case "flag-ba": Emoji = Emoji_flag_ba; break;
				case "flag-bb": Emoji = Emoji_flag_bb; break;
				case "flag-bd": Emoji = Emoji_flag_bd; break;
				case "flag-be": Emoji = Emoji_flag_be; break;
				case "flag-bf": Emoji = Emoji_flag_bf; break;
				case "flag-bg": Emoji = Emoji_flag_bg; break;
				case "flag-bh": Emoji = Emoji_flag_bh; break;
				case "flag-bi": Emoji = Emoji_flag_bi; break;
				case "flag-bj": Emoji = Emoji_flag_bj; break;
				case "flag-bl": Emoji = Emoji_flag_bl; break;
				case "flag-bm": Emoji = Emoji_flag_bm; break;
				case "flag-bn": Emoji = Emoji_flag_bn; break;
				case "flag-bo": Emoji = Emoji_flag_bo; break;
				case "flag-bq": Emoji = Emoji_flag_bq; break;
				case "flag-br": Emoji = Emoji_flag_br; break;
				case "flag-bs": Emoji = Emoji_flag_bs; break;
				case "flag-bt": Emoji = Emoji_flag_bt; break;
				case "flag-bv": Emoji = Emoji_flag_bv; break;
				case "flag-bw": Emoji = Emoji_flag_bw; break;
				case "flag-by": Emoji = Emoji_flag_by; break;
				case "flag-bz": Emoji = Emoji_flag_bz; break;
				case "flag-ca": Emoji = Emoji_flag_ca; break;
				case "flag-cc": Emoji = Emoji_flag_cc; break;
				case "flag-cd": Emoji = Emoji_flag_cd; break;
				case "flag-cf": Emoji = Emoji_flag_cf; break;
				case "flag-cg": Emoji = Emoji_flag_cg; break;
				case "flag-ch": Emoji = Emoji_flag_ch; break;
				case "flag-ci": Emoji = Emoji_flag_ci; break;
				case "flag-ck": Emoji = Emoji_flag_ck; break;
				case "flag-cl": Emoji = Emoji_flag_cl; break;
				case "flag-cm": Emoji = Emoji_flag_cm; break;
				case "flag-cn": Emoji = Emoji_flag_cn; break;
				case "flag-co": Emoji = Emoji_flag_co; break;
				case "flag-cp": Emoji = Emoji_flag_cp; break;
				case "flag-cr": Emoji = Emoji_flag_cr; break;
				case "flag-cu": Emoji = Emoji_flag_cu; break;
				case "flag-cv": Emoji = Emoji_flag_cv; break;
				case "flag-cw": Emoji = Emoji_flag_cw; break;
				case "flag-cx": Emoji = Emoji_flag_cx; break;
				case "flag-cy": Emoji = Emoji_flag_cy; break;
				case "flag-cz": Emoji = Emoji_flag_cz; break;
				case "flag-de": Emoji = Emoji_flag_de; break;
				case "flag-dg": Emoji = Emoji_flag_dg; break;
				case "flag-dj": Emoji = Emoji_flag_dj; break;
				case "flag-dk": Emoji = Emoji_flag_dk; break;
				case "flag-dm": Emoji = Emoji_flag_dm; break;
				case "flag-do": Emoji = Emoji_flag_do; break;
				case "flag-dz": Emoji = Emoji_flag_dz; break;
				case "flag-ea": Emoji = Emoji_flag_ea; break;
				case "flag-ec": Emoji = Emoji_flag_ec; break;
				case "flag-ee": Emoji = Emoji_flag_ee; break;
				case "flag-eg": Emoji = Emoji_flag_eg; break;
				case "flag-eh": Emoji = Emoji_flag_eh; break;
				case "flag-er": Emoji = Emoji_flag_er; break;
				case "flag-es": Emoji = Emoji_flag_es; break;
				case "flag-et": Emoji = Emoji_flag_et; break;
				case "flag-eu": Emoji = Emoji_flag_eu; break;
				case "flag-fi": Emoji = Emoji_flag_fi; break;
				case "flag-fj": Emoji = Emoji_flag_fj; break;
				case "flag-fk": Emoji = Emoji_flag_fk; break;
				case "flag-fm": Emoji = Emoji_flag_fm; break;
				case "flag-fo": Emoji = Emoji_flag_fo; break;
				case "flag-fr": Emoji = Emoji_flag_fr; break;
				case "flag-ga": Emoji = Emoji_flag_ga; break;
				case "flag-gb": Emoji = Emoji_flag_gb; break;
				case "flag-gd": Emoji = Emoji_flag_gd; break;
				case "flag-ge": Emoji = Emoji_flag_ge; break;
				case "flag-gf": Emoji = Emoji_flag_gf; break;
				case "flag-gg": Emoji = Emoji_flag_gg; break;
				case "flag-gh": Emoji = Emoji_flag_gh; break;
				case "flag-gi": Emoji = Emoji_flag_gi; break;
				case "flag-gl": Emoji = Emoji_flag_gl; break;
				case "flag-gm": Emoji = Emoji_flag_gm; break;
				case "flag-gn": Emoji = Emoji_flag_gn; break;
				case "flag-gp": Emoji = Emoji_flag_gp; break;
				case "flag-gq": Emoji = Emoji_flag_gq; break;
				case "flag-gr": Emoji = Emoji_flag_gr; break;
				case "flag-gs": Emoji = Emoji_flag_gs; break;
				case "flag-gt": Emoji = Emoji_flag_gt; break;
				case "flag-gu": Emoji = Emoji_flag_gu; break;
				case "flag-gw": Emoji = Emoji_flag_gw; break;
				case "flag-gy": Emoji = Emoji_flag_gy; break;
				case "flag-hk": Emoji = Emoji_flag_hk; break;
				case "flag-hm": Emoji = Emoji_flag_hm; break;
				case "flag-hn": Emoji = Emoji_flag_hn; break;
				case "flag-hr": Emoji = Emoji_flag_hr; break;
				case "flag-ht": Emoji = Emoji_flag_ht; break;
				case "flag-hu": Emoji = Emoji_flag_hu; break;
				case "flag-ic": Emoji = Emoji_flag_ic; break;
				case "flag-id": Emoji = Emoji_flag_id; break;
				case "flag-ie": Emoji = Emoji_flag_ie; break;
				case "flag-il": Emoji = Emoji_flag_il; break;
				case "flag-im": Emoji = Emoji_flag_im; break;
				case "flag-in": Emoji = Emoji_flag_in; break;
				case "flag-io": Emoji = Emoji_flag_io; break;
				case "flag-iq": Emoji = Emoji_flag_iq; break;
				case "flag-ir": Emoji = Emoji_flag_ir; break;
				case "flag-is": Emoji = Emoji_flag_is; break;
				case "flag-it": Emoji = Emoji_flag_it; break;
				case "flag-je": Emoji = Emoji_flag_je; break;
				case "flag-jm": Emoji = Emoji_flag_jm; break;
				case "flag-jo": Emoji = Emoji_flag_jo; break;
				case "flag-jp": Emoji = Emoji_flag_jp; break;
				case "flag-ke": Emoji = Emoji_flag_ke; break;
				case "flag-kg": Emoji = Emoji_flag_kg; break;
				case "flag-kh": Emoji = Emoji_flag_kh; break;
				case "flag-ki": Emoji = Emoji_flag_ki; break;
				case "flag-km": Emoji = Emoji_flag_km; break;
				case "flag-kn": Emoji = Emoji_flag_kn; break;
				case "flag-kp": Emoji = Emoji_flag_kp; break;
				case "flag-kr": Emoji = Emoji_flag_kr; break;
				case "flag-kw": Emoji = Emoji_flag_kw; break;
				case "flag-ky": Emoji = Emoji_flag_ky; break;
				case "flag-kz": Emoji = Emoji_flag_kz; break;
				case "flag-la": Emoji = Emoji_flag_la; break;
				case "flag-lb": Emoji = Emoji_flag_lb; break;
				case "flag-lc": Emoji = Emoji_flag_lc; break;
				case "flag-li": Emoji = Emoji_flag_li; break;
				case "flag-lk": Emoji = Emoji_flag_lk; break;
				case "flag-lr": Emoji = Emoji_flag_lr; break;
				case "flag-ls": Emoji = Emoji_flag_ls; break;
				case "flag-lt": Emoji = Emoji_flag_lt; break;
				case "flag-lu": Emoji = Emoji_flag_lu; break;
				case "flag-lv": Emoji = Emoji_flag_lv; break;
				case "flag-ly": Emoji = Emoji_flag_ly; break;
				case "flag-ma": Emoji = Emoji_flag_ma; break;
				case "flag-mc": Emoji = Emoji_flag_mc; break;
				case "flag-md": Emoji = Emoji_flag_md; break;
				case "flag-me": Emoji = Emoji_flag_me; break;
				case "flag-mf": Emoji = Emoji_flag_mf; break;
				case "flag-mg": Emoji = Emoji_flag_mg; break;
				case "flag-mh": Emoji = Emoji_flag_mh; break;
				case "flag-mk": Emoji = Emoji_flag_mk; break;
				case "flag-ml": Emoji = Emoji_flag_ml; break;
				case "flag-mm": Emoji = Emoji_flag_mm; break;
				case "flag-mn": Emoji = Emoji_flag_mn; break;
				case "flag-mo": Emoji = Emoji_flag_mo; break;
				case "flag-mp": Emoji = Emoji_flag_mp; break;
				case "flag-mq": Emoji = Emoji_flag_mq; break;
				case "flag-mr": Emoji = Emoji_flag_mr; break;
				case "flag-ms": Emoji = Emoji_flag_ms; break;
				case "flag-mt": Emoji = Emoji_flag_mt; break;
				case "flag-mu": Emoji = Emoji_flag_mu; break;
				case "flag-mv": Emoji = Emoji_flag_mv; break;
				case "flag-mw": Emoji = Emoji_flag_mw; break;
				case "flag-mx": Emoji = Emoji_flag_mx; break;
				case "flag-my": Emoji = Emoji_flag_my; break;
				case "flag-mz": Emoji = Emoji_flag_mz; break;
				case "flag-na": Emoji = Emoji_flag_na; break;
				case "flag-nc": Emoji = Emoji_flag_nc; break;
				case "flag-ne": Emoji = Emoji_flag_ne; break;
				case "flag-nf": Emoji = Emoji_flag_nf; break;
				case "flag-ng": Emoji = Emoji_flag_ng; break;
				case "flag-ni": Emoji = Emoji_flag_ni; break;
				case "flag-nl": Emoji = Emoji_flag_nl; break;
				case "flag-no": Emoji = Emoji_flag_no; break;
				case "flag-np": Emoji = Emoji_flag_np; break;
				case "flag-nr": Emoji = Emoji_flag_nr; break;
				case "flag-nu": Emoji = Emoji_flag_nu; break;
				case "flag-nz": Emoji = Emoji_flag_nz; break;
				case "flag-om": Emoji = Emoji_flag_om; break;
				case "flag-pa": Emoji = Emoji_flag_pa; break;
				case "flag-pe": Emoji = Emoji_flag_pe; break;
				case "flag-pf": Emoji = Emoji_flag_pf; break;
				case "flag-pg": Emoji = Emoji_flag_pg; break;
				case "flag-ph": Emoji = Emoji_flag_ph; break;
				case "flag-pk": Emoji = Emoji_flag_pk; break;
				case "flag-pl": Emoji = Emoji_flag_pl; break;
				case "flag-pm": Emoji = Emoji_flag_pm; break;
				case "flag-pn": Emoji = Emoji_flag_pn; break;
				case "flag-pr": Emoji = Emoji_flag_pr; break;
				case "flag-ps": Emoji = Emoji_flag_ps; break;
				case "flag-pt": Emoji = Emoji_flag_pt; break;
				case "flag-pw": Emoji = Emoji_flag_pw; break;
				case "flag-py": Emoji = Emoji_flag_py; break;
				case "flag-qa": Emoji = Emoji_flag_qa; break;
				case "flag-re": Emoji = Emoji_flag_re; break;
				case "flag-ro": Emoji = Emoji_flag_ro; break;
				case "flag-rs": Emoji = Emoji_flag_rs; break;
				case "flag-ru": Emoji = Emoji_flag_ru; break;
				case "flag-rw": Emoji = Emoji_flag_rw; break;
				case "flag-sa": Emoji = Emoji_flag_sa; break;
				case "flag-sb": Emoji = Emoji_flag_sb; break;
				case "flag-sc": Emoji = Emoji_flag_sc; break;
				case "flag-sd": Emoji = Emoji_flag_sd; break;
				case "flag-se": Emoji = Emoji_flag_se; break;
				case "flag-sg": Emoji = Emoji_flag_sg; break;
				case "flag-sh": Emoji = Emoji_flag_sh; break;
				case "flag-si": Emoji = Emoji_flag_si; break;
				case "flag-sj": Emoji = Emoji_flag_sj; break;
				case "flag-sk": Emoji = Emoji_flag_sk; break;
				case "flag-sl": Emoji = Emoji_flag_sl; break;
				case "flag-sm": Emoji = Emoji_flag_sm; break;
				case "flag-sn": Emoji = Emoji_flag_sn; break;
				case "flag-so": Emoji = Emoji_flag_so; break;
				case "flag-sr": Emoji = Emoji_flag_sr; break;
				case "flag-ss": Emoji = Emoji_flag_ss; break;
				case "flag-st": Emoji = Emoji_flag_st; break;
				case "flag-sv": Emoji = Emoji_flag_sv; break;
				case "flag-sx": Emoji = Emoji_flag_sx; break;
				case "flag-sy": Emoji = Emoji_flag_sy; break;
				case "flag-sz": Emoji = Emoji_flag_sz; break;
				case "flag-ta": Emoji = Emoji_flag_ta; break;
				case "flag-tc": Emoji = Emoji_flag_tc; break;
				case "flag-td": Emoji = Emoji_flag_td; break;
				case "flag-tf": Emoji = Emoji_flag_tf; break;
				case "flag-tg": Emoji = Emoji_flag_tg; break;
				case "flag-th": Emoji = Emoji_flag_th; break;
				case "flag-tj": Emoji = Emoji_flag_tj; break;
				case "flag-tk": Emoji = Emoji_flag_tk; break;
				case "flag-tl": Emoji = Emoji_flag_tl; break;
				case "flag-tm": Emoji = Emoji_flag_tm; break;
				case "flag-tn": Emoji = Emoji_flag_tn; break;
				case "flag-to": Emoji = Emoji_flag_to; break;
				case "flag-tr": Emoji = Emoji_flag_tr; break;
				case "flag-tt": Emoji = Emoji_flag_tt; break;
				case "flag-tv": Emoji = Emoji_flag_tv; break;
				case "flag-tw": Emoji = Emoji_flag_tw; break;
				case "flag-tz": Emoji = Emoji_flag_tz; break;
				case "flag-ua": Emoji = Emoji_flag_ua; break;
				case "flag-ug": Emoji = Emoji_flag_ug; break;
				case "flag-um": Emoji = Emoji_flag_um; break;
				case "flag-us": Emoji = Emoji_flag_us; break;
				case "flag-uy": Emoji = Emoji_flag_uy; break;
				case "flag-uz": Emoji = Emoji_flag_uz; break;
				case "flag-va": Emoji = Emoji_flag_va; break;
				case "flag-vc": Emoji = Emoji_flag_vc; break;
				case "flag-ve": Emoji = Emoji_flag_ve; break;
				case "flag-vg": Emoji = Emoji_flag_vg; break;
				case "flag-vi": Emoji = Emoji_flag_vi; break;
				case "flag-vn": Emoji = Emoji_flag_vn; break;
				case "flag-vu": Emoji = Emoji_flag_vu; break;
				case "flag-wf": Emoji = Emoji_flag_wf; break;
				case "flag-ws": Emoji = Emoji_flag_ws; break;
				case "flag-xk": Emoji = Emoji_flag_xk; break;
				case "flag-ye": Emoji = Emoji_flag_ye; break;
				case "flag-yt": Emoji = Emoji_flag_yt; break;
				case "flag-za": Emoji = Emoji_flag_za; break;
				case "flag-zm": Emoji = Emoji_flag_zm; break;
				case "flag-zw": Emoji = Emoji_flag_zw; break;
				case "man-man-boy": Emoji = Emoji_man_man_boy; break;
				case "man-man-boy-boy": Emoji = Emoji_man_man_boy_boy; break;
				case "man-man-girl": Emoji = Emoji_man_man_girl; break;
				case "man-man-girl-boy": Emoji = Emoji_man_man_girl_boy; break;
				case "man-man-girl-girl": Emoji = Emoji_man_man_girl_girl; break;
				case "man-woman-boy-boy": Emoji = Emoji_man_woman_boy_boy; break;
				case "man-woman-girl": Emoji = Emoji_man_woman_girl; break;
				case "man-woman-girl-boy": Emoji = Emoji_man_woman_girl_boy; break;
				case "man-woman-girl-girl": Emoji = Emoji_man_woman_girl_girl; break;
				case "man-heart-man": Emoji = Emoji_man_heart_man; break;
				case "man-kiss-man": Emoji = Emoji_man_kiss_man; break;
				case "woman-woman-boy": Emoji = Emoji_woman_woman_boy; break;
				case "woman-woman-boy-boy": Emoji = Emoji_woman_woman_boy_boy; break;
				case "woman-woman-girl": Emoji = Emoji_woman_woman_girl; break;
				case "woman-woman-girl-boy": Emoji = Emoji_woman_woman_girl_boy; break;
				case "woman-woman-girl-girl": Emoji = Emoji_woman_woman_girl_girl; break;
				case "woman-heart-woman": Emoji = Emoji_woman_heart_woman; break;
				case "woman-kiss-woman": Emoji = Emoji_woman_kiss_woman; break;
			}

			return (Emoji != null);
		}

		/// <summary>
		/// :copyright: © copyright sign
		/// </summary>
		public static readonly EmojiInfo Emoji_copyright = new EmojiInfo("copyright", "00a9.png", "copyright sign", "©", true, true, false, true);

		/// <summary>
		/// :registered: ® registered sign
		/// </summary>
		public static readonly EmojiInfo Emoji_registered = new EmojiInfo("registered", "00ae.png", "registered sign", "®", true, true, false, true);

		/// <summary>
		/// :bangbang: ‼ double exclamation mark
		/// </summary>
		public static readonly EmojiInfo Emoji_bangbang = new EmojiInfo("bangbang", "203c.png", "double exclamation mark", "‼", true, true, true, true);

		/// <summary>
		/// :interrobang: ⁉ exclamation question mark
		/// </summary>
		public static readonly EmojiInfo Emoji_interrobang = new EmojiInfo("interrobang", "2049.png", "exclamation question mark", "⁉", true, true, true, true);

		/// <summary>
		/// :tm: ™ trade mark sign
		/// </summary>
		public static readonly EmojiInfo Emoji_tm = new EmojiInfo("tm", "2122.png", "trade mark sign", "™", true, true, false, true);

		/// <summary>
		/// :information_source: ℹ information source
		/// </summary>
		public static readonly EmojiInfo Emoji_information_source = new EmojiInfo("information_source", "2139.png", "information source", "ℹ", true, true, true, true);

		/// <summary>
		/// :left_right_arrow: ↔ left right arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_left_right_arrow = new EmojiInfo("left_right_arrow", "2194.png", "left right arrow", "↔", true, true, true, true);

		/// <summary>
		/// :arrow_up_down: ↕ up down arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_up_down = new EmojiInfo("arrow_up_down", "2195.png", "up down arrow", "↕", true, true, true, true);

		/// <summary>
		/// :arrow_upper_left: ↖ north west arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_upper_left = new EmojiInfo("arrow_upper_left", "2196.png", "north west arrow", "↖", true, true, true, true);

		/// <summary>
		/// :arrow_upper_right: ↗ north east arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_upper_right = new EmojiInfo("arrow_upper_right", "2197.png", "north east arrow", "↗", true, true, true, true);

		/// <summary>
		/// :arrow_lower_right: ↘ south east arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_lower_right = new EmojiInfo("arrow_lower_right", "2198.png", "south east arrow", "↘", true, true, true, true);

		/// <summary>
		/// :arrow_lower_left: ↙ south west arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_lower_left = new EmojiInfo("arrow_lower_left", "2199.png", "south west arrow", "↙", true, true, true, true);

		/// <summary>
		/// :leftwards_arrow_with_hook: ↩ leftwards arrow with hook
		/// </summary>
		public static readonly EmojiInfo Emoji_leftwards_arrow_with_hook = new EmojiInfo("leftwards_arrow_with_hook", "21a9.png", "leftwards arrow with hook", "↩", true, true, true, true);

		/// <summary>
		/// :arrow_right_hook: ↪ rightwards arrow with hook
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_right_hook = new EmojiInfo("arrow_right_hook", "21aa.png", "rightwards arrow with hook", "↪", true, true, true, true);

		/// <summary>
		/// :watch: ⌚ watch
		/// </summary>
		public static readonly EmojiInfo Emoji_watch = new EmojiInfo("watch", "231a.png", "watch", "⌚", true, true, true, true);

		/// <summary>
		/// :hourglass: ⌛ hourglass
		/// </summary>
		public static readonly EmojiInfo Emoji_hourglass = new EmojiInfo("hourglass", "231b.png", "hourglass", "⌛", true, true, true, true);

		/// <summary>
		/// :keyboard: ⌨ keyboard
		/// </summary>
		public static readonly EmojiInfo Emoji_keyboard = new EmojiInfo("keyboard", "2328.png", "keyboard", "⌨", true, true, true, false);

		/// <summary>
		/// :fast_forward: ⏩ black right-pointing double triangle
		/// </summary>
		public static readonly EmojiInfo Emoji_fast_forward = new EmojiInfo("fast_forward", "23e9.png", "black right-pointing double triangle", "⏩", true, true, true, true);

		/// <summary>
		/// :rewind: ⏪ black left-pointing double triangle
		/// </summary>
		public static readonly EmojiInfo Emoji_rewind = new EmojiInfo("rewind", "23ea.png", "black left-pointing double triangle", "⏪", true, true, true, true);

		/// <summary>
		/// :arrow_double_up: ⏫ black up-pointing double triangle
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_double_up = new EmojiInfo("arrow_double_up", "23eb.png", "black up-pointing double triangle", "⏫", true, true, true, true);

		/// <summary>
		/// :arrow_double_down: ⏬ black down-pointing double triangle
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_double_down = new EmojiInfo("arrow_double_down", "23ec.png", "black down-pointing double triangle", "⏬", true, true, true, true);

		/// <summary>
		/// :black_right_pointing_double_triangle_with_vertical_bar: ⏭ black right-pointing double triangle with vertical bar
		/// </summary>
		public static readonly EmojiInfo Emoji_black_right_pointing_double_triangle_with_vertical_bar = new EmojiInfo("black_right_pointing_double_triangle_with_vertical_bar", "23ed.png", "black right-pointing double triangle with vertical bar", "⏭", true, true, true, false);

		/// <summary>
		/// :black_left_pointing_double_triangle_with_vertical_bar: ⏮ black left-pointing double triangle with vertical bar
		/// </summary>
		public static readonly EmojiInfo Emoji_black_left_pointing_double_triangle_with_vertical_bar = new EmojiInfo("black_left_pointing_double_triangle_with_vertical_bar", "23ee.png", "black left-pointing double triangle with vertical bar", "⏮", true, true, true, false);

		/// <summary>
		/// :black_right_pointing_triangle_with_double_vertical_bar: ⏯ black right-pointing triangle with double vertical bar
		/// </summary>
		public static readonly EmojiInfo Emoji_black_right_pointing_triangle_with_double_vertical_bar = new EmojiInfo("black_right_pointing_triangle_with_double_vertical_bar", "23ef.png", "black right-pointing triangle with double vertical bar", "⏯", true, true, true, false);

		/// <summary>
		/// :alarm_clock: ⏰ alarm clock
		/// </summary>
		public static readonly EmojiInfo Emoji_alarm_clock = new EmojiInfo("alarm_clock", "23f0.png", "alarm clock", "⏰", true, true, true, true);

		/// <summary>
		/// :stopwatch: ⏱ stopwatch
		/// </summary>
		public static readonly EmojiInfo Emoji_stopwatch = new EmojiInfo("stopwatch", "23f1.png", "stopwatch", "⏱", true, true, true, false);

		/// <summary>
		/// :timer_clock: ⏲ timer clock
		/// </summary>
		public static readonly EmojiInfo Emoji_timer_clock = new EmojiInfo("timer_clock", "23f2.png", "timer clock", "⏲", true, true, true, false);

		/// <summary>
		/// :hourglass_flowing_sand: ⏳ hourglass with flowing sand
		/// </summary>
		public static readonly EmojiInfo Emoji_hourglass_flowing_sand = new EmojiInfo("hourglass_flowing_sand", "23f3.png", "hourglass with flowing sand", "⏳", true, true, true, true);

		/// <summary>
		/// :double_vertical_bar: ⏸ double vertical bar
		/// </summary>
		public static readonly EmojiInfo Emoji_double_vertical_bar = new EmojiInfo("double_vertical_bar", "23f8.png", "double vertical bar", "⏸", true, true, true, false);

		/// <summary>
		/// :black_square_for_stop: ⏹ black square for stop
		/// </summary>
		public static readonly EmojiInfo Emoji_black_square_for_stop = new EmojiInfo("black_square_for_stop", "23f9.png", "black square for stop", "⏹", true, true, true, false);

		/// <summary>
		/// :black_circle_for_record: ⏺ black circle for record
		/// </summary>
		public static readonly EmojiInfo Emoji_black_circle_for_record = new EmojiInfo("black_circle_for_record", "23fa.png", "black circle for record", "⏺", true, true, true, false);

		/// <summary>
		/// :m: Ⓜ circled latin capital letter m
		/// </summary>
		public static readonly EmojiInfo Emoji_m = new EmojiInfo("m", "24c2.png", "circled latin capital letter m", "Ⓜ", true, true, true, true);

		/// <summary>
		/// :black_small_square: ▪ black small square
		/// </summary>
		public static readonly EmojiInfo Emoji_black_small_square = new EmojiInfo("black_small_square", "25aa.png", "black small square", "▪", true, true, true, true);

		/// <summary>
		/// :white_small_square: ▫ white small square
		/// </summary>
		public static readonly EmojiInfo Emoji_white_small_square = new EmojiInfo("white_small_square", "25ab.png", "white small square", "▫", true, true, true, true);

		/// <summary>
		/// :arrow_forward: ▶ black right-pointing triangle
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_forward = new EmojiInfo("arrow_forward", "25b6.png", "black right-pointing triangle", "▶", true, true, true, true);

		/// <summary>
		/// :arrow_backward: ◀ black left-pointing triangle
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_backward = new EmojiInfo("arrow_backward", "25c0.png", "black left-pointing triangle", "◀", true, true, true, true);

		/// <summary>
		/// :white_medium_square: ◻ white medium square
		/// </summary>
		public static readonly EmojiInfo Emoji_white_medium_square = new EmojiInfo("white_medium_square", "25fb.png", "white medium square", "◻", true, true, true, true);

		/// <summary>
		/// :black_medium_square: ◼ black medium square
		/// </summary>
		public static readonly EmojiInfo Emoji_black_medium_square = new EmojiInfo("black_medium_square", "25fc.png", "black medium square", "◼", true, true, true, true);

		/// <summary>
		/// :white_medium_small_square: ◽ white medium small square
		/// </summary>
		public static readonly EmojiInfo Emoji_white_medium_small_square = new EmojiInfo("white_medium_small_square", "25fd.png", "white medium small square", "◽", true, true, true, true);

		/// <summary>
		/// :black_medium_small_square: ◾ black medium small square
		/// </summary>
		public static readonly EmojiInfo Emoji_black_medium_small_square = new EmojiInfo("black_medium_small_square", "25fe.png", "black medium small square", "◾", true, true, true, true);

		/// <summary>
		/// :sunny: ☀ black sun with rays
		/// </summary>
		public static readonly EmojiInfo Emoji_sunny = new EmojiInfo("sunny", "2600.png", "black sun with rays", "☀", true, true, true, true);

		/// <summary>
		/// :cloud: ☁ cloud
		/// </summary>
		public static readonly EmojiInfo Emoji_cloud = new EmojiInfo("cloud", "2601.png", "cloud", "☁", true, true, true, true);

		/// <summary>
		/// :umbrella: ☂ umbrella
		/// </summary>
		public static readonly EmojiInfo Emoji_umbrella = new EmojiInfo("umbrella", "2602.png", "umbrella", "☂", true, true, true, false);

		/// <summary>
		/// :showman: ☃ snowman
		/// </summary>
		public static readonly EmojiInfo Emoji_showman = new EmojiInfo("showman", "2603.png", "snowman", "☃", true, true, true, false);

		/// <summary>
		/// :comet: ☄ comet
		/// </summary>
		public static readonly EmojiInfo Emoji_comet = new EmojiInfo("comet", "2604.png", "comet", "☄", true, true, true, false);

		/// <summary>
		/// :phone: ☎ black telephone
		/// </summary>
		public static readonly EmojiInfo Emoji_phone = new EmojiInfo("phone", "260e.png", "black telephone", "☎", true, true, true, true);

		/// <summary>
		/// :ballot_box_with_check: ☑ ballot box with check
		/// </summary>
		public static readonly EmojiInfo Emoji_ballot_box_with_check = new EmojiInfo("ballot_box_with_check", "2611.png", "ballot box with check", "☑", true, true, true, true);

		/// <summary>
		/// :umbrella: ☔ umbrella with rain drops
		/// </summary>
		public static readonly EmojiInfo Emoji_umbrella_rain = new EmojiInfo("umbrella", "2614.png", "umbrella with rain drops", "☔", true, true, true, true);

		/// <summary>
		/// :coffee: ☕ hot beverage
		/// </summary>
		public static readonly EmojiInfo Emoji_coffee = new EmojiInfo("coffee", "2615.png", "hot beverage", "☕", true, true, true, true);

		/// <summary>
		/// :shamrock: ☘ shamrock
		/// </summary>
		public static readonly EmojiInfo Emoji_shamrock = new EmojiInfo("shamrock", "2618.png", "shamrock", "☘", true, true, true, false);

		/// <summary>
		/// :point_up: ☝ white up pointing index
		/// </summary>
		public static readonly EmojiInfo Emoji_point_up = new EmojiInfo("point_up", "261d.png", "white up pointing index", "☝", true, true, true, true);

		/// <summary>
		/// :skull_and_crossbones: ☠ skull and crossbones
		/// </summary>
		public static readonly EmojiInfo Emoji_skull_and_crossbones = new EmojiInfo("skull_and_crossbones", "2620.png", "skull and crossbones", "☠", true, true, true, false);

		/// <summary>
		/// :radioactive_sign: ☢ radioactive sign
		/// </summary>
		public static readonly EmojiInfo Emoji_radioactive_sign = new EmojiInfo("radioactive_sign", "2622.png", "radioactive sign", "☢", true, true, true, false);

		/// <summary>
		/// :biohazard_sign: ☣ biohazard sign
		/// </summary>
		public static readonly EmojiInfo Emoji_biohazard_sign = new EmojiInfo("biohazard_sign", "2623.png", "biohazard sign", "☣", true, true, true, false);

		/// <summary>
		/// :orthodox_cross: ☦ orthodox cross
		/// </summary>
		public static readonly EmojiInfo Emoji_orthodox_cross = new EmojiInfo("orthodox_cross", "2626.png", "orthodox cross", "☦", true, true, true, false);

		/// <summary>
		/// :star_and_crescent: ☪ star and crescent
		/// </summary>
		public static readonly EmojiInfo Emoji_star_and_crescent = new EmojiInfo("star_and_crescent", "262a.png", "star and crescent", "☪", true, true, true, false);

		/// <summary>
		/// :peace_symbol: ☮ peace symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_peace_symbol = new EmojiInfo("peace_symbol", "262e.png", "peace symbol", "☮", true, true, true, false);

		/// <summary>
		/// :yin_yang: ☯ yin yang
		/// </summary>
		public static readonly EmojiInfo Emoji_yin_yang = new EmojiInfo("yin_yang", "262f.png", "yin yang", "☯", true, true, true, false);

		/// <summary>
		/// :wheel_of_dharma: ☸ wheel of dharma
		/// </summary>
		public static readonly EmojiInfo Emoji_wheel_of_dharma = new EmojiInfo("wheel_of_dharma", "2638.png", "wheel of dharma", "☸", true, true, true, false);

		/// <summary>
		/// :white_frowning_face: ☹ white frowning face
		/// </summary>
		public static readonly EmojiInfo Emoji_white_frowning_face = new EmojiInfo("white_frowning_face", "2639.png", "white frowning face", "☹", true, true, true, false);

		/// <summary>
		/// :relaxed: ☺ white smiling face
		/// </summary>
		public static readonly EmojiInfo Emoji_relaxed = new EmojiInfo("relaxed", "263a.png", "white smiling face", "☺", true, true, true, true);

		/// <summary>
		/// :aries: ♈ aries
		/// </summary>
		public static readonly EmojiInfo Emoji_aries = new EmojiInfo("aries", "2648.png", "aries", "♈", true, true, true, true);

		/// <summary>
		/// :taurus: ♉ taurus
		/// </summary>
		public static readonly EmojiInfo Emoji_taurus = new EmojiInfo("taurus", "2649.png", "taurus", "♉", true, true, true, true);

		/// <summary>
		/// :gemini: ♊ gemini
		/// </summary>
		public static readonly EmojiInfo Emoji_gemini = new EmojiInfo("gemini", "264a.png", "gemini", "♊", true, true, true, true);

		/// <summary>
		/// :cancer: ♋ cancer
		/// </summary>
		public static readonly EmojiInfo Emoji_cancer = new EmojiInfo("cancer", "264b.png", "cancer", "♋", true, true, true, true);

		/// <summary>
		/// :leo: ♌ leo
		/// </summary>
		public static readonly EmojiInfo Emoji_leo = new EmojiInfo("leo", "264c.png", "leo", "♌", true, true, true, true);

		/// <summary>
		/// :virgo: ♍ virgo
		/// </summary>
		public static readonly EmojiInfo Emoji_virgo = new EmojiInfo("virgo", "264d.png", "virgo", "♍", true, true, true, true);

		/// <summary>
		/// :libra: ♎ libra
		/// </summary>
		public static readonly EmojiInfo Emoji_libra = new EmojiInfo("libra", "264e.png", "libra", "♎", true, true, true, true);

		/// <summary>
		/// :scorpius: ♏ scorpius
		/// </summary>
		public static readonly EmojiInfo Emoji_scorpius = new EmojiInfo("scorpius", "264f.png", "scorpius", "♏", true, true, true, true);

		/// <summary>
		/// :sagittarius: ♐ sagittarius
		/// </summary>
		public static readonly EmojiInfo Emoji_sagittarius = new EmojiInfo("sagittarius", "2650.png", "sagittarius", "♐", true, true, true, true);

		/// <summary>
		/// :capricorn: ♑ capricorn
		/// </summary>
		public static readonly EmojiInfo Emoji_capricorn = new EmojiInfo("capricorn", "2651.png", "capricorn", "♑", true, true, true, true);

		/// <summary>
		/// :aquarius: ♒ aquarius
		/// </summary>
		public static readonly EmojiInfo Emoji_aquarius = new EmojiInfo("aquarius", "2652.png", "aquarius", "♒", true, true, true, true);

		/// <summary>
		/// :pisces: ♓ pisces
		/// </summary>
		public static readonly EmojiInfo Emoji_pisces = new EmojiInfo("pisces", "2653.png", "pisces", "♓", true, true, true, true);

		/// <summary>
		/// :spades: ♠ black spade suit
		/// </summary>
		public static readonly EmojiInfo Emoji_spades = new EmojiInfo("spades", "2660.png", "black spade suit", "♠", true, true, true, true);

		/// <summary>
		/// :clubs: ♣ black club suit
		/// </summary>
		public static readonly EmojiInfo Emoji_clubs = new EmojiInfo("clubs", "2663.png", "black club suit", "♣", true, true, true, true);

		/// <summary>
		/// :hearts: ♥ black heart suit
		/// </summary>
		public static readonly EmojiInfo Emoji_hearts = new EmojiInfo("hearts", "2665.png", "black heart suit", "♥", true, true, true, true);

		/// <summary>
		/// :diamonds: ♦ black diamond suit
		/// </summary>
		public static readonly EmojiInfo Emoji_diamonds = new EmojiInfo("diamonds", "2666.png", "black diamond suit", "♦", true, true, true, true);

		/// <summary>
		/// :hotsprings: ♨ hot springs
		/// </summary>
		public static readonly EmojiInfo Emoji_hotsprings = new EmojiInfo("hotsprings", "2668.png", "hot springs", "♨", true, true, true, true);

		/// <summary>
		/// :recycle: ♻ black universal recycling symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_recycle = new EmojiInfo("recycle", "267b.png", "black universal recycling symbol", "♻", true, true, true, true);

		/// <summary>
		/// :wheelchair: ♿ wheelchair symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_wheelchair = new EmojiInfo("wheelchair", "267f.png", "wheelchair symbol", "♿", true, true, true, true);

		/// <summary>
		/// :hammer_and_pick: ⚒ hammer and pick
		/// </summary>
		public static readonly EmojiInfo Emoji_hammer_and_pick = new EmojiInfo("hammer_and_pick", "2692.png", "hammer and pick", "⚒", true, true, true, false);

		/// <summary>
		/// :anchor: ⚓ anchor
		/// </summary>
		public static readonly EmojiInfo Emoji_anchor = new EmojiInfo("anchor", "2693.png", "anchor", "⚓", true, true, true, true);

		/// <summary>
		/// :crossed_swords: ⚔ crossed swords
		/// </summary>
		public static readonly EmojiInfo Emoji_crossed_swords = new EmojiInfo("crossed_swords", "2694.png", "crossed swords", "⚔", true, true, true, false);

		/// <summary>
		/// :scales: ⚖ scales
		/// </summary>
		public static readonly EmojiInfo Emoji_scales = new EmojiInfo("scales", "2696.png", "scales", "⚖", true, true, true, false);

		/// <summary>
		/// :alembic: ⚗ alembic
		/// </summary>
		public static readonly EmojiInfo Emoji_alembic = new EmojiInfo("alembic", "2697.png", "alembic", "⚗", true, true, true, false);

		/// <summary>
		/// :gear: ⚙ gear
		/// </summary>
		public static readonly EmojiInfo Emoji_gear = new EmojiInfo("gear", "2699.png", "gear", "⚙", true, true, true, false);

		/// <summary>
		/// :atom_symbol: ⚛ atom symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_atom_symbol = new EmojiInfo("atom_symbol", "269b.png", "atom symbol", "⚛", true, true, true, false);

		/// <summary>
		/// :fleur_de_lis: ⚜ fleur-de-lis
		/// </summary>
		public static readonly EmojiInfo Emoji_fleur_de_lis = new EmojiInfo("fleur_de_lis", "269c.png", "fleur-de-lis", "⚜", true, true, true, false);

		/// <summary>
		/// :warning: ⚠ warning sign
		/// </summary>
		public static readonly EmojiInfo Emoji_warning = new EmojiInfo("warning", "26a0.png", "warning sign", "⚠", true, true, true, true);

		/// <summary>
		/// :zap: ⚡ high voltage sign
		/// </summary>
		public static readonly EmojiInfo Emoji_zap = new EmojiInfo("zap", "26a1.png", "high voltage sign", "⚡", true, true, true, true);

		/// <summary>
		/// :white_circle: ⚪ medium white circle
		/// </summary>
		public static readonly EmojiInfo Emoji_white_circle = new EmojiInfo("white_circle", "26aa.png", "medium white circle", "⚪", true, true, true, true);

		/// <summary>
		/// :black_circle: ⚫ medium black circle
		/// </summary>
		public static readonly EmojiInfo Emoji_black_circle = new EmojiInfo("black_circle", "26ab.png", "medium black circle", "⚫", true, true, true, true);

		/// <summary>
		/// :coffin: ⚰ coffin
		/// </summary>
		public static readonly EmojiInfo Emoji_coffin = new EmojiInfo("coffin", "26b0.png", "coffin", "⚰", true, true, true, false);

		/// <summary>
		/// :funeral_urn: ⚱ funeral urn
		/// </summary>
		public static readonly EmojiInfo Emoji_funeral_urn = new EmojiInfo("funeral_urn", "26b1.png", "funeral urn", "⚱", true, true, true, false);

		/// <summary>
		/// :soccer: ⚽ soccer ball
		/// </summary>
		public static readonly EmojiInfo Emoji_soccer = new EmojiInfo("soccer", "26bd.png", "soccer ball", "⚽", true, true, true, true);

		/// <summary>
		/// :baseball: ⚾ baseball
		/// </summary>
		public static readonly EmojiInfo Emoji_baseball = new EmojiInfo("baseball", "26be.png", "baseball", "⚾", true, true, true, true);

		/// <summary>
		/// :snowman: ⛄ snowman without snow
		/// </summary>
		public static readonly EmojiInfo Emoji_snowman = new EmojiInfo("snowman", "26c4.png", "snowman without snow", "⛄", true, true, true, true);

		/// <summary>
		/// :partly_sunny: ⛅ sun behind cloud
		/// </summary>
		public static readonly EmojiInfo Emoji_partly_sunny = new EmojiInfo("partly_sunny", "26c5.png", "sun behind cloud", "⛅", true, true, true, true);

		/// <summary>
		/// :thunder_cloud_and_rain: ⛈ thunder cloud and rain
		/// </summary>
		public static readonly EmojiInfo Emoji_thunder_cloud_and_rain = new EmojiInfo("thunder_cloud_and_rain", "26c8.png", "thunder cloud and rain", "⛈", true, true, true, false);

		/// <summary>
		/// :ophiuchus: ⛎ ophiuchus
		/// </summary>
		public static readonly EmojiInfo Emoji_ophiuchus = new EmojiInfo("ophiuchus", "26ce.png", "ophiuchus", "⛎", true, true, true, true);

		/// <summary>
		/// :pick: ⛏ pick
		/// </summary>
		public static readonly EmojiInfo Emoji_pick = new EmojiInfo("pick", "26cf.png", "pick", "⛏", true, true, true, false);

		/// <summary>
		/// :helmet_with_white_cross: ⛑ helmet with white cross
		/// </summary>
		public static readonly EmojiInfo Emoji_helmet_with_white_cross = new EmojiInfo("helmet_with_white_cross", "26d1.png", "helmet with white cross", "⛑", true, true, true, false);

		/// <summary>
		/// :chains: ⛓ chains
		/// </summary>
		public static readonly EmojiInfo Emoji_chains = new EmojiInfo("chains", "26d3.png", "chains", "⛓", true, true, true, false);

		/// <summary>
		/// :no_entry: ⛔ no entry
		/// </summary>
		public static readonly EmojiInfo Emoji_no_entry = new EmojiInfo("no_entry", "26d4.png", "no entry", "⛔", true, true, true, true);

		/// <summary>
		/// :shinto_shrine: ⛩ shinto shrine
		/// </summary>
		public static readonly EmojiInfo Emoji_shinto_shrine = new EmojiInfo("shinto_shrine", "26e9.png", "shinto shrine", "⛩", true, true, true, false);

		/// <summary>
		/// :church: ⛪ church
		/// </summary>
		public static readonly EmojiInfo Emoji_church = new EmojiInfo("church", "26ea.png", "church", "⛪", true, true, true, true);

		/// <summary>
		/// :mountain: ⛰ mountain
		/// </summary>
		public static readonly EmojiInfo Emoji_mountain = new EmojiInfo("mountain", "26f0.png", "mountain", "⛰", true, true, true, false);

		/// <summary>
		/// :umbrella_on_ground: ⛱ umbrella on ground
		/// </summary>
		public static readonly EmojiInfo Emoji_umbrella_on_ground = new EmojiInfo("umbrella_on_ground", "26f1.png", "umbrella on ground", "⛱", true, true, true, false);

		/// <summary>
		/// :fountain: ⛲ fountain
		/// </summary>
		public static readonly EmojiInfo Emoji_fountain = new EmojiInfo("fountain", "26f2.png", "fountain", "⛲", true, true, true, true);

		/// <summary>
		/// :golf: ⛳ flag in hole
		/// </summary>
		public static readonly EmojiInfo Emoji_golf = new EmojiInfo("golf", "26f3.png", "flag in hole", "⛳", true, true, true, true);

		/// <summary>
		/// :ferry: ⛴ ferry
		/// </summary>
		public static readonly EmojiInfo Emoji_ferry = new EmojiInfo("ferry", "26f4.png", "ferry", "⛴", true, true, true, false);

		/// <summary>
		/// :boat: ⛵ sailboat
		/// </summary>
		public static readonly EmojiInfo Emoji_boat = new EmojiInfo("boat", "26f5.png", "sailboat", "⛵", true, true, true, true);

		/// <summary>
		/// :skier: ⛷ skier
		/// </summary>
		public static readonly EmojiInfo Emoji_skier = new EmojiInfo("skier", "26f7.png", "skier", "⛷", true, true, true, false);

		/// <summary>
		/// :ice_skate: ⛸ ice skate
		/// </summary>
		public static readonly EmojiInfo Emoji_ice_skate = new EmojiInfo("ice_skate", "26f8.png", "ice skate", "⛸", true, true, true, false);

		/// <summary>
		/// :person_with_ball: ⛹ person with ball
		/// </summary>
		public static readonly EmojiInfo Emoji_person_with_ball = new EmojiInfo("person_with_ball", "26f9.png", "person with ball", "⛹", true, true, true, false);

		/// <summary>
		/// :tent: ⛺ tent
		/// </summary>
		public static readonly EmojiInfo Emoji_tent = new EmojiInfo("tent", "26fa.png", "tent", "⛺", true, true, true, true);

		/// <summary>
		/// :fuelpump: ⛽ fuel pump
		/// </summary>
		public static readonly EmojiInfo Emoji_fuelpump = new EmojiInfo("fuelpump", "26fd.png", "fuel pump", "⛽", true, true, true, true);

		/// <summary>
		/// :scissors: ✂ black scissors
		/// </summary>
		public static readonly EmojiInfo Emoji_scissors = new EmojiInfo("scissors", "2702.png", "black scissors", "✂", true, true, true, true);

		/// <summary>
		/// :white_check_mark: ✅ white heavy check mark
		/// </summary>
		public static readonly EmojiInfo Emoji_white_check_mark = new EmojiInfo("white_check_mark", "2705.png", "white heavy check mark", "✅", true, true, true, true);

		/// <summary>
		/// :airplane: ✈ airplane
		/// </summary>
		public static readonly EmojiInfo Emoji_airplane = new EmojiInfo("airplane", "2708.png", "airplane", "✈", true, true, true, true);

		/// <summary>
		/// :email: ✉ envelope
		/// </summary>
		public static readonly EmojiInfo Emoji_email = new EmojiInfo("email", "2709.png", "envelope", "✉", true, true, true, true);

		/// <summary>
		/// :fist: ✊ raised fist
		/// </summary>
		public static readonly EmojiInfo Emoji_fist = new EmojiInfo("fist", "270a.png", "raised fist", "✊", true, true, true, true);

		/// <summary>
		/// :hand: ✋ raised hand
		/// </summary>
		public static readonly EmojiInfo Emoji_hand = new EmojiInfo("hand", "270b.png", "raised hand", "✋", true, true, true, true);

		/// <summary>
		/// :v: ✌ victory hand
		/// </summary>
		public static readonly EmojiInfo Emoji_v = new EmojiInfo("v", "270c.png", "victory hand", "✌", true, true, true, true);

		/// <summary>
		/// :writing_hand: ✍ writing hand
		/// </summary>
		public static readonly EmojiInfo Emoji_writing_hand = new EmojiInfo("writing_hand", "270d.png", "writing hand", "✍", true, true, true, false);

		/// <summary>
		/// :pencil2: ✏ pencil
		/// </summary>
		public static readonly EmojiInfo Emoji_pencil2 = new EmojiInfo("pencil2", "270f.png", "pencil", "✏", true, true, true, true);

		/// <summary>
		/// :black_nib: ✒ black nib
		/// </summary>
		public static readonly EmojiInfo Emoji_black_nib = new EmojiInfo("black_nib", "2712.png", "black nib", "✒", true, true, true, true);

		/// <summary>
		/// :heavy_check_mark: ✔ heavy check mark
		/// </summary>
		public static readonly EmojiInfo Emoji_heavy_check_mark = new EmojiInfo("heavy_check_mark", "2714.png", "heavy check mark", "✔", true, true, true, true);

		/// <summary>
		/// :heavy_multiplication_x: ✖ heavy multiplication x
		/// </summary>
		public static readonly EmojiInfo Emoji_heavy_multiplication_x = new EmojiInfo("heavy_multiplication_x", "2716.png", "heavy multiplication x", "✖", true, true, true, true);

		/// <summary>
		/// :latin_cross: ✝ latin cross
		/// </summary>
		public static readonly EmojiInfo Emoji_latin_cross = new EmojiInfo("latin_cross", "271d.png", "latin cross", "✝", true, true, true, false);

		/// <summary>
		/// :star_of_david: ✡ star of david
		/// </summary>
		public static readonly EmojiInfo Emoji_star_of_david = new EmojiInfo("star_of_david", "2721.png", "star of david", "✡", true, true, true, false);

		/// <summary>
		/// :sparkles: ✨ sparkles
		/// </summary>
		public static readonly EmojiInfo Emoji_sparkles = new EmojiInfo("sparkles", "2728.png", "sparkles", "✨", true, true, true, true);

		/// <summary>
		/// :eight_spoked_asterisk: ✳ eight spoked asterisk
		/// </summary>
		public static readonly EmojiInfo Emoji_eight_spoked_asterisk = new EmojiInfo("eight_spoked_asterisk", "2733.png", "eight spoked asterisk", "✳", true, true, true, true);

		/// <summary>
		/// :eight_pointed_black_star: ✴ eight pointed black star
		/// </summary>
		public static readonly EmojiInfo Emoji_eight_pointed_black_star = new EmojiInfo("eight_pointed_black_star", "2734.png", "eight pointed black star", "✴", true, true, true, true);

		/// <summary>
		/// :snowflake: ❄ snowflake
		/// </summary>
		public static readonly EmojiInfo Emoji_snowflake = new EmojiInfo("snowflake", "2744.png", "snowflake", "❄", true, true, true, true);

		/// <summary>
		/// :sparkle: ❇ sparkle
		/// </summary>
		public static readonly EmojiInfo Emoji_sparkle = new EmojiInfo("sparkle", "2747.png", "sparkle", "❇", true, true, true, true);

		/// <summary>
		/// :x: ❌ cross mark
		/// </summary>
		public static readonly EmojiInfo Emoji_x = new EmojiInfo("x", "274c.png", "cross mark", "❌", true, true, true, true);

		/// <summary>
		/// :negative_squared_cross_mark: ❎ negative squared cross mark
		/// </summary>
		public static readonly EmojiInfo Emoji_negative_squared_cross_mark = new EmojiInfo("negative_squared_cross_mark", "274e.png", "negative squared cross mark", "❎", true, true, true, true);

		/// <summary>
		/// :question: ❓ black question mark ornament
		/// </summary>
		public static readonly EmojiInfo Emoji_question = new EmojiInfo("question", "2753.png", "black question mark ornament", "❓", true, true, true, true);

		/// <summary>
		/// :grey_question: ❔ white question mark ornament
		/// </summary>
		public static readonly EmojiInfo Emoji_grey_question = new EmojiInfo("grey_question", "2754.png", "white question mark ornament", "❔", true, true, true, true);

		/// <summary>
		/// :grey_exclamation: ❕ white exclamation mark ornament
		/// </summary>
		public static readonly EmojiInfo Emoji_grey_exclamation = new EmojiInfo("grey_exclamation", "2755.png", "white exclamation mark ornament", "❕", true, true, true, true);

		/// <summary>
		/// :exclamation: ❗ heavy exclamation mark symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_exclamation = new EmojiInfo("exclamation", "2757.png", "heavy exclamation mark symbol", "❗", true, true, true, true);

		/// <summary>
		/// :heavy_heart_exclamation_mark_ornament: ❣ heavy heart exclamation mark ornament
		/// </summary>
		public static readonly EmojiInfo Emoji_heavy_heart_exclamation_mark_ornament = new EmojiInfo("heavy_heart_exclamation_mark_ornament", "2763.png", "heavy heart exclamation mark ornament", "❣", true, true, true, false);

		/// <summary>
		/// :heart: ❤ heavy black heart
		/// </summary>
		public static readonly EmojiInfo Emoji_heart = new EmojiInfo("heart", "2764.png", "heavy black heart", "❤", true, true, true, true);

		/// <summary>
		/// :heavy_plus_sign: ➕ heavy plus sign
		/// </summary>
		public static readonly EmojiInfo Emoji_heavy_plus_sign = new EmojiInfo("heavy_plus_sign", "2795.png", "heavy plus sign", "➕", true, true, true, true);

		/// <summary>
		/// :heavy_minus_sign: ➖ heavy minus sign
		/// </summary>
		public static readonly EmojiInfo Emoji_heavy_minus_sign = new EmojiInfo("heavy_minus_sign", "2796.png", "heavy minus sign", "➖", true, true, true, true);

		/// <summary>
		/// :heavy_division_sign: ➗ heavy division sign
		/// </summary>
		public static readonly EmojiInfo Emoji_heavy_division_sign = new EmojiInfo("heavy_division_sign", "2797.png", "heavy division sign", "➗", true, true, true, true);

		/// <summary>
		/// :arrow_right: ➡ black rightwards arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_right = new EmojiInfo("arrow_right", "27a1.png", "black rightwards arrow", "➡", true, true, true, true);

		/// <summary>
		/// :curly_loop: ➰ curly loop
		/// </summary>
		public static readonly EmojiInfo Emoji_curly_loop = new EmojiInfo("curly_loop", "27b0.png", "curly loop", "➰", true, true, true, true);

		/// <summary>
		/// :loop: ➿ double curly loop
		/// </summary>
		public static readonly EmojiInfo Emoji_loop = new EmojiInfo("loop", "27bf.png", "double curly loop", "➿", true, true, true, true);

		/// <summary>
		/// :arrow_heading_up: ⤴ arrow pointing rightwards then curving upwards
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_heading_up = new EmojiInfo("arrow_heading_up", "2934.png", "arrow pointing rightwards then curving upwards", "⤴", true, true, true, true);

		/// <summary>
		/// :arrow_heading_down: ⤵ arrow pointing rightwards then curving downwards
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_heading_down = new EmojiInfo("arrow_heading_down", "2935.png", "arrow pointing rightwards then curving downwards", "⤵", true, true, true, true);

		/// <summary>
		/// :arrow_left: ⬅ leftwards black arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_left = new EmojiInfo("arrow_left", "2b05.png", "leftwards black arrow", "⬅", true, true, true, true);

		/// <summary>
		/// :arrow_up: ⬆ upwards black arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_up = new EmojiInfo("arrow_up", "2b06.png", "upwards black arrow", "⬆", true, true, true, true);

		/// <summary>
		/// :arrow_down: ⬇ downwards black arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_down = new EmojiInfo("arrow_down", "2b07.png", "downwards black arrow", "⬇", true, true, true, true);

		/// <summary>
		/// :black_large_square: ⬛ black large square
		/// </summary>
		public static readonly EmojiInfo Emoji_black_large_square = new EmojiInfo("black_large_square", "2b1b.png", "black large square", "⬛", true, true, true, true);

		/// <summary>
		/// :white_large_square: ⬜ white large square
		/// </summary>
		public static readonly EmojiInfo Emoji_white_large_square = new EmojiInfo("white_large_square", "2b1c.png", "white large square", "⬜", true, true, true, true);

		/// <summary>
		/// :star: ⭐ white medium star
		/// </summary>
		public static readonly EmojiInfo Emoji_star = new EmojiInfo("star", "2b50.png", "white medium star", "⭐", true, true, true, true);

		/// <summary>
		/// :o: ⭕ heavy large circle
		/// </summary>
		public static readonly EmojiInfo Emoji_o = new EmojiInfo("o", "2b55.png", "heavy large circle", "⭕", true, true, true, true);

		/// <summary>
		/// :wavy_dash: 〰 wavy dash
		/// </summary>
		public static readonly EmojiInfo Emoji_wavy_dash = new EmojiInfo("wavy_dash", "3030.png", "wavy dash", "〰", true, true, true, true);

		/// <summary>
		/// :part_alternation_mark: 〽 part alternation mark
		/// </summary>
		public static readonly EmojiInfo Emoji_part_alternation_mark = new EmojiInfo("part_alternation_mark", "303d.png", "part alternation mark", "〽", true, true, true, true);

		/// <summary>
		/// :congratulations: ㊗ circled ideograph congratulation
		/// </summary>
		public static readonly EmojiInfo Emoji_congratulations = new EmojiInfo("congratulations", "3297.png", "circled ideograph congratulation", "㊗", true, true, true, true);

		/// <summary>
		/// :secret: ㊙ circled ideograph secret
		/// </summary>
		public static readonly EmojiInfo Emoji_secret = new EmojiInfo("secret", "3299.png", "circled ideograph secret", "㊙", true, true, true, true);

		/// <summary>
		/// :mahjong: 🀄 mahjong tile red dragon
		/// </summary>
		public static readonly EmojiInfo Emoji_mahjong = new EmojiInfo("mahjong", "1f004.png", "mahjong tile red dragon", "🀄", true, true, true, true);

		/// <summary>
		/// :black_joker: 🃏 playing card black joker
		/// </summary>
		public static readonly EmojiInfo Emoji_black_joker = new EmojiInfo("black_joker", "1f0cf.png", "playing card black joker", "🃏", true, true, true, true);

		/// <summary>
		/// :a: 🅰 negative squared latin capital letter a
		/// </summary>
		public static readonly EmojiInfo Emoji_a = new EmojiInfo("a", "1f170.png", "negative squared latin capital letter a", "🅰", true, true, true, true);

		/// <summary>
		/// :b: 🅱 negative squared latin capital letter b
		/// </summary>
		public static readonly EmojiInfo Emoji_b = new EmojiInfo("b", "1f171.png", "negative squared latin capital letter b", "🅱", true, true, true, true);

		/// <summary>
		/// :o2: 🅾 negative squared latin capital letter o
		/// </summary>
		public static readonly EmojiInfo Emoji_o2 = new EmojiInfo("o2", "1f17e.png", "negative squared latin capital letter o", "🅾", true, true, true, true);

		/// <summary>
		/// :parking: 🅿 negative squared latin capital letter p
		/// </summary>
		public static readonly EmojiInfo Emoji_parking = new EmojiInfo("parking", "1f17f.png", "negative squared latin capital letter p", "🅿", true, true, true, true);

		/// <summary>
		/// :ab: 🆎 negative squared ab
		/// </summary>
		public static readonly EmojiInfo Emoji_ab = new EmojiInfo("ab", "1f18e.png", "negative squared ab", "🆎", true, true, true, true);

		/// <summary>
		/// :cl: 🆑 squared cl
		/// </summary>
		public static readonly EmojiInfo Emoji_cl = new EmojiInfo("cl", "1f191.png", "squared cl", "🆑", true, true, true, true);

		/// <summary>
		/// :cool: 🆒 squared cool
		/// </summary>
		public static readonly EmojiInfo Emoji_cool = new EmojiInfo("cool", "1f192.png", "squared cool", "🆒", true, true, true, true);

		/// <summary>
		/// :free: 🆓 squared free
		/// </summary>
		public static readonly EmojiInfo Emoji_free = new EmojiInfo("free", "1f193.png", "squared free", "🆓", true, true, true, true);

		/// <summary>
		/// :id: 🆔 squared id
		/// </summary>
		public static readonly EmojiInfo Emoji_id = new EmojiInfo("id", "1f194.png", "squared id", "🆔", true, true, true, true);

		/// <summary>
		/// :new: 🆕 squared new
		/// </summary>
		public static readonly EmojiInfo Emoji_new = new EmojiInfo("new", "1f195.png", "squared new", "🆕", true, true, true, true);

		/// <summary>
		/// :ng: 🆖 squared ng
		/// </summary>
		public static readonly EmojiInfo Emoji_ng = new EmojiInfo("ng", "1f196.png", "squared ng", "🆖", true, true, true, true);

		/// <summary>
		/// :ok: 🆗 squared ok
		/// </summary>
		public static readonly EmojiInfo Emoji_ok = new EmojiInfo("ok", "1f197.png", "squared ok", "🆗", true, true, true, true);

		/// <summary>
		/// :sos: 🆘 squared sos
		/// </summary>
		public static readonly EmojiInfo Emoji_sos = new EmojiInfo("sos", "1f198.png", "squared sos", "🆘", true, true, true, true);

		/// <summary>
		/// :up: 🆙 squared up with exclamation mark
		/// </summary>
		public static readonly EmojiInfo Emoji_up = new EmojiInfo("up", "1f199.png", "squared up with exclamation mark", "🆙", true, true, true, true);

		/// <summary>
		/// :vs: 🆚 squared vs
		/// </summary>
		public static readonly EmojiInfo Emoji_vs = new EmojiInfo("vs", "1f19a.png", "squared vs", "🆚", true, true, true, true);

		/// <summary>
		/// :koko: 🈁 squared katakana koko
		/// </summary>
		public static readonly EmojiInfo Emoji_koko = new EmojiInfo("koko", "1f201.png", "squared katakana koko", "🈁", true, true, true, true);

		/// <summary>
		/// :sa: 🈂 squared katakana sa
		/// </summary>
		public static readonly EmojiInfo Emoji_sa = new EmojiInfo("sa", "1f202.png", "squared katakana sa", "🈂", true, true, true, true);

		/// <summary>
		/// :u7121: 🈚 squared cjk unified ideograph-7121
		/// </summary>
		public static readonly EmojiInfo Emoji_u7121 = new EmojiInfo("u7121", "1f21a.png", "squared cjk unified ideograph-7121", "🈚", true, true, true, true);

		/// <summary>
		/// :u6307: 🈯 squared cjk unified ideograph-6307
		/// </summary>
		public static readonly EmojiInfo Emoji_u6307 = new EmojiInfo("u6307", "1f22f.png", "squared cjk unified ideograph-6307", "🈯", true, true, true, true);

		/// <summary>
		/// :u7981: 🈲 squared cjk unified ideograph-7981
		/// </summary>
		public static readonly EmojiInfo Emoji_u7981 = new EmojiInfo("u7981", "1f232.png", "squared cjk unified ideograph-7981", "🈲", true, true, true, true);

		/// <summary>
		/// :u7a7a: 🈳 squared cjk unified ideograph-7a7a
		/// </summary>
		public static readonly EmojiInfo Emoji_u7a7a = new EmojiInfo("u7a7a", "1f233.png", "squared cjk unified ideograph-7a7a", "🈳", true, true, true, true);

		/// <summary>
		/// :u5408: 🈴 squared cjk unified ideograph-5408
		/// </summary>
		public static readonly EmojiInfo Emoji_u5408 = new EmojiInfo("u5408", "1f234.png", "squared cjk unified ideograph-5408", "🈴", true, true, true, true);

		/// <summary>
		/// :u6e80: 🈵 squared cjk unified ideograph-6e80
		/// </summary>
		public static readonly EmojiInfo Emoji_u6e80 = new EmojiInfo("u6e80", "1f235.png", "squared cjk unified ideograph-6e80", "🈵", true, true, true, true);

		/// <summary>
		/// :u6709: 🈶 squared cjk unified ideograph-6709
		/// </summary>
		public static readonly EmojiInfo Emoji_u6709 = new EmojiInfo("u6709", "1f236.png", "squared cjk unified ideograph-6709", "🈶", true, true, true, true);

		/// <summary>
		/// :u6708: 🈷 squared cjk unified ideograph-6708
		/// </summary>
		public static readonly EmojiInfo Emoji_u6708 = new EmojiInfo("u6708", "1f237.png", "squared cjk unified ideograph-6708", "🈷", true, true, true, true);

		/// <summary>
		/// :u7533: 🈸 squared cjk unified ideograph-7533
		/// </summary>
		public static readonly EmojiInfo Emoji_u7533 = new EmojiInfo("u7533", "1f238.png", "squared cjk unified ideograph-7533", "🈸", true, true, true, true);

		/// <summary>
		/// :u5272: 🈹 squared cjk unified ideograph-5272
		/// </summary>
		public static readonly EmojiInfo Emoji_u5272 = new EmojiInfo("u5272", "1f239.png", "squared cjk unified ideograph-5272", "🈹", true, true, true, true);

		/// <summary>
		/// :u55b6: 🈺 squared cjk unified ideograph-55b6
		/// </summary>
		public static readonly EmojiInfo Emoji_u55b6 = new EmojiInfo("u55b6", "1f23a.png", "squared cjk unified ideograph-55b6", "🈺", true, true, true, true);

		/// <summary>
		/// :ideograph_advantage: 🉐 circled ideograph advantage
		/// </summary>
		public static readonly EmojiInfo Emoji_ideograph_advantage = new EmojiInfo("ideograph_advantage", "1f250.png", "circled ideograph advantage", "🉐", true, true, true, true);

		/// <summary>
		/// :accept: 🉑 circled ideograph accept
		/// </summary>
		public static readonly EmojiInfo Emoji_accept = new EmojiInfo("accept", "1f251.png", "circled ideograph accept", "🉑", true, true, true, true);

		/// <summary>
		/// :cyclone: 🌀 cyclone
		/// </summary>
		public static readonly EmojiInfo Emoji_cyclone = new EmojiInfo("cyclone", "1f300.png", "cyclone", "🌀", true, true, true, true);

		/// <summary>
		/// :foggy: 🌁 foggy
		/// </summary>
		public static readonly EmojiInfo Emoji_foggy = new EmojiInfo("foggy", "1f301.png", "foggy", "🌁", true, true, true, true);

		/// <summary>
		/// :closed_umbrella: 🌂 closed umbrella
		/// </summary>
		public static readonly EmojiInfo Emoji_closed_umbrella = new EmojiInfo("closed_umbrella", "1f302.png", "closed umbrella", "🌂", true, true, true, true);

		/// <summary>
		/// :night_with_stars: 🌃 night with stars
		/// </summary>
		public static readonly EmojiInfo Emoji_night_with_stars = new EmojiInfo("night_with_stars", "1f303.png", "night with stars", "🌃", true, true, true, true);

		/// <summary>
		/// :sunrise_over_mountains: 🌄 sunrise over mountains
		/// </summary>
		public static readonly EmojiInfo Emoji_sunrise_over_mountains = new EmojiInfo("sunrise_over_mountains", "1f304.png", "sunrise over mountains", "🌄", true, true, true, true);

		/// <summary>
		/// :sunrise: 🌅 sunrise
		/// </summary>
		public static readonly EmojiInfo Emoji_sunrise = new EmojiInfo("sunrise", "1f305.png", "sunrise", "🌅", true, true, true, true);

		/// <summary>
		/// :city_sunset: 🌆 cityscape at dusk
		/// </summary>
		public static readonly EmojiInfo Emoji_city_sunset = new EmojiInfo("city_sunset", "1f306.png", "cityscape at dusk", "🌆", true, true, true, true);

		/// <summary>
		/// :city_sunrise: 🌇 sunset over buildings
		/// </summary>
		public static readonly EmojiInfo Emoji_city_sunrise = new EmojiInfo("city_sunrise", "1f307.png", "sunset over buildings", "🌇", true, true, true, true);

		/// <summary>
		/// :rainbow: 🌈 rainbow
		/// </summary>
		public static readonly EmojiInfo Emoji_rainbow = new EmojiInfo("rainbow", "1f308.png", "rainbow", "🌈", true, true, true, true);

		/// <summary>
		/// :bridge_at_night: 🌉 bridge at night
		/// </summary>
		public static readonly EmojiInfo Emoji_bridge_at_night = new EmojiInfo("bridge_at_night", "1f309.png", "bridge at night", "🌉", true, true, true, true);

		/// <summary>
		/// :ocean: 🌊 water wave
		/// </summary>
		public static readonly EmojiInfo Emoji_ocean = new EmojiInfo("ocean", "1f30a.png", "water wave", "🌊", true, true, true, true);

		/// <summary>
		/// :volcano: 🌋 volcano
		/// </summary>
		public static readonly EmojiInfo Emoji_volcano = new EmojiInfo("volcano", "1f30b.png", "volcano", "🌋", true, true, true, true);

		/// <summary>
		/// :milky_way: 🌌 milky way
		/// </summary>
		public static readonly EmojiInfo Emoji_milky_way = new EmojiInfo("milky_way", "1f30c.png", "milky way", "🌌", true, true, true, true);

		/// <summary>
		/// :earth_africa: 🌍 earth globe europe-africa
		/// </summary>
		public static readonly EmojiInfo Emoji_earth_africa = new EmojiInfo("earth_africa", "1f30d.png", "earth globe europe-africa", "🌍", true, true, true, true);

		/// <summary>
		/// :earth_americas: 🌎 earth globe americas
		/// </summary>
		public static readonly EmojiInfo Emoji_earth_americas = new EmojiInfo("earth_americas", "1f30e.png", "earth globe americas", "🌎", true, true, true, true);

		/// <summary>
		/// :earth_asia: 🌏 earth globe asia-australia
		/// </summary>
		public static readonly EmojiInfo Emoji_earth_asia = new EmojiInfo("earth_asia", "1f30f.png", "earth globe asia-australia", "🌏", true, true, true, true);

		/// <summary>
		/// :globe_with_meridians: 🌐 globe with meridians
		/// </summary>
		public static readonly EmojiInfo Emoji_globe_with_meridians = new EmojiInfo("globe_with_meridians", "1f310.png", "globe with meridians", "🌐", true, true, true, true);

		/// <summary>
		/// :new_moon: 🌑 new moon symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_new_moon = new EmojiInfo("new_moon", "1f311.png", "new moon symbol", "🌑", true, true, true, true);

		/// <summary>
		/// :waxing_crescent_moon: 🌒 waxing crescent moon symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_waxing_crescent_moon = new EmojiInfo("waxing_crescent_moon", "1f312.png", "waxing crescent moon symbol", "🌒", true, true, true, true);

		/// <summary>
		/// :first_quarter_moon: 🌓 first quarter moon symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_first_quarter_moon = new EmojiInfo("first_quarter_moon", "1f313.png", "first quarter moon symbol", "🌓", true, true, true, true);

		/// <summary>
		/// :moon: 🌔 waxing gibbous moon symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_moon = new EmojiInfo("moon", "1f314.png", "waxing gibbous moon symbol", "🌔", true, true, true, true);

		/// <summary>
		/// :full_moon: 🌕 full moon symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_full_moon = new EmojiInfo("full_moon", "1f315.png", "full moon symbol", "🌕", true, true, true, true);

		/// <summary>
		/// :waning_gibbous_moon: 🌖 waning gibbous moon symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_waning_gibbous_moon = new EmojiInfo("waning_gibbous_moon", "1f316.png", "waning gibbous moon symbol", "🌖", true, true, true, true);

		/// <summary>
		/// :last_quarter_moon: 🌗 last quarter moon symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_last_quarter_moon = new EmojiInfo("last_quarter_moon", "1f317.png", "last quarter moon symbol", "🌗", true, true, true, true);

		/// <summary>
		/// :waning_crescent_moon: 🌘 waning crescent moon symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_waning_crescent_moon = new EmojiInfo("waning_crescent_moon", "1f318.png", "waning crescent moon symbol", "🌘", true, true, true, true);

		/// <summary>
		/// :crescent_moon: 🌙 crescent moon
		/// </summary>
		public static readonly EmojiInfo Emoji_crescent_moon = new EmojiInfo("crescent_moon", "1f319.png", "crescent moon", "🌙", true, true, true, true);

		/// <summary>
		/// :new_moon_with_face: 🌚 new moon with face
		/// </summary>
		public static readonly EmojiInfo Emoji_new_moon_with_face = new EmojiInfo("new_moon_with_face", "1f31a.png", "new moon with face", "🌚", true, true, true, true);

		/// <summary>
		/// :first_quarter_moon_with_face: 🌛 first quarter moon with face
		/// </summary>
		public static readonly EmojiInfo Emoji_first_quarter_moon_with_face = new EmojiInfo("first_quarter_moon_with_face", "1f31b.png", "first quarter moon with face", "🌛", true, true, true, true);

		/// <summary>
		/// :last_quarter_moon_with_face: 🌜 last quarter moon with face
		/// </summary>
		public static readonly EmojiInfo Emoji_last_quarter_moon_with_face = new EmojiInfo("last_quarter_moon_with_face", "1f31c.png", "last quarter moon with face", "🌜", true, true, true, true);

		/// <summary>
		/// :full_moon_with_face: 🌝 full moon with face
		/// </summary>
		public static readonly EmojiInfo Emoji_full_moon_with_face = new EmojiInfo("full_moon_with_face", "1f31d.png", "full moon with face", "🌝", true, true, true, true);

		/// <summary>
		/// :sun_with_face: 🌞 sun with face
		/// </summary>
		public static readonly EmojiInfo Emoji_sun_with_face = new EmojiInfo("sun_with_face", "1f31e.png", "sun with face", "🌞", true, true, true, true);

		/// <summary>
		/// :star2: 🌟 glowing star
		/// </summary>
		public static readonly EmojiInfo Emoji_star2 = new EmojiInfo("star2", "1f31f.png", "glowing star", "🌟", true, true, true, true);

		/// <summary>
		/// :stars: 🌠 shooting star
		/// </summary>
		public static readonly EmojiInfo Emoji_stars = new EmojiInfo("stars", "1f320.png", "shooting star", "🌠", true, true, true, true);

		/// <summary>
		/// :thermometer: 🌡 thermometer
		/// </summary>
		public static readonly EmojiInfo Emoji_thermometer = new EmojiInfo("thermometer", "1f321.png", "thermometer", "🌡", true, true, true, true);

		/// <summary>
		/// :mostly_sunny: 🌤 white sun with small cloud
		/// </summary>
		public static readonly EmojiInfo Emoji_mostly_sunny = new EmojiInfo("mostly_sunny", "1f324.png", "white sun with small cloud", "🌤", true, true, true, false);

		/// <summary>
		/// :barely_sunny: 🌥 white sun behind cloud
		/// </summary>
		public static readonly EmojiInfo Emoji_barely_sunny = new EmojiInfo("barely_sunny", "1f325.png", "white sun behind cloud", "🌥", true, true, true, false);

		/// <summary>
		/// :partly_sunny_rain: 🌦 white sun behind cloud with rain
		/// </summary>
		public static readonly EmojiInfo Emoji_partly_sunny_rain = new EmojiInfo("partly_sunny_rain", "1f326.png", "white sun behind cloud with rain", "🌦", true, true, true, false);

		/// <summary>
		/// :rain_cloud: 🌧 cloud with rain
		/// </summary>
		public static readonly EmojiInfo Emoji_rain_cloud = new EmojiInfo("rain_cloud", "1f327.png", "cloud with rain", "🌧", true, true, true, true);

		/// <summary>
		/// :snow_cloud: 🌨 cloud with snow
		/// </summary>
		public static readonly EmojiInfo Emoji_snow_cloud = new EmojiInfo("snow_cloud", "1f328.png", "cloud with snow", "🌨", true, true, true, true);

		/// <summary>
		/// :lightning: 🌩 cloud with lightning
		/// </summary>
		public static readonly EmojiInfo Emoji_lightning = new EmojiInfo("lightning", "1f329.png", "cloud with lightning", "🌩", true, true, true, true);

		/// <summary>
		/// :tornado: 🌪 cloud with tornado
		/// </summary>
		public static readonly EmojiInfo Emoji_tornado = new EmojiInfo("tornado", "1f32a.png", "cloud with tornado", "🌪", true, true, true, true);

		/// <summary>
		/// :fog: 🌫 fog
		/// </summary>
		public static readonly EmojiInfo Emoji_fog = new EmojiInfo("fog", "1f32b.png", "fog", "🌫", true, true, true, true);

		/// <summary>
		/// :wind_blowing_face: 🌬 wind blowing face
		/// </summary>
		public static readonly EmojiInfo Emoji_wind_blowing_face = new EmojiInfo("wind_blowing_face", "1f32c.png", "wind blowing face", "🌬", true, true, true, true);

		/// <summary>
		/// :hotdog: 🌭 hot dog
		/// </summary>
		public static readonly EmojiInfo Emoji_hotdog = new EmojiInfo("hotdog", "1f32d.png", "hot dog", "🌭", true, true, true, false);

		/// <summary>
		/// :taco: 🌮 taco
		/// </summary>
		public static readonly EmojiInfo Emoji_taco = new EmojiInfo("taco", "1f32e.png", "taco", "🌮", true, true, true, false);

		/// <summary>
		/// :burrito: 🌯 burrito
		/// </summary>
		public static readonly EmojiInfo Emoji_burrito = new EmojiInfo("burrito", "1f32f.png", "burrito", "🌯", true, true, true, false);

		/// <summary>
		/// :chestnut: 🌰 chestnut
		/// </summary>
		public static readonly EmojiInfo Emoji_chestnut = new EmojiInfo("chestnut", "1f330.png", "chestnut", "🌰", true, true, true, true);

		/// <summary>
		/// :seedling: 🌱 seedling
		/// </summary>
		public static readonly EmojiInfo Emoji_seedling = new EmojiInfo("seedling", "1f331.png", "seedling", "🌱", true, true, true, true);

		/// <summary>
		/// :evergreen_tree: 🌲 evergreen tree
		/// </summary>
		public static readonly EmojiInfo Emoji_evergreen_tree = new EmojiInfo("evergreen_tree", "1f332.png", "evergreen tree", "🌲", true, true, true, true);

		/// <summary>
		/// :deciduous_tree: 🌳 deciduous tree
		/// </summary>
		public static readonly EmojiInfo Emoji_deciduous_tree = new EmojiInfo("deciduous_tree", "1f333.png", "deciduous tree", "🌳", true, true, true, true);

		/// <summary>
		/// :palm_tree: 🌴 palm tree
		/// </summary>
		public static readonly EmojiInfo Emoji_palm_tree = new EmojiInfo("palm_tree", "1f334.png", "palm tree", "🌴", true, true, true, true);

		/// <summary>
		/// :cactus: 🌵 cactus
		/// </summary>
		public static readonly EmojiInfo Emoji_cactus = new EmojiInfo("cactus", "1f335.png", "cactus", "🌵", true, true, true, true);

		/// <summary>
		/// :hot_pepper: 🌶 hot pepper
		/// </summary>
		public static readonly EmojiInfo Emoji_hot_pepper = new EmojiInfo("hot_pepper", "1f336.png", "hot pepper", "🌶", true, true, true, true);

		/// <summary>
		/// :tulip: 🌷 tulip
		/// </summary>
		public static readonly EmojiInfo Emoji_tulip = new EmojiInfo("tulip", "1f337.png", "tulip", "🌷", true, true, true, true);

		/// <summary>
		/// :cherry_blossom: 🌸 cherry blossom
		/// </summary>
		public static readonly EmojiInfo Emoji_cherry_blossom = new EmojiInfo("cherry_blossom", "1f338.png", "cherry blossom", "🌸", true, true, true, true);

		/// <summary>
		/// :rose: 🌹 rose
		/// </summary>
		public static readonly EmojiInfo Emoji_rose = new EmojiInfo("rose", "1f339.png", "rose", "🌹", true, true, true, true);

		/// <summary>
		/// :hibiscus: 🌺 hibiscus
		/// </summary>
		public static readonly EmojiInfo Emoji_hibiscus = new EmojiInfo("hibiscus", "1f33a.png", "hibiscus", "🌺", true, true, true, true);

		/// <summary>
		/// :sunflower: 🌻 sunflower
		/// </summary>
		public static readonly EmojiInfo Emoji_sunflower = new EmojiInfo("sunflower", "1f33b.png", "sunflower", "🌻", true, true, true, true);

		/// <summary>
		/// :blossom: 🌼 blossom
		/// </summary>
		public static readonly EmojiInfo Emoji_blossom = new EmojiInfo("blossom", "1f33c.png", "blossom", "🌼", true, true, true, true);

		/// <summary>
		/// :corn: 🌽 ear of maize
		/// </summary>
		public static readonly EmojiInfo Emoji_corn = new EmojiInfo("corn", "1f33d.png", "ear of maize", "🌽", true, true, true, true);

		/// <summary>
		/// :ear_of_rice: 🌾 ear of rice
		/// </summary>
		public static readonly EmojiInfo Emoji_ear_of_rice = new EmojiInfo("ear_of_rice", "1f33e.png", "ear of rice", "🌾", true, true, true, true);

		/// <summary>
		/// :herb: 🌿 herb
		/// </summary>
		public static readonly EmojiInfo Emoji_herb = new EmojiInfo("herb", "1f33f.png", "herb", "🌿", true, true, true, true);

		/// <summary>
		/// :four_leaf_clover: 🍀 four leaf clover
		/// </summary>
		public static readonly EmojiInfo Emoji_four_leaf_clover = new EmojiInfo("four_leaf_clover", "1f340.png", "four leaf clover", "🍀", true, true, true, true);

		/// <summary>
		/// :maple_leaf: 🍁 maple leaf
		/// </summary>
		public static readonly EmojiInfo Emoji_maple_leaf = new EmojiInfo("maple_leaf", "1f341.png", "maple leaf", "🍁", true, true, true, true);

		/// <summary>
		/// :fallen_leaf: 🍂 fallen leaf
		/// </summary>
		public static readonly EmojiInfo Emoji_fallen_leaf = new EmojiInfo("fallen_leaf", "1f342.png", "fallen leaf", "🍂", true, true, true, true);

		/// <summary>
		/// :leaves: 🍃 leaf fluttering in wind
		/// </summary>
		public static readonly EmojiInfo Emoji_leaves = new EmojiInfo("leaves", "1f343.png", "leaf fluttering in wind", "🍃", true, true, true, true);

		/// <summary>
		/// :mushroom: 🍄 mushroom
		/// </summary>
		public static readonly EmojiInfo Emoji_mushroom = new EmojiInfo("mushroom", "1f344.png", "mushroom", "🍄", true, true, true, true);

		/// <summary>
		/// :tomato: 🍅 tomato
		/// </summary>
		public static readonly EmojiInfo Emoji_tomato = new EmojiInfo("tomato", "1f345.png", "tomato", "🍅", true, true, true, true);

		/// <summary>
		/// :eggplant: 🍆 aubergine
		/// </summary>
		public static readonly EmojiInfo Emoji_eggplant = new EmojiInfo("eggplant", "1f346.png", "aubergine", "🍆", true, true, true, true);

		/// <summary>
		/// :grapes: 🍇 grapes
		/// </summary>
		public static readonly EmojiInfo Emoji_grapes = new EmojiInfo("grapes", "1f347.png", "grapes", "🍇", true, true, true, true);

		/// <summary>
		/// :melon: 🍈 melon
		/// </summary>
		public static readonly EmojiInfo Emoji_melon = new EmojiInfo("melon", "1f348.png", "melon", "🍈", true, true, true, true);

		/// <summary>
		/// :watermelon: 🍉 watermelon
		/// </summary>
		public static readonly EmojiInfo Emoji_watermelon = new EmojiInfo("watermelon", "1f349.png", "watermelon", "🍉", true, true, true, true);

		/// <summary>
		/// :tangerine: 🍊 tangerine
		/// </summary>
		public static readonly EmojiInfo Emoji_tangerine = new EmojiInfo("tangerine", "1f34a.png", "tangerine", "🍊", true, true, true, true);

		/// <summary>
		/// :lemon: 🍋 lemon
		/// </summary>
		public static readonly EmojiInfo Emoji_lemon = new EmojiInfo("lemon", "1f34b.png", "lemon", "🍋", true, true, true, true);

		/// <summary>
		/// :banana: 🍌 banana
		/// </summary>
		public static readonly EmojiInfo Emoji_banana = new EmojiInfo("banana", "1f34c.png", "banana", "🍌", true, true, true, true);

		/// <summary>
		/// :pineapple: 🍍 pineapple
		/// </summary>
		public static readonly EmojiInfo Emoji_pineapple = new EmojiInfo("pineapple", "1f34d.png", "pineapple", "🍍", true, true, true, true);

		/// <summary>
		/// :apple: 🍎 red apple
		/// </summary>
		public static readonly EmojiInfo Emoji_apple = new EmojiInfo("apple", "1f34e.png", "red apple", "🍎", true, true, true, true);

		/// <summary>
		/// :green_apple: 🍏 green apple
		/// </summary>
		public static readonly EmojiInfo Emoji_green_apple = new EmojiInfo("green_apple", "1f34f.png", "green apple", "🍏", true, true, true, true);

		/// <summary>
		/// :pear: 🍐 pear
		/// </summary>
		public static readonly EmojiInfo Emoji_pear = new EmojiInfo("pear", "1f350.png", "pear", "🍐", true, true, true, true);

		/// <summary>
		/// :peach: 🍑 peach
		/// </summary>
		public static readonly EmojiInfo Emoji_peach = new EmojiInfo("peach", "1f351.png", "peach", "🍑", true, true, true, true);

		/// <summary>
		/// :cherries: 🍒 cherries
		/// </summary>
		public static readonly EmojiInfo Emoji_cherries = new EmojiInfo("cherries", "1f352.png", "cherries", "🍒", true, true, true, true);

		/// <summary>
		/// :strawberry: 🍓 strawberry
		/// </summary>
		public static readonly EmojiInfo Emoji_strawberry = new EmojiInfo("strawberry", "1f353.png", "strawberry", "🍓", true, true, true, true);

		/// <summary>
		/// :hamburger: 🍔 hamburger
		/// </summary>
		public static readonly EmojiInfo Emoji_hamburger = new EmojiInfo("hamburger", "1f354.png", "hamburger", "🍔", true, true, true, true);

		/// <summary>
		/// :pizza: 🍕 slice of pizza
		/// </summary>
		public static readonly EmojiInfo Emoji_pizza = new EmojiInfo("pizza", "1f355.png", "slice of pizza", "🍕", true, true, true, true);

		/// <summary>
		/// :meat_on_bone: 🍖 meat on bone
		/// </summary>
		public static readonly EmojiInfo Emoji_meat_on_bone = new EmojiInfo("meat_on_bone", "1f356.png", "meat on bone", "🍖", true, true, true, true);

		/// <summary>
		/// :poultry_leg: 🍗 poultry leg
		/// </summary>
		public static readonly EmojiInfo Emoji_poultry_leg = new EmojiInfo("poultry_leg", "1f357.png", "poultry leg", "🍗", true, true, true, true);

		/// <summary>
		/// :rice_cracker: 🍘 rice cracker
		/// </summary>
		public static readonly EmojiInfo Emoji_rice_cracker = new EmojiInfo("rice_cracker", "1f358.png", "rice cracker", "🍘", true, true, true, true);

		/// <summary>
		/// :rice_ball: 🍙 rice ball
		/// </summary>
		public static readonly EmojiInfo Emoji_rice_ball = new EmojiInfo("rice_ball", "1f359.png", "rice ball", "🍙", true, true, true, true);

		/// <summary>
		/// :rice: 🍚 cooked rice
		/// </summary>
		public static readonly EmojiInfo Emoji_rice = new EmojiInfo("rice", "1f35a.png", "cooked rice", "🍚", true, true, true, true);

		/// <summary>
		/// :curry: 🍛 curry and rice
		/// </summary>
		public static readonly EmojiInfo Emoji_curry = new EmojiInfo("curry", "1f35b.png", "curry and rice", "🍛", true, true, true, true);

		/// <summary>
		/// :ramen: 🍜 steaming bowl
		/// </summary>
		public static readonly EmojiInfo Emoji_ramen = new EmojiInfo("ramen", "1f35c.png", "steaming bowl", "🍜", true, true, true, true);

		/// <summary>
		/// :spaghetti: 🍝 spaghetti
		/// </summary>
		public static readonly EmojiInfo Emoji_spaghetti = new EmojiInfo("spaghetti", "1f35d.png", "spaghetti", "🍝", true, true, true, true);

		/// <summary>
		/// :bread: 🍞 bread
		/// </summary>
		public static readonly EmojiInfo Emoji_bread = new EmojiInfo("bread", "1f35e.png", "bread", "🍞", true, true, true, true);

		/// <summary>
		/// :fries: 🍟 french fries
		/// </summary>
		public static readonly EmojiInfo Emoji_fries = new EmojiInfo("fries", "1f35f.png", "french fries", "🍟", true, true, true, true);

		/// <summary>
		/// :sweet_potato: 🍠 roasted sweet potato
		/// </summary>
		public static readonly EmojiInfo Emoji_sweet_potato = new EmojiInfo("sweet_potato", "1f360.png", "roasted sweet potato", "🍠", true, true, true, true);

		/// <summary>
		/// :dango: 🍡 dango
		/// </summary>
		public static readonly EmojiInfo Emoji_dango = new EmojiInfo("dango", "1f361.png", "dango", "🍡", true, true, true, true);

		/// <summary>
		/// :oden: 🍢 oden
		/// </summary>
		public static readonly EmojiInfo Emoji_oden = new EmojiInfo("oden", "1f362.png", "oden", "🍢", true, true, true, true);

		/// <summary>
		/// :sushi: 🍣 sushi
		/// </summary>
		public static readonly EmojiInfo Emoji_sushi = new EmojiInfo("sushi", "1f363.png", "sushi", "🍣", true, true, true, true);

		/// <summary>
		/// :fried_shrimp: 🍤 fried shrimp
		/// </summary>
		public static readonly EmojiInfo Emoji_fried_shrimp = new EmojiInfo("fried_shrimp", "1f364.png", "fried shrimp", "🍤", true, true, true, true);

		/// <summary>
		/// :fish_cake: 🍥 fish cake with swirl design
		/// </summary>
		public static readonly EmojiInfo Emoji_fish_cake = new EmojiInfo("fish_cake", "1f365.png", "fish cake with swirl design", "🍥", true, true, true, true);

		/// <summary>
		/// :icecream: 🍦 soft ice cream
		/// </summary>
		public static readonly EmojiInfo Emoji_icecream = new EmojiInfo("icecream", "1f366.png", "soft ice cream", "🍦", true, true, true, true);

		/// <summary>
		/// :shaved_ice: 🍧 shaved ice
		/// </summary>
		public static readonly EmojiInfo Emoji_shaved_ice = new EmojiInfo("shaved_ice", "1f367.png", "shaved ice", "🍧", true, true, true, true);

		/// <summary>
		/// :ice_cream: 🍨 ice cream
		/// </summary>
		public static readonly EmojiInfo Emoji_ice_cream = new EmojiInfo("ice_cream", "1f368.png", "ice cream", "🍨", true, true, true, true);

		/// <summary>
		/// :doughnut: 🍩 doughnut
		/// </summary>
		public static readonly EmojiInfo Emoji_doughnut = new EmojiInfo("doughnut", "1f369.png", "doughnut", "🍩", true, true, true, true);

		/// <summary>
		/// :cookie: 🍪 cookie
		/// </summary>
		public static readonly EmojiInfo Emoji_cookie = new EmojiInfo("cookie", "1f36a.png", "cookie", "🍪", true, true, true, true);

		/// <summary>
		/// :chocolate_bar: 🍫 chocolate bar
		/// </summary>
		public static readonly EmojiInfo Emoji_chocolate_bar = new EmojiInfo("chocolate_bar", "1f36b.png", "chocolate bar", "🍫", true, true, true, true);

		/// <summary>
		/// :candy: 🍬 candy
		/// </summary>
		public static readonly EmojiInfo Emoji_candy = new EmojiInfo("candy", "1f36c.png", "candy", "🍬", true, true, true, true);

		/// <summary>
		/// :lollipop: 🍭 lollipop
		/// </summary>
		public static readonly EmojiInfo Emoji_lollipop = new EmojiInfo("lollipop", "1f36d.png", "lollipop", "🍭", true, true, true, true);

		/// <summary>
		/// :custard: 🍮 custard
		/// </summary>
		public static readonly EmojiInfo Emoji_custard = new EmojiInfo("custard", "1f36e.png", "custard", "🍮", true, true, true, true);

		/// <summary>
		/// :honey_pot: 🍯 honey pot
		/// </summary>
		public static readonly EmojiInfo Emoji_honey_pot = new EmojiInfo("honey_pot", "1f36f.png", "honey pot", "🍯", true, true, true, true);

		/// <summary>
		/// :cake: 🍰 shortcake
		/// </summary>
		public static readonly EmojiInfo Emoji_cake = new EmojiInfo("cake", "1f370.png", "shortcake", "🍰", true, true, true, true);

		/// <summary>
		/// :bento: 🍱 bento box
		/// </summary>
		public static readonly EmojiInfo Emoji_bento = new EmojiInfo("bento", "1f371.png", "bento box", "🍱", true, true, true, true);

		/// <summary>
		/// :stew: 🍲 pot of food
		/// </summary>
		public static readonly EmojiInfo Emoji_stew = new EmojiInfo("stew", "1f372.png", "pot of food", "🍲", true, true, true, true);

		/// <summary>
		/// :egg: 🍳 cooking
		/// </summary>
		public static readonly EmojiInfo Emoji_egg = new EmojiInfo("egg", "1f373.png", "cooking", "🍳", true, true, true, true);

		/// <summary>
		/// :fork_and_knife: 🍴 fork and knife
		/// </summary>
		public static readonly EmojiInfo Emoji_fork_and_knife = new EmojiInfo("fork_and_knife", "1f374.png", "fork and knife", "🍴", true, true, true, true);

		/// <summary>
		/// :tea: 🍵 teacup without handle
		/// </summary>
		public static readonly EmojiInfo Emoji_tea = new EmojiInfo("tea", "1f375.png", "teacup without handle", "🍵", true, true, true, true);

		/// <summary>
		/// :sake: 🍶 sake bottle and cup
		/// </summary>
		public static readonly EmojiInfo Emoji_sake = new EmojiInfo("sake", "1f376.png", "sake bottle and cup", "🍶", true, true, true, true);

		/// <summary>
		/// :wine_glass: 🍷 wine glass
		/// </summary>
		public static readonly EmojiInfo Emoji_wine_glass = new EmojiInfo("wine_glass", "1f377.png", "wine glass", "🍷", true, true, true, true);

		/// <summary>
		/// :cocktail: 🍸 cocktail glass
		/// </summary>
		public static readonly EmojiInfo Emoji_cocktail = new EmojiInfo("cocktail", "1f378.png", "cocktail glass", "🍸", true, true, true, true);

		/// <summary>
		/// :tropical_drink: 🍹 tropical drink
		/// </summary>
		public static readonly EmojiInfo Emoji_tropical_drink = new EmojiInfo("tropical_drink", "1f379.png", "tropical drink", "🍹", true, true, true, true);

		/// <summary>
		/// :beer: 🍺 beer mug
		/// </summary>
		public static readonly EmojiInfo Emoji_beer = new EmojiInfo("beer", "1f37a.png", "beer mug", "🍺", true, true, true, true);

		/// <summary>
		/// :beers: 🍻 clinking beer mugs
		/// </summary>
		public static readonly EmojiInfo Emoji_beers = new EmojiInfo("beers", "1f37b.png", "clinking beer mugs", "🍻", true, true, true, true);

		/// <summary>
		/// :baby_bottle: 🍼 baby bottle
		/// </summary>
		public static readonly EmojiInfo Emoji_baby_bottle = new EmojiInfo("baby_bottle", "1f37c.png", "baby bottle", "🍼", true, true, true, true);

		/// <summary>
		/// :knife_fork_plate: 🍽 fork and knife with plate
		/// </summary>
		public static readonly EmojiInfo Emoji_knife_fork_plate = new EmojiInfo("knife_fork_plate", "1f37d.png", "fork and knife with plate", "🍽", true, true, true, true);

		/// <summary>
		/// :champagne: 🍾 bottle with popping cork
		/// </summary>
		public static readonly EmojiInfo Emoji_champagne = new EmojiInfo("champagne", "1f37e.png", "bottle with popping cork", "🍾", true, true, true, false);

		/// <summary>
		/// :popcorn: 🍿 popcorn
		/// </summary>
		public static readonly EmojiInfo Emoji_popcorn = new EmojiInfo("popcorn", "1f37f.png", "popcorn", "🍿", true, true, true, false);

		/// <summary>
		/// :ribbon: 🎀 ribbon
		/// </summary>
		public static readonly EmojiInfo Emoji_ribbon = new EmojiInfo("ribbon", "1f380.png", "ribbon", "🎀", true, true, true, true);

		/// <summary>
		/// :gift: 🎁 wrapped present
		/// </summary>
		public static readonly EmojiInfo Emoji_gift = new EmojiInfo("gift", "1f381.png", "wrapped present", "🎁", true, true, true, true);

		/// <summary>
		/// :birthday: 🎂 birthday cake
		/// </summary>
		public static readonly EmojiInfo Emoji_birthday = new EmojiInfo("birthday", "1f382.png", "birthday cake", "🎂", true, true, true, true);

		/// <summary>
		/// :jack_o_lantern: 🎃 jack-o-lantern
		/// </summary>
		public static readonly EmojiInfo Emoji_jack_o_lantern = new EmojiInfo("jack_o_lantern", "1f383.png", "jack-o-lantern", "🎃", true, true, true, true);

		/// <summary>
		/// :christmas_tree: 🎄 christmas tree
		/// </summary>
		public static readonly EmojiInfo Emoji_christmas_tree = new EmojiInfo("christmas_tree", "1f384.png", "christmas tree", "🎄", true, true, true, true);

		/// <summary>
		/// :santa: 🎅 father christmas
		/// </summary>
		public static readonly EmojiInfo Emoji_santa = new EmojiInfo("santa", "1f385.png", "father christmas", "🎅", true, true, true, true);

		/// <summary>
		/// :fireworks: 🎆 fireworks
		/// </summary>
		public static readonly EmojiInfo Emoji_fireworks = new EmojiInfo("fireworks", "1f386.png", "fireworks", "🎆", true, true, true, true);

		/// <summary>
		/// :sparkler: 🎇 firework sparkler
		/// </summary>
		public static readonly EmojiInfo Emoji_sparkler = new EmojiInfo("sparkler", "1f387.png", "firework sparkler", "🎇", true, true, true, true);

		/// <summary>
		/// :balloon: 🎈 balloon
		/// </summary>
		public static readonly EmojiInfo Emoji_balloon = new EmojiInfo("balloon", "1f388.png", "balloon", "🎈", true, true, true, true);

		/// <summary>
		/// :tada: 🎉 party popper
		/// </summary>
		public static readonly EmojiInfo Emoji_tada = new EmojiInfo("tada", "1f389.png", "party popper", "🎉", true, true, true, true);

		/// <summary>
		/// :confetti_ball: 🎊 confetti ball
		/// </summary>
		public static readonly EmojiInfo Emoji_confetti_ball = new EmojiInfo("confetti_ball", "1f38a.png", "confetti ball", "🎊", true, true, true, true);

		/// <summary>
		/// :tanabata_tree: 🎋 tanabata tree
		/// </summary>
		public static readonly EmojiInfo Emoji_tanabata_tree = new EmojiInfo("tanabata_tree", "1f38b.png", "tanabata tree", "🎋", true, true, true, true);

		/// <summary>
		/// :crossed_flags: 🎌 crossed flags
		/// </summary>
		public static readonly EmojiInfo Emoji_crossed_flags = new EmojiInfo("crossed_flags", "1f38c.png", "crossed flags", "🎌", true, true, true, true);

		/// <summary>
		/// :bamboo: 🎍 pine decoration
		/// </summary>
		public static readonly EmojiInfo Emoji_bamboo = new EmojiInfo("bamboo", "1f38d.png", "pine decoration", "🎍", true, true, true, true);

		/// <summary>
		/// :dolls: 🎎 japanese dolls
		/// </summary>
		public static readonly EmojiInfo Emoji_dolls = new EmojiInfo("dolls", "1f38e.png", "japanese dolls", "🎎", true, true, true, true);

		/// <summary>
		/// :flags: 🎏 carp streamer
		/// </summary>
		public static readonly EmojiInfo Emoji_flags = new EmojiInfo("flags", "1f38f.png", "carp streamer", "🎏", true, true, true, true);

		/// <summary>
		/// :wind_chime: 🎐 wind chime
		/// </summary>
		public static readonly EmojiInfo Emoji_wind_chime = new EmojiInfo("wind_chime", "1f390.png", "wind chime", "🎐", true, true, true, true);

		/// <summary>
		/// :rice_scene: 🎑 moon viewing ceremony
		/// </summary>
		public static readonly EmojiInfo Emoji_rice_scene = new EmojiInfo("rice_scene", "1f391.png", "moon viewing ceremony", "🎑", true, true, true, true);

		/// <summary>
		/// :school_satchel: 🎒 school satchel
		/// </summary>
		public static readonly EmojiInfo Emoji_school_satchel = new EmojiInfo("school_satchel", "1f392.png", "school satchel", "🎒", true, true, true, true);

		/// <summary>
		/// :mortar_board: 🎓 graduation cap
		/// </summary>
		public static readonly EmojiInfo Emoji_mortar_board = new EmojiInfo("mortar_board", "1f393.png", "graduation cap", "🎓", true, true, true, true);

		/// <summary>
		/// :medal: 🎖 military medal
		/// </summary>
		public static readonly EmojiInfo Emoji_medal = new EmojiInfo("medal", "1f396.png", "military medal", "🎖", true, true, true, true);

		/// <summary>
		/// :reminder_ribbon: 🎗 reminder ribbon
		/// </summary>
		public static readonly EmojiInfo Emoji_reminder_ribbon = new EmojiInfo("reminder_ribbon", "1f397.png", "reminder ribbon", "🎗", true, true, true, true);

		/// <summary>
		/// :studio_microphone: 🎙 studio microphone
		/// </summary>
		public static readonly EmojiInfo Emoji_studio_microphone = new EmojiInfo("studio_microphone", "1f399.png", "studio microphone", "🎙", true, true, true, true);

		/// <summary>
		/// :level_slider: 🎚 level slider
		/// </summary>
		public static readonly EmojiInfo Emoji_level_slider = new EmojiInfo("level_slider", "1f39a.png", "level slider", "🎚", true, true, true, true);

		/// <summary>
		/// :control_knobs: 🎛 control knobs
		/// </summary>
		public static readonly EmojiInfo Emoji_control_knobs = new EmojiInfo("control_knobs", "1f39b.png", "control knobs", "🎛", true, true, true, true);

		/// <summary>
		/// :film_frames: 🎞 film frames
		/// </summary>
		public static readonly EmojiInfo Emoji_film_frames = new EmojiInfo("film_frames", "1f39e.png", "film frames", "🎞", true, true, true, true);

		/// <summary>
		/// :admission_tickets: 🎟 admission tickets
		/// </summary>
		public static readonly EmojiInfo Emoji_admission_tickets = new EmojiInfo("admission_tickets", "1f39f.png", "admission tickets", "🎟", true, true, true, true);

		/// <summary>
		/// :carousel_horse: 🎠 carousel horse
		/// </summary>
		public static readonly EmojiInfo Emoji_carousel_horse = new EmojiInfo("carousel_horse", "1f3a0.png", "carousel horse", "🎠", true, true, true, true);

		/// <summary>
		/// :ferris_wheel: 🎡 ferris wheel
		/// </summary>
		public static readonly EmojiInfo Emoji_ferris_wheel = new EmojiInfo("ferris_wheel", "1f3a1.png", "ferris wheel", "🎡", true, true, true, true);

		/// <summary>
		/// :roller_coaster: 🎢 roller coaster
		/// </summary>
		public static readonly EmojiInfo Emoji_roller_coaster = new EmojiInfo("roller_coaster", "1f3a2.png", "roller coaster", "🎢", true, true, true, true);

		/// <summary>
		/// :fishing_pole_and_fish: 🎣 fishing pole and fish
		/// </summary>
		public static readonly EmojiInfo Emoji_fishing_pole_and_fish = new EmojiInfo("fishing_pole_and_fish", "1f3a3.png", "fishing pole and fish", "🎣", true, true, true, true);

		/// <summary>
		/// :microphone: 🎤 microphone
		/// </summary>
		public static readonly EmojiInfo Emoji_microphone = new EmojiInfo("microphone", "1f3a4.png", "microphone", "🎤", true, true, true, true);

		/// <summary>
		/// :movie_camera: 🎥 movie camera
		/// </summary>
		public static readonly EmojiInfo Emoji_movie_camera = new EmojiInfo("movie_camera", "1f3a5.png", "movie camera", "🎥", true, true, true, true);

		/// <summary>
		/// :cinema: 🎦 cinema
		/// </summary>
		public static readonly EmojiInfo Emoji_cinema = new EmojiInfo("cinema", "1f3a6.png", "cinema", "🎦", true, true, true, true);

		/// <summary>
		/// :headphones: 🎧 headphone
		/// </summary>
		public static readonly EmojiInfo Emoji_headphones = new EmojiInfo("headphones", "1f3a7.png", "headphone", "🎧", true, true, true, true);

		/// <summary>
		/// :art: 🎨 artist palette
		/// </summary>
		public static readonly EmojiInfo Emoji_art = new EmojiInfo("art", "1f3a8.png", "artist palette", "🎨", true, true, true, true);

		/// <summary>
		/// :tophat: 🎩 top hat
		/// </summary>
		public static readonly EmojiInfo Emoji_tophat = new EmojiInfo("tophat", "1f3a9.png", "top hat", "🎩", true, true, true, true);

		/// <summary>
		/// :circus_tent: 🎪 circus tent
		/// </summary>
		public static readonly EmojiInfo Emoji_circus_tent = new EmojiInfo("circus_tent", "1f3aa.png", "circus tent", "🎪", true, true, true, true);

		/// <summary>
		/// :ticket: 🎫 ticket
		/// </summary>
		public static readonly EmojiInfo Emoji_ticket = new EmojiInfo("ticket", "1f3ab.png", "ticket", "🎫", true, true, true, true);

		/// <summary>
		/// :clapper: 🎬 clapper board
		/// </summary>
		public static readonly EmojiInfo Emoji_clapper = new EmojiInfo("clapper", "1f3ac.png", "clapper board", "🎬", true, true, true, true);

		/// <summary>
		/// :performing_arts: 🎭 performing arts
		/// </summary>
		public static readonly EmojiInfo Emoji_performing_arts = new EmojiInfo("performing_arts", "1f3ad.png", "performing arts", "🎭", true, true, true, true);

		/// <summary>
		/// :video_game: 🎮 video game
		/// </summary>
		public static readonly EmojiInfo Emoji_video_game = new EmojiInfo("video_game", "1f3ae.png", "video game", "🎮", true, true, true, true);

		/// <summary>
		/// :dart: 🎯 direct hit
		/// </summary>
		public static readonly EmojiInfo Emoji_dart = new EmojiInfo("dart", "1f3af.png", "direct hit", "🎯", true, true, true, true);

		/// <summary>
		/// :slot_machine: 🎰 slot machine
		/// </summary>
		public static readonly EmojiInfo Emoji_slot_machine = new EmojiInfo("slot_machine", "1f3b0.png", "slot machine", "🎰", true, true, true, true);

		/// <summary>
		/// :8ball: 🎱 billiards
		/// </summary>
		public static readonly EmojiInfo Emoji_8ball = new EmojiInfo("8ball", "1f3b1.png", "billiards", "🎱", true, true, true, true);

		/// <summary>
		/// :game_die: 🎲 game die
		/// </summary>
		public static readonly EmojiInfo Emoji_game_die = new EmojiInfo("game_die", "1f3b2.png", "game die", "🎲", true, true, true, true);

		/// <summary>
		/// :bowling: 🎳 bowling
		/// </summary>
		public static readonly EmojiInfo Emoji_bowling = new EmojiInfo("bowling", "1f3b3.png", "bowling", "🎳", true, true, true, true);

		/// <summary>
		/// :flower_playing_cards: 🎴 flower playing cards
		/// </summary>
		public static readonly EmojiInfo Emoji_flower_playing_cards = new EmojiInfo("flower_playing_cards", "1f3b4.png", "flower playing cards", "🎴", true, true, true, true);

		/// <summary>
		/// :musical_note: 🎵 musical note
		/// </summary>
		public static readonly EmojiInfo Emoji_musical_note = new EmojiInfo("musical_note", "1f3b5.png", "musical note", "🎵", true, true, true, true);

		/// <summary>
		/// :notes: 🎶 multiple musical notes
		/// </summary>
		public static readonly EmojiInfo Emoji_notes = new EmojiInfo("notes", "1f3b6.png", "multiple musical notes", "🎶", true, true, true, true);

		/// <summary>
		/// :saxophone: 🎷 saxophone
		/// </summary>
		public static readonly EmojiInfo Emoji_saxophone = new EmojiInfo("saxophone", "1f3b7.png", "saxophone", "🎷", true, true, true, true);

		/// <summary>
		/// :guitar: 🎸 guitar
		/// </summary>
		public static readonly EmojiInfo Emoji_guitar = new EmojiInfo("guitar", "1f3b8.png", "guitar", "🎸", true, true, true, true);

		/// <summary>
		/// :musical_keyboard: 🎹 musical keyboard
		/// </summary>
		public static readonly EmojiInfo Emoji_musical_keyboard = new EmojiInfo("musical_keyboard", "1f3b9.png", "musical keyboard", "🎹", true, true, true, true);

		/// <summary>
		/// :trumpet: 🎺 trumpet
		/// </summary>
		public static readonly EmojiInfo Emoji_trumpet = new EmojiInfo("trumpet", "1f3ba.png", "trumpet", "🎺", true, true, true, true);

		/// <summary>
		/// :violin: 🎻 violin
		/// </summary>
		public static readonly EmojiInfo Emoji_violin = new EmojiInfo("violin", "1f3bb.png", "violin", "🎻", true, true, true, true);

		/// <summary>
		/// :musical_score: 🎼 musical score
		/// </summary>
		public static readonly EmojiInfo Emoji_musical_score = new EmojiInfo("musical_score", "1f3bc.png", "musical score", "🎼", true, true, true, true);

		/// <summary>
		/// :running_shirt_with_sash: 🎽 running shirt with sash
		/// </summary>
		public static readonly EmojiInfo Emoji_running_shirt_with_sash = new EmojiInfo("running_shirt_with_sash", "1f3bd.png", "running shirt with sash", "🎽", true, true, true, true);

		/// <summary>
		/// :tennis: 🎾 tennis racquet and ball
		/// </summary>
		public static readonly EmojiInfo Emoji_tennis = new EmojiInfo("tennis", "1f3be.png", "tennis racquet and ball", "🎾", true, true, true, true);

		/// <summary>
		/// :ski: 🎿 ski and ski boot
		/// </summary>
		public static readonly EmojiInfo Emoji_ski = new EmojiInfo("ski", "1f3bf.png", "ski and ski boot", "🎿", true, true, true, true);

		/// <summary>
		/// :basketball: 🏀 basketball and hoop
		/// </summary>
		public static readonly EmojiInfo Emoji_basketball = new EmojiInfo("basketball", "1f3c0.png", "basketball and hoop", "🏀", true, true, true, true);

		/// <summary>
		/// :checkered_flag: 🏁 chequered flag
		/// </summary>
		public static readonly EmojiInfo Emoji_checkered_flag = new EmojiInfo("checkered_flag", "1f3c1.png", "chequered flag", "🏁", true, true, true, true);

		/// <summary>
		/// :snowboarder: 🏂 snowboarder
		/// </summary>
		public static readonly EmojiInfo Emoji_snowboarder = new EmojiInfo("snowboarder", "1f3c2.png", "snowboarder", "🏂", true, true, true, true);

		/// <summary>
		/// :runner: 🏃 runner
		/// </summary>
		public static readonly EmojiInfo Emoji_runner = new EmojiInfo("runner", "1f3c3.png", "runner", "🏃", true, true, true, true);

		/// <summary>
		/// :surfer: 🏄 surfer
		/// </summary>
		public static readonly EmojiInfo Emoji_surfer = new EmojiInfo("surfer", "1f3c4.png", "surfer", "🏄", true, true, true, true);

		/// <summary>
		/// :sports_medal: 🏅 sports medal
		/// </summary>
		public static readonly EmojiInfo Emoji_sports_medal = new EmojiInfo("sports_medal", "1f3c5.png", "sports medal", "🏅", true, true, true, true);

		/// <summary>
		/// :trophy: 🏆 trophy
		/// </summary>
		public static readonly EmojiInfo Emoji_trophy = new EmojiInfo("trophy", "1f3c6.png", "trophy", "🏆", true, true, true, true);

		/// <summary>
		/// :horse_racing: 🏇 horse racing
		/// </summary>
		public static readonly EmojiInfo Emoji_horse_racing = new EmojiInfo("horse_racing", "1f3c7.png", "horse racing", "🏇", true, true, true, true);

		/// <summary>
		/// :football: 🏈 american football
		/// </summary>
		public static readonly EmojiInfo Emoji_football = new EmojiInfo("football", "1f3c8.png", "american football", "🏈", true, true, true, true);

		/// <summary>
		/// :rugby_football: 🏉 rugby football
		/// </summary>
		public static readonly EmojiInfo Emoji_rugby_football = new EmojiInfo("rugby_football", "1f3c9.png", "rugby football", "🏉", true, true, true, true);

		/// <summary>
		/// :swimmer: 🏊 swimmer
		/// </summary>
		public static readonly EmojiInfo Emoji_swimmer = new EmojiInfo("swimmer", "1f3ca.png", "swimmer", "🏊", true, true, true, true);

		/// <summary>
		/// :weight_lifter: 🏋 weight lifter
		/// </summary>
		public static readonly EmojiInfo Emoji_weight_lifter = new EmojiInfo("weight_lifter", "1f3cb.png", "weight lifter", "🏋", true, true, true, true);

		/// <summary>
		/// :golfer: 🏌 golfer
		/// </summary>
		public static readonly EmojiInfo Emoji_golfer = new EmojiInfo("golfer", "1f3cc.png", "golfer", "🏌", true, true, true, true);

		/// <summary>
		/// :racing_motorcycle: 🏍 racing motorcycle
		/// </summary>
		public static readonly EmojiInfo Emoji_racing_motorcycle = new EmojiInfo("racing_motorcycle", "1f3cd.png", "racing motorcycle", "🏍", true, true, true, true);

		/// <summary>
		/// :racing_car: 🏎 racing car
		/// </summary>
		public static readonly EmojiInfo Emoji_racing_car = new EmojiInfo("racing_car", "1f3ce.png", "racing car", "🏎", true, true, true, true);

		/// <summary>
		/// :cricket_bat_and_ball: 🏏 cricket bat and ball
		/// </summary>
		public static readonly EmojiInfo Emoji_cricket_bat_and_ball = new EmojiInfo("cricket_bat_and_ball", "1f3cf.png", "cricket bat and ball", "🏏", true, true, true, false);

		/// <summary>
		/// :volleyball: 🏐 volleyball
		/// </summary>
		public static readonly EmojiInfo Emoji_volleyball = new EmojiInfo("volleyball", "1f3d0.png", "volleyball", "🏐", true, true, true, false);

		/// <summary>
		/// :field_hockey_stick_and_ball: 🏑 field hockey stick and ball
		/// </summary>
		public static readonly EmojiInfo Emoji_field_hockey_stick_and_ball = new EmojiInfo("field_hockey_stick_and_ball", "1f3d1.png", "field hockey stick and ball", "🏑", true, true, true, false);

		/// <summary>
		/// :ice_hockey_stick_and_puck: 🏒 ice hockey stick and puck
		/// </summary>
		public static readonly EmojiInfo Emoji_ice_hockey_stick_and_puck = new EmojiInfo("ice_hockey_stick_and_puck", "1f3d2.png", "ice hockey stick and puck", "🏒", true, true, true, false);

		/// <summary>
		/// :table_tennis_paddle_and_ball: 🏓 table tennis paddle and ball
		/// </summary>
		public static readonly EmojiInfo Emoji_table_tennis_paddle_and_ball = new EmojiInfo("table_tennis_paddle_and_ball", "1f3d3.png", "table tennis paddle and ball", "🏓", true, true, true, false);

		/// <summary>
		/// :snow_capped_mountain: 🏔 snow capped mountain
		/// </summary>
		public static readonly EmojiInfo Emoji_snow_capped_mountain = new EmojiInfo("snow_capped_mountain", "1f3d4.png", "snow capped mountain", "🏔", true, true, true, true);

		/// <summary>
		/// :camping: 🏕 camping
		/// </summary>
		public static readonly EmojiInfo Emoji_camping = new EmojiInfo("camping", "1f3d5.png", "camping", "🏕", true, true, true, true);

		/// <summary>
		/// :beach_with_umbrella: 🏖 beach with umbrella
		/// </summary>
		public static readonly EmojiInfo Emoji_beach_with_umbrella = new EmojiInfo("beach_with_umbrella", "1f3d6.png", "beach with umbrella", "🏖", true, true, true, true);

		/// <summary>
		/// :building_construction: 🏗 building construction
		/// </summary>
		public static readonly EmojiInfo Emoji_building_construction = new EmojiInfo("building_construction", "1f3d7.png", "building construction", "🏗", true, true, true, true);

		/// <summary>
		/// :house_buildings: 🏘 house buildings
		/// </summary>
		public static readonly EmojiInfo Emoji_house_buildings = new EmojiInfo("house_buildings", "1f3d8.png", "house buildings", "🏘", true, true, true, true);

		/// <summary>
		/// :cityscape: 🏙 cityscape
		/// </summary>
		public static readonly EmojiInfo Emoji_cityscape = new EmojiInfo("cityscape", "1f3d9.png", "cityscape", "🏙", true, true, true, true);

		/// <summary>
		/// :derelict_house_building: 🏚 derelict house building
		/// </summary>
		public static readonly EmojiInfo Emoji_derelict_house_building = new EmojiInfo("derelict_house_building", "1f3da.png", "derelict house building", "🏚", true, true, true, true);

		/// <summary>
		/// :classical_building: 🏛 classical building
		/// </summary>
		public static readonly EmojiInfo Emoji_classical_building = new EmojiInfo("classical_building", "1f3db.png", "classical building", "🏛", true, true, true, true);

		/// <summary>
		/// :desert: 🏜 desert
		/// </summary>
		public static readonly EmojiInfo Emoji_desert = new EmojiInfo("desert", "1f3dc.png", "desert", "🏜", true, true, true, true);

		/// <summary>
		/// :desert_island: 🏝 desert island
		/// </summary>
		public static readonly EmojiInfo Emoji_desert_island = new EmojiInfo("desert_island", "1f3dd.png", "desert island", "🏝", true, true, true, true);

		/// <summary>
		/// :national_park: 🏞 national park
		/// </summary>
		public static readonly EmojiInfo Emoji_national_park = new EmojiInfo("national_park", "1f3de.png", "national park", "🏞", true, true, true, true);

		/// <summary>
		/// :stadium: 🏟 stadium
		/// </summary>
		public static readonly EmojiInfo Emoji_stadium = new EmojiInfo("stadium", "1f3df.png", "stadium", "🏟", true, true, true, true);

		/// <summary>
		/// :house: 🏠 house building
		/// </summary>
		public static readonly EmojiInfo Emoji_house = new EmojiInfo("house", "1f3e0.png", "house building", "🏠", true, true, true, true);

		/// <summary>
		/// :house_with_garden: 🏡 house with garden
		/// </summary>
		public static readonly EmojiInfo Emoji_house_with_garden = new EmojiInfo("house_with_garden", "1f3e1.png", "house with garden", "🏡", true, true, true, true);

		/// <summary>
		/// :office: 🏢 office building
		/// </summary>
		public static readonly EmojiInfo Emoji_office = new EmojiInfo("office", "1f3e2.png", "office building", "🏢", true, true, true, true);

		/// <summary>
		/// :post_office: 🏣 japanese post office
		/// </summary>
		public static readonly EmojiInfo Emoji_post_office = new EmojiInfo("post_office", "1f3e3.png", "japanese post office", "🏣", true, true, true, true);

		/// <summary>
		/// :european_post_office: 🏤 european post office
		/// </summary>
		public static readonly EmojiInfo Emoji_european_post_office = new EmojiInfo("european_post_office", "1f3e4.png", "european post office", "🏤", true, true, true, true);

		/// <summary>
		/// :hospital: 🏥 hospital
		/// </summary>
		public static readonly EmojiInfo Emoji_hospital = new EmojiInfo("hospital", "1f3e5.png", "hospital", "🏥", true, true, true, true);

		/// <summary>
		/// :bank: 🏦 bank
		/// </summary>
		public static readonly EmojiInfo Emoji_bank = new EmojiInfo("bank", "1f3e6.png", "bank", "🏦", true, true, true, true);

		/// <summary>
		/// :atm: 🏧 automated teller machine
		/// </summary>
		public static readonly EmojiInfo Emoji_atm = new EmojiInfo("atm", "1f3e7.png", "automated teller machine", "🏧", true, true, true, true);

		/// <summary>
		/// :hotel: 🏨 hotel
		/// </summary>
		public static readonly EmojiInfo Emoji_hotel = new EmojiInfo("hotel", "1f3e8.png", "hotel", "🏨", true, true, true, true);

		/// <summary>
		/// :love_hotel: 🏩 love hotel
		/// </summary>
		public static readonly EmojiInfo Emoji_love_hotel = new EmojiInfo("love_hotel", "1f3e9.png", "love hotel", "🏩", true, true, true, true);

		/// <summary>
		/// :convenience_store: 🏪 convenience store
		/// </summary>
		public static readonly EmojiInfo Emoji_convenience_store = new EmojiInfo("convenience_store", "1f3ea.png", "convenience store", "🏪", true, true, true, true);

		/// <summary>
		/// :school: 🏫 school
		/// </summary>
		public static readonly EmojiInfo Emoji_school = new EmojiInfo("school", "1f3eb.png", "school", "🏫", true, true, true, true);

		/// <summary>
		/// :department_store: 🏬 department store
		/// </summary>
		public static readonly EmojiInfo Emoji_department_store = new EmojiInfo("department_store", "1f3ec.png", "department store", "🏬", true, true, true, true);

		/// <summary>
		/// :factory: 🏭 factory
		/// </summary>
		public static readonly EmojiInfo Emoji_factory = new EmojiInfo("factory", "1f3ed.png", "factory", "🏭", true, true, true, true);

		/// <summary>
		/// :izakaya_lantern: 🏮 izakaya lantern
		/// </summary>
		public static readonly EmojiInfo Emoji_izakaya_lantern = new EmojiInfo("izakaya_lantern", "1f3ee.png", "izakaya lantern", "🏮", true, true, true, true);

		/// <summary>
		/// :japanese_castle: 🏯 japanese castle
		/// </summary>
		public static readonly EmojiInfo Emoji_japanese_castle = new EmojiInfo("japanese_castle", "1f3ef.png", "japanese castle", "🏯", true, true, true, true);

		/// <summary>
		/// :european_castle: 🏰 european castle
		/// </summary>
		public static readonly EmojiInfo Emoji_european_castle = new EmojiInfo("european_castle", "1f3f0.png", "european castle", "🏰", true, true, true, true);

		/// <summary>
		/// :waving_white_flag: 🏳 waving white flag
		/// </summary>
		public static readonly EmojiInfo Emoji_waving_white_flag = new EmojiInfo("waving_white_flag", "1f3f3.png", "waving white flag", "🏳", true, true, true, true);

		/// <summary>
		/// :waving_black_flag: 🏴 waving black flag
		/// </summary>
		public static readonly EmojiInfo Emoji_waving_black_flag = new EmojiInfo("waving_black_flag", "1f3f4.png", "waving black flag", "🏴", true, true, true, true);

		/// <summary>
		/// :rosette: 🏵 rosette
		/// </summary>
		public static readonly EmojiInfo Emoji_rosette = new EmojiInfo("rosette", "1f3f5.png", "rosette", "🏵", true, true, true, true);

		/// <summary>
		/// :label: 🏷 label
		/// </summary>
		public static readonly EmojiInfo Emoji_label = new EmojiInfo("label", "1f3f7.png", "label", "🏷", true, true, true, true);

		/// <summary>
		/// :badminton_racquet_and_shuttlecock: 🏸 badminton racquet and shuttlecock
		/// </summary>
		public static readonly EmojiInfo Emoji_badminton_racquet_and_shuttlecock = new EmojiInfo("badminton_racquet_and_shuttlecock", "1f3f8.png", "badminton racquet and shuttlecock", "🏸", true, true, true, false);

		/// <summary>
		/// :bow_and_arrow: 🏹 bow and arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_bow_and_arrow = new EmojiInfo("bow_and_arrow", "1f3f9.png", "bow and arrow", "🏹", true, true, true, false);

		/// <summary>
		/// :amphora: 🏺 amphora
		/// </summary>
		public static readonly EmojiInfo Emoji_amphora = new EmojiInfo("amphora", "1f3fa.png", "amphora", "🏺", true, true, true, false);

		/// <summary>
		/// :skin-tone-2: 🏻 emoji modifier fitzpatrick type-1-2
		/// </summary>
		public static readonly EmojiInfo Emoji_skin_tone_2 = new EmojiInfo("skin-tone-2", "1f3fb.png", "emoji modifier fitzpatrick type-1-2", "🏻", true, false, true, false);

		/// <summary>
		/// :skin-tone-3: 🏼 emoji modifier fitzpatrick type-3
		/// </summary>
		public static readonly EmojiInfo Emoji_skin_tone_3 = new EmojiInfo("skin-tone-3", "1f3fc.png", "emoji modifier fitzpatrick type-3", "🏼", true, false, true, false);

		/// <summary>
		/// :skin-tone-4: 🏽 emoji modifier fitzpatrick type-4
		/// </summary>
		public static readonly EmojiInfo Emoji_skin_tone_4 = new EmojiInfo("skin-tone-4", "1f3fd.png", "emoji modifier fitzpatrick type-4", "🏽", true, false, true, false);

		/// <summary>
		/// :skin-tone-5: 🏾 emoji modifier fitzpatrick type-5
		/// </summary>
		public static readonly EmojiInfo Emoji_skin_tone_5 = new EmojiInfo("skin-tone-5", "1f3fe.png", "emoji modifier fitzpatrick type-5", "🏾", true, false, true, false);

		/// <summary>
		/// :skin-tone-6: 🏿 emoji modifier fitzpatrick type-6
		/// </summary>
		public static readonly EmojiInfo Emoji_skin_tone_6 = new EmojiInfo("skin-tone-6", "1f3ff.png", "emoji modifier fitzpatrick type-6", "🏿", true, false, true, false);

		/// <summary>
		/// :rat: 🐀 rat
		/// </summary>
		public static readonly EmojiInfo Emoji_rat = new EmojiInfo("rat", "1f400.png", "rat", "🐀", true, true, true, true);

		/// <summary>
		/// :mouse2: 🐁 mouse
		/// </summary>
		public static readonly EmojiInfo Emoji_mouse2 = new EmojiInfo("mouse2", "1f401.png", "mouse", "🐁", true, true, true, true);

		/// <summary>
		/// :ox: 🐂 ox
		/// </summary>
		public static readonly EmojiInfo Emoji_ox = new EmojiInfo("ox", "1f402.png", "ox", "🐂", true, true, true, true);

		/// <summary>
		/// :water_buffalo: 🐃 water buffalo
		/// </summary>
		public static readonly EmojiInfo Emoji_water_buffalo = new EmojiInfo("water_buffalo", "1f403.png", "water buffalo", "🐃", true, true, true, true);

		/// <summary>
		/// :cow2: 🐄 cow
		/// </summary>
		public static readonly EmojiInfo Emoji_cow2 = new EmojiInfo("cow2", "1f404.png", "cow", "🐄", true, true, true, true);

		/// <summary>
		/// :tiger2: 🐅 tiger
		/// </summary>
		public static readonly EmojiInfo Emoji_tiger2 = new EmojiInfo("tiger2", "1f405.png", "tiger", "🐅", true, true, true, true);

		/// <summary>
		/// :leopard: 🐆 leopard
		/// </summary>
		public static readonly EmojiInfo Emoji_leopard = new EmojiInfo("leopard", "1f406.png", "leopard", "🐆", true, true, true, true);

		/// <summary>
		/// :rabbit2: 🐇 rabbit
		/// </summary>
		public static readonly EmojiInfo Emoji_rabbit2 = new EmojiInfo("rabbit2", "1f407.png", "rabbit", "🐇", true, true, true, true);

		/// <summary>
		/// :cat2: 🐈 cat
		/// </summary>
		public static readonly EmojiInfo Emoji_cat2 = new EmojiInfo("cat2", "1f408.png", "cat", "🐈", true, true, true, true);

		/// <summary>
		/// :dragon: 🐉 dragon
		/// </summary>
		public static readonly EmojiInfo Emoji_dragon = new EmojiInfo("dragon", "1f409.png", "dragon", "🐉", true, true, true, true);

		/// <summary>
		/// :crocodile: 🐊 crocodile
		/// </summary>
		public static readonly EmojiInfo Emoji_crocodile = new EmojiInfo("crocodile", "1f40a.png", "crocodile", "🐊", true, true, true, true);

		/// <summary>
		/// :whale2: 🐋 whale
		/// </summary>
		public static readonly EmojiInfo Emoji_whale2 = new EmojiInfo("whale2", "1f40b.png", "whale", "🐋", true, true, true, true);

		/// <summary>
		/// :snail: 🐌 snail
		/// </summary>
		public static readonly EmojiInfo Emoji_snail = new EmojiInfo("snail", "1f40c.png", "snail", "🐌", true, true, true, true);

		/// <summary>
		/// :snake: 🐍 snake
		/// </summary>
		public static readonly EmojiInfo Emoji_snake = new EmojiInfo("snake", "1f40d.png", "snake", "🐍", true, true, true, true);

		/// <summary>
		/// :racehorse: 🐎 horse
		/// </summary>
		public static readonly EmojiInfo Emoji_racehorse = new EmojiInfo("racehorse", "1f40e.png", "horse", "🐎", true, true, true, true);

		/// <summary>
		/// :ram: 🐏 ram
		/// </summary>
		public static readonly EmojiInfo Emoji_ram = new EmojiInfo("ram", "1f40f.png", "ram", "🐏", true, true, true, true);

		/// <summary>
		/// :goat: 🐐 goat
		/// </summary>
		public static readonly EmojiInfo Emoji_goat = new EmojiInfo("goat", "1f410.png", "goat", "🐐", true, true, true, true);

		/// <summary>
		/// :sheep: 🐑 sheep
		/// </summary>
		public static readonly EmojiInfo Emoji_sheep = new EmojiInfo("sheep", "1f411.png", "sheep", "🐑", true, true, true, true);

		/// <summary>
		/// :monkey: 🐒 monkey
		/// </summary>
		public static readonly EmojiInfo Emoji_monkey = new EmojiInfo("monkey", "1f412.png", "monkey", "🐒", true, true, true, true);

		/// <summary>
		/// :rooster: 🐓 rooster
		/// </summary>
		public static readonly EmojiInfo Emoji_rooster = new EmojiInfo("rooster", "1f413.png", "rooster", "🐓", true, true, true, true);

		/// <summary>
		/// :chicken: 🐔 chicken
		/// </summary>
		public static readonly EmojiInfo Emoji_chicken = new EmojiInfo("chicken", "1f414.png", "chicken", "🐔", true, true, true, true);

		/// <summary>
		/// :dog2: 🐕 dog
		/// </summary>
		public static readonly EmojiInfo Emoji_dog2 = new EmojiInfo("dog2", "1f415.png", "dog", "🐕", true, true, true, true);

		/// <summary>
		/// :pig2: 🐖 pig
		/// </summary>
		public static readonly EmojiInfo Emoji_pig2 = new EmojiInfo("pig2", "1f416.png", "pig", "🐖", true, true, true, true);

		/// <summary>
		/// :boar: 🐗 boar
		/// </summary>
		public static readonly EmojiInfo Emoji_boar = new EmojiInfo("boar", "1f417.png", "boar", "🐗", true, true, true, true);

		/// <summary>
		/// :elephant: 🐘 elephant
		/// </summary>
		public static readonly EmojiInfo Emoji_elephant = new EmojiInfo("elephant", "1f418.png", "elephant", "🐘", true, true, true, true);

		/// <summary>
		/// :octopus: 🐙 octopus
		/// </summary>
		public static readonly EmojiInfo Emoji_octopus = new EmojiInfo("octopus", "1f419.png", "octopus", "🐙", true, true, true, true);

		/// <summary>
		/// :shell: 🐚 spiral shell
		/// </summary>
		public static readonly EmojiInfo Emoji_shell = new EmojiInfo("shell", "1f41a.png", "spiral shell", "🐚", true, true, true, true);

		/// <summary>
		/// :bug: 🐛 bug
		/// </summary>
		public static readonly EmojiInfo Emoji_bug = new EmojiInfo("bug", "1f41b.png", "bug", "🐛", true, true, true, true);

		/// <summary>
		/// :ant: 🐜 ant
		/// </summary>
		public static readonly EmojiInfo Emoji_ant = new EmojiInfo("ant", "1f41c.png", "ant", "🐜", true, true, true, true);

		/// <summary>
		/// :bee: 🐝 honeybee
		/// </summary>
		public static readonly EmojiInfo Emoji_bee = new EmojiInfo("bee", "1f41d.png", "honeybee", "🐝", true, true, true, true);

		/// <summary>
		/// :beetle: 🐞 lady beetle
		/// </summary>
		public static readonly EmojiInfo Emoji_beetle = new EmojiInfo("beetle", "1f41e.png", "lady beetle", "🐞", true, true, true, true);

		/// <summary>
		/// :fish: 🐟 fish
		/// </summary>
		public static readonly EmojiInfo Emoji_fish = new EmojiInfo("fish", "1f41f.png", "fish", "🐟", true, true, true, true);

		/// <summary>
		/// :tropical_fish: 🐠 tropical fish
		/// </summary>
		public static readonly EmojiInfo Emoji_tropical_fish = new EmojiInfo("tropical_fish", "1f420.png", "tropical fish", "🐠", true, true, true, true);

		/// <summary>
		/// :blowfish: 🐡 blowfish
		/// </summary>
		public static readonly EmojiInfo Emoji_blowfish = new EmojiInfo("blowfish", "1f421.png", "blowfish", "🐡", true, true, true, true);

		/// <summary>
		/// :turtle: 🐢 turtle
		/// </summary>
		public static readonly EmojiInfo Emoji_turtle = new EmojiInfo("turtle", "1f422.png", "turtle", "🐢", true, true, true, true);

		/// <summary>
		/// :hatching_chick: 🐣 hatching chick
		/// </summary>
		public static readonly EmojiInfo Emoji_hatching_chick = new EmojiInfo("hatching_chick", "1f423.png", "hatching chick", "🐣", true, true, true, true);

		/// <summary>
		/// :baby_chick: 🐤 baby chick
		/// </summary>
		public static readonly EmojiInfo Emoji_baby_chick = new EmojiInfo("baby_chick", "1f424.png", "baby chick", "🐤", true, true, true, true);

		/// <summary>
		/// :hatched_chick: 🐥 front-facing baby chick
		/// </summary>
		public static readonly EmojiInfo Emoji_hatched_chick = new EmojiInfo("hatched_chick", "1f425.png", "front-facing baby chick", "🐥", true, true, true, true);

		/// <summary>
		/// :bird: 🐦 bird
		/// </summary>
		public static readonly EmojiInfo Emoji_bird = new EmojiInfo("bird", "1f426.png", "bird", "🐦", true, true, true, true);

		/// <summary>
		/// :penguin: 🐧 penguin
		/// </summary>
		public static readonly EmojiInfo Emoji_penguin = new EmojiInfo("penguin", "1f427.png", "penguin", "🐧", true, true, true, true);

		/// <summary>
		/// :koala: 🐨 koala
		/// </summary>
		public static readonly EmojiInfo Emoji_koala = new EmojiInfo("koala", "1f428.png", "koala", "🐨", true, true, true, true);

		/// <summary>
		/// :poodle: 🐩 poodle
		/// </summary>
		public static readonly EmojiInfo Emoji_poodle = new EmojiInfo("poodle", "1f429.png", "poodle", "🐩", true, true, true, true);

		/// <summary>
		/// :dromedary_camel: 🐪 dromedary camel
		/// </summary>
		public static readonly EmojiInfo Emoji_dromedary_camel = new EmojiInfo("dromedary_camel", "1f42a.png", "dromedary camel", "🐪", true, true, true, true);

		/// <summary>
		/// :camel: 🐫 bactrian camel
		/// </summary>
		public static readonly EmojiInfo Emoji_camel = new EmojiInfo("camel", "1f42b.png", "bactrian camel", "🐫", true, true, true, true);

		/// <summary>
		/// :dolphin: 🐬 dolphin
		/// </summary>
		public static readonly EmojiInfo Emoji_dolphin = new EmojiInfo("dolphin", "1f42c.png", "dolphin", "🐬", true, true, true, true);

		/// <summary>
		/// :mouse: 🐭 mouse face
		/// </summary>
		public static readonly EmojiInfo Emoji_mouse = new EmojiInfo("mouse", "1f42d.png", "mouse face", "🐭", true, true, true, true);

		/// <summary>
		/// :cow: 🐮 cow face
		/// </summary>
		public static readonly EmojiInfo Emoji_cow = new EmojiInfo("cow", "1f42e.png", "cow face", "🐮", true, true, true, true);

		/// <summary>
		/// :tiger: 🐯 tiger face
		/// </summary>
		public static readonly EmojiInfo Emoji_tiger = new EmojiInfo("tiger", "1f42f.png", "tiger face", "🐯", true, true, true, true);

		/// <summary>
		/// :rabbit: 🐰 rabbit face
		/// </summary>
		public static readonly EmojiInfo Emoji_rabbit = new EmojiInfo("rabbit", "1f430.png", "rabbit face", "🐰", true, true, true, true);

		/// <summary>
		/// :cat: 🐱 cat face
		/// </summary>
		public static readonly EmojiInfo Emoji_cat = new EmojiInfo("cat", "1f431.png", "cat face", "🐱", true, true, true, true);

		/// <summary>
		/// :dragon_face: 🐲 dragon face
		/// </summary>
		public static readonly EmojiInfo Emoji_dragon_face = new EmojiInfo("dragon_face", "1f432.png", "dragon face", "🐲", true, true, true, true);

		/// <summary>
		/// :whale: 🐳 spouting whale
		/// </summary>
		public static readonly EmojiInfo Emoji_whale = new EmojiInfo("whale", "1f433.png", "spouting whale", "🐳", true, true, true, true);

		/// <summary>
		/// :horse: 🐴 horse face
		/// </summary>
		public static readonly EmojiInfo Emoji_horse = new EmojiInfo("horse", "1f434.png", "horse face", "🐴", true, true, true, true);

		/// <summary>
		/// :monkey_face: 🐵 monkey face
		/// </summary>
		public static readonly EmojiInfo Emoji_monkey_face = new EmojiInfo("monkey_face", "1f435.png", "monkey face", "🐵", true, true, true, true);

		/// <summary>
		/// :dog: 🐶 dog face
		/// </summary>
		public static readonly EmojiInfo Emoji_dog = new EmojiInfo("dog", "1f436.png", "dog face", "🐶", true, true, true, true);

		/// <summary>
		/// :pig: 🐷 pig face
		/// </summary>
		public static readonly EmojiInfo Emoji_pig = new EmojiInfo("pig", "1f437.png", "pig face", "🐷", true, true, true, true);

		/// <summary>
		/// :frog: 🐸 frog face
		/// </summary>
		public static readonly EmojiInfo Emoji_frog = new EmojiInfo("frog", "1f438.png", "frog face", "🐸", true, true, true, true);

		/// <summary>
		/// :hamster: 🐹 hamster face
		/// </summary>
		public static readonly EmojiInfo Emoji_hamster = new EmojiInfo("hamster", "1f439.png", "hamster face", "🐹", true, true, true, true);

		/// <summary>
		/// :wolf: 🐺 wolf face
		/// </summary>
		public static readonly EmojiInfo Emoji_wolf = new EmojiInfo("wolf", "1f43a.png", "wolf face", "🐺", true, true, true, true);

		/// <summary>
		/// :bear: 🐻 bear face
		/// </summary>
		public static readonly EmojiInfo Emoji_bear = new EmojiInfo("bear", "1f43b.png", "bear face", "🐻", true, true, true, true);

		/// <summary>
		/// :panda_face: 🐼 panda face
		/// </summary>
		public static readonly EmojiInfo Emoji_panda_face = new EmojiInfo("panda_face", "1f43c.png", "panda face", "🐼", true, true, true, true);

		/// <summary>
		/// :pig_nose: 🐽 pig nose
		/// </summary>
		public static readonly EmojiInfo Emoji_pig_nose = new EmojiInfo("pig_nose", "1f43d.png", "pig nose", "🐽", true, true, true, true);

		/// <summary>
		/// :feet: 🐾 paw prints
		/// </summary>
		public static readonly EmojiInfo Emoji_feet = new EmojiInfo("feet", "1f43e.png", "paw prints", "🐾", true, true, true, true);

		/// <summary>
		/// :chipmunk: 🐿 chipmunk
		/// </summary>
		public static readonly EmojiInfo Emoji_chipmunk = new EmojiInfo("chipmunk", "1f43f.png", "chipmunk", "🐿", true, true, true, true);

		/// <summary>
		/// :eyes: 👀 eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_eyes = new EmojiInfo("eyes", "1f440.png", "eyes", "👀", true, true, true, true);

		/// <summary>
		/// :eye: 👁 eye
		/// </summary>
		public static readonly EmojiInfo Emoji_eye = new EmojiInfo("eye", "1f441.png", "eye", "👁", true, true, true, true);

		/// <summary>
		/// :ear: 👂 ear
		/// </summary>
		public static readonly EmojiInfo Emoji_ear = new EmojiInfo("ear", "1f442.png", "ear", "👂", true, true, true, true);

		/// <summary>
		/// :nose: 👃 nose
		/// </summary>
		public static readonly EmojiInfo Emoji_nose = new EmojiInfo("nose", "1f443.png", "nose", "👃", true, true, true, true);

		/// <summary>
		/// :lips: 👄 mouth
		/// </summary>
		public static readonly EmojiInfo Emoji_lips = new EmojiInfo("lips", "1f444.png", "mouth", "👄", true, true, true, true);

		/// <summary>
		/// :tongue: 👅 tongue
		/// </summary>
		public static readonly EmojiInfo Emoji_tongue = new EmojiInfo("tongue", "1f445.png", "tongue", "👅", true, true, true, true);

		/// <summary>
		/// :point_up_2: 👆 white up pointing backhand index
		/// </summary>
		public static readonly EmojiInfo Emoji_point_up_2 = new EmojiInfo("point_up_2", "1f446.png", "white up pointing backhand index", "👆", true, true, true, true);

		/// <summary>
		/// :point_down: 👇 white down pointing backhand index
		/// </summary>
		public static readonly EmojiInfo Emoji_point_down = new EmojiInfo("point_down", "1f447.png", "white down pointing backhand index", "👇", true, true, true, true);

		/// <summary>
		/// :point_left: 👈 white left pointing backhand index
		/// </summary>
		public static readonly EmojiInfo Emoji_point_left = new EmojiInfo("point_left", "1f448.png", "white left pointing backhand index", "👈", true, true, true, true);

		/// <summary>
		/// :point_right: 👉 white right pointing backhand index
		/// </summary>
		public static readonly EmojiInfo Emoji_point_right = new EmojiInfo("point_right", "1f449.png", "white right pointing backhand index", "👉", true, true, true, true);

		/// <summary>
		/// :facepunch: 👊 fisted hand sign
		/// </summary>
		public static readonly EmojiInfo Emoji_facepunch = new EmojiInfo("facepunch", "1f44a.png", "fisted hand sign", "👊", true, true, true, true);

		/// <summary>
		/// :wave: 👋 waving hand sign
		/// </summary>
		public static readonly EmojiInfo Emoji_wave = new EmojiInfo("wave", "1f44b.png", "waving hand sign", "👋", true, true, true, true);

		/// <summary>
		/// :ok_hand: 👌 ok hand sign
		/// </summary>
		public static readonly EmojiInfo Emoji_ok_hand = new EmojiInfo("ok_hand", "1f44c.png", "ok hand sign", "👌", true, true, true, true);

		/// <summary>
		/// :+1: 👍 thumbs up sign
		/// </summary>
		public static readonly EmojiInfo Emoji_P1 = new EmojiInfo("+1", "1f44d.png", "thumbs up sign", "👍", true, true, true, true);

		/// <summary>
		/// :-1: 👎 thumbs down sign
		/// </summary>
		public static readonly EmojiInfo Emoji__1 = new EmojiInfo("-1", "1f44e.png", "thumbs down sign", "👎", true, true, true, true);

		/// <summary>
		/// :clap: 👏 clapping hands sign
		/// </summary>
		public static readonly EmojiInfo Emoji_clap = new EmojiInfo("clap", "1f44f.png", "clapping hands sign", "👏", true, true, true, true);

		/// <summary>
		/// :open_hands: 👐 open hands sign
		/// </summary>
		public static readonly EmojiInfo Emoji_open_hands = new EmojiInfo("open_hands", "1f450.png", "open hands sign", "👐", true, true, true, true);

		/// <summary>
		/// :crown: 👑 crown
		/// </summary>
		public static readonly EmojiInfo Emoji_crown = new EmojiInfo("crown", "1f451.png", "crown", "👑", true, true, true, true);

		/// <summary>
		/// :womans_hat: 👒 womans hat
		/// </summary>
		public static readonly EmojiInfo Emoji_womans_hat = new EmojiInfo("womans_hat", "1f452.png", "womans hat", "👒", true, true, true, true);

		/// <summary>
		/// :eyeglasses: 👓 eyeglasses
		/// </summary>
		public static readonly EmojiInfo Emoji_eyeglasses = new EmojiInfo("eyeglasses", "1f453.png", "eyeglasses", "👓", true, true, true, true);

		/// <summary>
		/// :necktie: 👔 necktie
		/// </summary>
		public static readonly EmojiInfo Emoji_necktie = new EmojiInfo("necktie", "1f454.png", "necktie", "👔", true, true, true, true);

		/// <summary>
		/// :shirt: 👕 t-shirt
		/// </summary>
		public static readonly EmojiInfo Emoji_shirt = new EmojiInfo("shirt", "1f455.png", "t-shirt", "👕", true, true, true, true);

		/// <summary>
		/// :jeans: 👖 jeans
		/// </summary>
		public static readonly EmojiInfo Emoji_jeans = new EmojiInfo("jeans", "1f456.png", "jeans", "👖", true, true, true, true);

		/// <summary>
		/// :dress: 👗 dress
		/// </summary>
		public static readonly EmojiInfo Emoji_dress = new EmojiInfo("dress", "1f457.png", "dress", "👗", true, true, true, true);

		/// <summary>
		/// :kimono: 👘 kimono
		/// </summary>
		public static readonly EmojiInfo Emoji_kimono = new EmojiInfo("kimono", "1f458.png", "kimono", "👘", true, true, true, true);

		/// <summary>
		/// :bikini: 👙 bikini
		/// </summary>
		public static readonly EmojiInfo Emoji_bikini = new EmojiInfo("bikini", "1f459.png", "bikini", "👙", true, true, true, true);

		/// <summary>
		/// :womans_clothes: 👚 womans clothes
		/// </summary>
		public static readonly EmojiInfo Emoji_womans_clothes = new EmojiInfo("womans_clothes", "1f45a.png", "womans clothes", "👚", true, true, true, true);

		/// <summary>
		/// :purse: 👛 purse
		/// </summary>
		public static readonly EmojiInfo Emoji_purse = new EmojiInfo("purse", "1f45b.png", "purse", "👛", true, true, true, true);

		/// <summary>
		/// :handbag: 👜 handbag
		/// </summary>
		public static readonly EmojiInfo Emoji_handbag = new EmojiInfo("handbag", "1f45c.png", "handbag", "👜", true, true, true, true);

		/// <summary>
		/// :pouch: 👝 pouch
		/// </summary>
		public static readonly EmojiInfo Emoji_pouch = new EmojiInfo("pouch", "1f45d.png", "pouch", "👝", true, true, true, true);

		/// <summary>
		/// :mans_shoe: 👞 mans shoe
		/// </summary>
		public static readonly EmojiInfo Emoji_mans_shoe = new EmojiInfo("mans_shoe", "1f45e.png", "mans shoe", "👞", true, true, true, true);

		/// <summary>
		/// :athletic_shoe: 👟 athletic shoe
		/// </summary>
		public static readonly EmojiInfo Emoji_athletic_shoe = new EmojiInfo("athletic_shoe", "1f45f.png", "athletic shoe", "👟", true, true, true, true);

		/// <summary>
		/// :high_heel: 👠 high-heeled shoe
		/// </summary>
		public static readonly EmojiInfo Emoji_high_heel = new EmojiInfo("high_heel", "1f460.png", "high-heeled shoe", "👠", true, true, true, true);

		/// <summary>
		/// :sandal: 👡 womans sandal
		/// </summary>
		public static readonly EmojiInfo Emoji_sandal = new EmojiInfo("sandal", "1f461.png", "womans sandal", "👡", true, true, true, true);

		/// <summary>
		/// :boot: 👢 womans boots
		/// </summary>
		public static readonly EmojiInfo Emoji_boot = new EmojiInfo("boot", "1f462.png", "womans boots", "👢", true, true, true, true);

		/// <summary>
		/// :footprints: 👣 footprints
		/// </summary>
		public static readonly EmojiInfo Emoji_footprints = new EmojiInfo("footprints", "1f463.png", "footprints", "👣", true, true, true, true);

		/// <summary>
		/// :bust_in_silhouette: 👤 bust in silhouette
		/// </summary>
		public static readonly EmojiInfo Emoji_bust_in_silhouette = new EmojiInfo("bust_in_silhouette", "1f464.png", "bust in silhouette", "👤", true, true, true, true);

		/// <summary>
		/// :busts_in_silhouette: 👥 busts in silhouette
		/// </summary>
		public static readonly EmojiInfo Emoji_busts_in_silhouette = new EmojiInfo("busts_in_silhouette", "1f465.png", "busts in silhouette", "👥", true, true, true, true);

		/// <summary>
		/// :boy: 👦 boy
		/// </summary>
		public static readonly EmojiInfo Emoji_boy = new EmojiInfo("boy", "1f466.png", "boy", "👦", true, true, true, true);

		/// <summary>
		/// :girl: 👧 girl
		/// </summary>
		public static readonly EmojiInfo Emoji_girl = new EmojiInfo("girl", "1f467.png", "girl", "👧", true, true, true, true);

		/// <summary>
		/// :man: 👨 man
		/// </summary>
		public static readonly EmojiInfo Emoji_man = new EmojiInfo("man", "1f468.png", "man", "👨", true, true, true, true);

		/// <summary>
		/// :woman: 👩 woman
		/// </summary>
		public static readonly EmojiInfo Emoji_woman = new EmojiInfo("woman", "1f469.png", "woman", "👩", true, true, true, true);

		/// <summary>
		/// :family: 👪 family
		/// </summary>
		public static readonly EmojiInfo Emoji_family = new EmojiInfo("family", "1f46a.png", "family", "👪", true, true, true, true);

		/// <summary>
		/// :couple: 👫 man and woman holding hands
		/// </summary>
		public static readonly EmojiInfo Emoji_couple = new EmojiInfo("couple", "1f46b.png", "man and woman holding hands", "👫", true, true, true, true);

		/// <summary>
		/// :two_men_holding_hands: 👬 two men holding hands
		/// </summary>
		public static readonly EmojiInfo Emoji_two_men_holding_hands = new EmojiInfo("two_men_holding_hands", "1f46c.png", "two men holding hands", "👬", true, true, true, true);

		/// <summary>
		/// :two_women_holding_hands: 👭 two women holding hands
		/// </summary>
		public static readonly EmojiInfo Emoji_two_women_holding_hands = new EmojiInfo("two_women_holding_hands", "1f46d.png", "two women holding hands", "👭", true, true, true, true);

		/// <summary>
		/// :cop: 👮 police officer
		/// </summary>
		public static readonly EmojiInfo Emoji_cop = new EmojiInfo("cop", "1f46e.png", "police officer", "👮", true, true, true, true);

		/// <summary>
		/// :dancers: 👯 woman with bunny ears
		/// </summary>
		public static readonly EmojiInfo Emoji_dancers = new EmojiInfo("dancers", "1f46f.png", "woman with bunny ears", "👯", true, true, true, true);

		/// <summary>
		/// :bride_with_veil: 👰 bride with veil
		/// </summary>
		public static readonly EmojiInfo Emoji_bride_with_veil = new EmojiInfo("bride_with_veil", "1f470.png", "bride with veil", "👰", true, true, true, true);

		/// <summary>
		/// :person_with_blond_hair: 👱 person with blond hair
		/// </summary>
		public static readonly EmojiInfo Emoji_person_with_blond_hair = new EmojiInfo("person_with_blond_hair", "1f471.png", "person with blond hair", "👱", true, true, true, true);

		/// <summary>
		/// :man_with_gua_pi_mao: 👲 man with gua pi mao
		/// </summary>
		public static readonly EmojiInfo Emoji_man_with_gua_pi_mao = new EmojiInfo("man_with_gua_pi_mao", "1f472.png", "man with gua pi mao", "👲", true, true, true, true);

		/// <summary>
		/// :man_with_turban: 👳 man with turban
		/// </summary>
		public static readonly EmojiInfo Emoji_man_with_turban = new EmojiInfo("man_with_turban", "1f473.png", "man with turban", "👳", true, true, true, true);

		/// <summary>
		/// :older_man: 👴 older man
		/// </summary>
		public static readonly EmojiInfo Emoji_older_man = new EmojiInfo("older_man", "1f474.png", "older man", "👴", true, true, true, true);

		/// <summary>
		/// :older_woman: 👵 older woman
		/// </summary>
		public static readonly EmojiInfo Emoji_older_woman = new EmojiInfo("older_woman", "1f475.png", "older woman", "👵", true, true, true, true);

		/// <summary>
		/// :baby: 👶 baby
		/// </summary>
		public static readonly EmojiInfo Emoji_baby = new EmojiInfo("baby", "1f476.png", "baby", "👶", true, true, true, true);

		/// <summary>
		/// :construction_worker: 👷 construction worker
		/// </summary>
		public static readonly EmojiInfo Emoji_construction_worker = new EmojiInfo("construction_worker", "1f477.png", "construction worker", "👷", true, true, true, true);

		/// <summary>
		/// :princess: 👸 princess
		/// </summary>
		public static readonly EmojiInfo Emoji_princess = new EmojiInfo("princess", "1f478.png", "princess", "👸", true, true, true, true);

		/// <summary>
		/// :japanese_ogre: 👹 japanese ogre
		/// </summary>
		public static readonly EmojiInfo Emoji_japanese_ogre = new EmojiInfo("japanese_ogre", "1f479.png", "japanese ogre", "👹", true, true, true, true);

		/// <summary>
		/// :japanese_goblin: 👺 japanese goblin
		/// </summary>
		public static readonly EmojiInfo Emoji_japanese_goblin = new EmojiInfo("japanese_goblin", "1f47a.png", "japanese goblin", "👺", true, true, true, true);

		/// <summary>
		/// :ghost: 👻 ghost
		/// </summary>
		public static readonly EmojiInfo Emoji_ghost = new EmojiInfo("ghost", "1f47b.png", "ghost", "👻", true, true, true, true);

		/// <summary>
		/// :angel: 👼 baby angel
		/// </summary>
		public static readonly EmojiInfo Emoji_angel = new EmojiInfo("angel", "1f47c.png", "baby angel", "👼", true, true, true, true);

		/// <summary>
		/// :alien: 👽 extraterrestrial alien
		/// </summary>
		public static readonly EmojiInfo Emoji_alien = new EmojiInfo("alien", "1f47d.png", "extraterrestrial alien", "👽", true, true, true, true);

		/// <summary>
		/// :space_invader: 👾 alien monster
		/// </summary>
		public static readonly EmojiInfo Emoji_space_invader = new EmojiInfo("space_invader", "1f47e.png", "alien monster", "👾", true, true, true, true);

		/// <summary>
		/// :imp: 👿 imp
		/// </summary>
		public static readonly EmojiInfo Emoji_imp = new EmojiInfo("imp", "1f47f.png", "imp", "👿", true, true, true, true);

		/// <summary>
		/// :skull: 💀 skull
		/// </summary>
		public static readonly EmojiInfo Emoji_skull = new EmojiInfo("skull", "1f480.png", "skull", "💀", true, true, true, true);

		/// <summary>
		/// :information_desk_person: 💁 information desk person
		/// </summary>
		public static readonly EmojiInfo Emoji_information_desk_person = new EmojiInfo("information_desk_person", "1f481.png", "information desk person", "💁", true, true, true, true);

		/// <summary>
		/// :guardsman: 💂 guardsman
		/// </summary>
		public static readonly EmojiInfo Emoji_guardsman = new EmojiInfo("guardsman", "1f482.png", "guardsman", "💂", true, true, true, true);

		/// <summary>
		/// :dancer: 💃 dancer
		/// </summary>
		public static readonly EmojiInfo Emoji_dancer = new EmojiInfo("dancer", "1f483.png", "dancer", "💃", true, true, true, true);

		/// <summary>
		/// :lipstick: 💄 lipstick
		/// </summary>
		public static readonly EmojiInfo Emoji_lipstick = new EmojiInfo("lipstick", "1f484.png", "lipstick", "💄", true, true, true, true);

		/// <summary>
		/// :nail_care: 💅 nail polish
		/// </summary>
		public static readonly EmojiInfo Emoji_nail_care = new EmojiInfo("nail_care", "1f485.png", "nail polish", "💅", true, true, true, true);

		/// <summary>
		/// :massage: 💆 face massage
		/// </summary>
		public static readonly EmojiInfo Emoji_massage = new EmojiInfo("massage", "1f486.png", "face massage", "💆", true, true, true, true);

		/// <summary>
		/// :haircut: 💇 haircut
		/// </summary>
		public static readonly EmojiInfo Emoji_haircut = new EmojiInfo("haircut", "1f487.png", "haircut", "💇", true, true, true, true);

		/// <summary>
		/// :barber: 💈 barber pole
		/// </summary>
		public static readonly EmojiInfo Emoji_barber = new EmojiInfo("barber", "1f488.png", "barber pole", "💈", true, true, true, true);

		/// <summary>
		/// :syringe: 💉 syringe
		/// </summary>
		public static readonly EmojiInfo Emoji_syringe = new EmojiInfo("syringe", "1f489.png", "syringe", "💉", true, true, true, true);

		/// <summary>
		/// :pill: 💊 pill
		/// </summary>
		public static readonly EmojiInfo Emoji_pill = new EmojiInfo("pill", "1f48a.png", "pill", "💊", true, true, true, true);

		/// <summary>
		/// :kiss: 💋 kiss mark
		/// </summary>
		public static readonly EmojiInfo Emoji_kiss = new EmojiInfo("kiss", "1f48b.png", "kiss mark", "💋", true, true, true, true);

		/// <summary>
		/// :love_letter: 💌 love letter
		/// </summary>
		public static readonly EmojiInfo Emoji_love_letter = new EmojiInfo("love_letter", "1f48c.png", "love letter", "💌", true, true, true, true);

		/// <summary>
		/// :ring: 💍 ring
		/// </summary>
		public static readonly EmojiInfo Emoji_ring = new EmojiInfo("ring", "1f48d.png", "ring", "💍", true, true, true, true);

		/// <summary>
		/// :gem: 💎 gem stone
		/// </summary>
		public static readonly EmojiInfo Emoji_gem = new EmojiInfo("gem", "1f48e.png", "gem stone", "💎", true, true, true, true);

		/// <summary>
		/// :couplekiss: 💏 kiss
		/// </summary>
		public static readonly EmojiInfo Emoji_couplekiss = new EmojiInfo("couplekiss", "1f48f.png", "kiss", "💏", true, true, true, true);

		/// <summary>
		/// :bouquet: 💐 bouquet
		/// </summary>
		public static readonly EmojiInfo Emoji_bouquet = new EmojiInfo("bouquet", "1f490.png", "bouquet", "💐", true, true, true, true);

		/// <summary>
		/// :couple_with_heart: 💑 couple with heart
		/// </summary>
		public static readonly EmojiInfo Emoji_couple_with_heart = new EmojiInfo("couple_with_heart", "1f491.png", "couple with heart", "💑", true, true, true, true);

		/// <summary>
		/// :wedding: 💒 wedding
		/// </summary>
		public static readonly EmojiInfo Emoji_wedding = new EmojiInfo("wedding", "1f492.png", "wedding", "💒", true, true, true, true);

		/// <summary>
		/// :heartbeat: 💓 beating heart
		/// </summary>
		public static readonly EmojiInfo Emoji_heartbeat = new EmojiInfo("heartbeat", "1f493.png", "beating heart", "💓", true, true, true, true);

		/// <summary>
		/// :broken_heart: 💔 broken heart
		/// </summary>
		public static readonly EmojiInfo Emoji_broken_heart = new EmojiInfo("broken_heart", "1f494.png", "broken heart", "💔", true, true, true, true);

		/// <summary>
		/// :two_hearts: 💕 two hearts
		/// </summary>
		public static readonly EmojiInfo Emoji_two_hearts = new EmojiInfo("two_hearts", "1f495.png", "two hearts", "💕", true, true, true, true);

		/// <summary>
		/// :sparkling_heart: 💖 sparkling heart
		/// </summary>
		public static readonly EmojiInfo Emoji_sparkling_heart = new EmojiInfo("sparkling_heart", "1f496.png", "sparkling heart", "💖", true, true, true, true);

		/// <summary>
		/// :heartpulse: 💗 growing heart
		/// </summary>
		public static readonly EmojiInfo Emoji_heartpulse = new EmojiInfo("heartpulse", "1f497.png", "growing heart", "💗", true, true, true, true);

		/// <summary>
		/// :cupid: 💘 heart with arrow
		/// </summary>
		public static readonly EmojiInfo Emoji_cupid = new EmojiInfo("cupid", "1f498.png", "heart with arrow", "💘", true, true, true, true);

		/// <summary>
		/// :blue_heart: 💙 blue heart
		/// </summary>
		public static readonly EmojiInfo Emoji_blue_heart = new EmojiInfo("blue_heart", "1f499.png", "blue heart", "💙", true, true, true, true);

		/// <summary>
		/// :green_heart: 💚 green heart
		/// </summary>
		public static readonly EmojiInfo Emoji_green_heart = new EmojiInfo("green_heart", "1f49a.png", "green heart", "💚", true, true, true, true);

		/// <summary>
		/// :yellow_heart: 💛 yellow heart
		/// </summary>
		public static readonly EmojiInfo Emoji_yellow_heart = new EmojiInfo("yellow_heart", "1f49b.png", "yellow heart", "💛", true, true, true, true);

		/// <summary>
		/// :purple_heart: 💜 purple heart
		/// </summary>
		public static readonly EmojiInfo Emoji_purple_heart = new EmojiInfo("purple_heart", "1f49c.png", "purple heart", "💜", true, true, true, true);

		/// <summary>
		/// :gift_heart: 💝 heart with ribbon
		/// </summary>
		public static readonly EmojiInfo Emoji_gift_heart = new EmojiInfo("gift_heart", "1f49d.png", "heart with ribbon", "💝", true, true, true, true);

		/// <summary>
		/// :revolving_hearts: 💞 revolving hearts
		/// </summary>
		public static readonly EmojiInfo Emoji_revolving_hearts = new EmojiInfo("revolving_hearts", "1f49e.png", "revolving hearts", "💞", true, true, true, true);

		/// <summary>
		/// :heart_decoration: 💟 heart decoration
		/// </summary>
		public static readonly EmojiInfo Emoji_heart_decoration = new EmojiInfo("heart_decoration", "1f49f.png", "heart decoration", "💟", true, true, true, true);

		/// <summary>
		/// :diamond_shape_with_a_dot_inside: 💠 diamond shape with a dot inside
		/// </summary>
		public static readonly EmojiInfo Emoji_diamond_shape_with_a_dot_inside = new EmojiInfo("diamond_shape_with_a_dot_inside", "1f4a0.png", "diamond shape with a dot inside", "💠", true, true, true, true);

		/// <summary>
		/// :bulb: 💡 electric light bulb
		/// </summary>
		public static readonly EmojiInfo Emoji_bulb = new EmojiInfo("bulb", "1f4a1.png", "electric light bulb", "💡", true, true, true, true);

		/// <summary>
		/// :anger: 💢 anger symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_anger = new EmojiInfo("anger", "1f4a2.png", "anger symbol", "💢", true, true, true, true);

		/// <summary>
		/// :bomb: 💣 bomb
		/// </summary>
		public static readonly EmojiInfo Emoji_bomb = new EmojiInfo("bomb", "1f4a3.png", "bomb", "💣", true, true, true, true);

		/// <summary>
		/// :zzz: 💤 sleeping symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_zzz = new EmojiInfo("zzz", "1f4a4.png", "sleeping symbol", "💤", true, true, true, true);

		/// <summary>
		/// :boom: 💥 collision symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_boom = new EmojiInfo("boom", "1f4a5.png", "collision symbol", "💥", true, true, true, true);

		/// <summary>
		/// :sweat_drops: 💦 splashing sweat symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_sweat_drops = new EmojiInfo("sweat_drops", "1f4a6.png", "splashing sweat symbol", "💦", true, true, true, true);

		/// <summary>
		/// :droplet: 💧 droplet
		/// </summary>
		public static readonly EmojiInfo Emoji_droplet = new EmojiInfo("droplet", "1f4a7.png", "droplet", "💧", true, true, true, true);

		/// <summary>
		/// :dash: 💨 dash symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_dash = new EmojiInfo("dash", "1f4a8.png", "dash symbol", "💨", true, true, true, true);

		/// <summary>
		/// :hankey: 💩 pile of poo
		/// </summary>
		public static readonly EmojiInfo Emoji_hankey = new EmojiInfo("hankey", "1f4a9.png", "pile of poo", "💩", true, true, true, true);

		/// <summary>
		/// :muscle: 💪 flexed biceps
		/// </summary>
		public static readonly EmojiInfo Emoji_muscle = new EmojiInfo("muscle", "1f4aa.png", "flexed biceps", "💪", true, true, true, true);

		/// <summary>
		/// :dizzy: 💫 dizzy symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_dizzy = new EmojiInfo("dizzy", "1f4ab.png", "dizzy symbol", "💫", true, true, true, true);

		/// <summary>
		/// :speech_balloon: 💬 speech balloon
		/// </summary>
		public static readonly EmojiInfo Emoji_speech_balloon = new EmojiInfo("speech_balloon", "1f4ac.png", "speech balloon", "💬", true, true, true, true);

		/// <summary>
		/// :thought_balloon: 💭 thought balloon
		/// </summary>
		public static readonly EmojiInfo Emoji_thought_balloon = new EmojiInfo("thought_balloon", "1f4ad.png", "thought balloon", "💭", true, true, true, true);

		/// <summary>
		/// :white_flower: 💮 white flower
		/// </summary>
		public static readonly EmojiInfo Emoji_white_flower = new EmojiInfo("white_flower", "1f4ae.png", "white flower", "💮", true, true, true, true);

		/// <summary>
		/// :100: 💯 hundred points symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_100 = new EmojiInfo("100", "1f4af.png", "hundred points symbol", "💯", true, true, true, true);

		/// <summary>
		/// :moneybag: 💰 money bag
		/// </summary>
		public static readonly EmojiInfo Emoji_moneybag = new EmojiInfo("moneybag", "1f4b0.png", "money bag", "💰", true, true, true, true);

		/// <summary>
		/// :currency_exchange: 💱 currency exchange
		/// </summary>
		public static readonly EmojiInfo Emoji_currency_exchange = new EmojiInfo("currency_exchange", "1f4b1.png", "currency exchange", "💱", true, true, true, true);

		/// <summary>
		/// :heavy_dollar_sign: 💲 heavy dollar sign
		/// </summary>
		public static readonly EmojiInfo Emoji_heavy_dollar_sign = new EmojiInfo("heavy_dollar_sign", "1f4b2.png", "heavy dollar sign", "💲", true, true, true, true);

		/// <summary>
		/// :credit_card: 💳 credit card
		/// </summary>
		public static readonly EmojiInfo Emoji_credit_card = new EmojiInfo("credit_card", "1f4b3.png", "credit card", "💳", true, true, true, true);

		/// <summary>
		/// :yen: 💴 banknote with yen sign
		/// </summary>
		public static readonly EmojiInfo Emoji_yen = new EmojiInfo("yen", "1f4b4.png", "banknote with yen sign", "💴", true, true, true, true);

		/// <summary>
		/// :dollar: 💵 banknote with dollar sign
		/// </summary>
		public static readonly EmojiInfo Emoji_dollar = new EmojiInfo("dollar", "1f4b5.png", "banknote with dollar sign", "💵", true, true, true, true);

		/// <summary>
		/// :euro: 💶 banknote with euro sign
		/// </summary>
		public static readonly EmojiInfo Emoji_euro = new EmojiInfo("euro", "1f4b6.png", "banknote with euro sign", "💶", true, true, true, true);

		/// <summary>
		/// :pound: 💷 banknote with pound sign
		/// </summary>
		public static readonly EmojiInfo Emoji_pound = new EmojiInfo("pound", "1f4b7.png", "banknote with pound sign", "💷", true, true, true, true);

		/// <summary>
		/// :money_with_wings: 💸 money with wings
		/// </summary>
		public static readonly EmojiInfo Emoji_money_with_wings = new EmojiInfo("money_with_wings", "1f4b8.png", "money with wings", "💸", true, true, true, true);

		/// <summary>
		/// :chart: 💹 chart with upwards trend and yen sign
		/// </summary>
		public static readonly EmojiInfo Emoji_chart = new EmojiInfo("chart", "1f4b9.png", "chart with upwards trend and yen sign", "💹", true, true, true, true);

		/// <summary>
		/// :seat: 💺 seat
		/// </summary>
		public static readonly EmojiInfo Emoji_seat = new EmojiInfo("seat", "1f4ba.png", "seat", "💺", true, true, true, true);

		/// <summary>
		/// :computer: 💻 personal computer
		/// </summary>
		public static readonly EmojiInfo Emoji_computer = new EmojiInfo("computer", "1f4bb.png", "personal computer", "💻", true, true, true, true);

		/// <summary>
		/// :briefcase: 💼 briefcase
		/// </summary>
		public static readonly EmojiInfo Emoji_briefcase = new EmojiInfo("briefcase", "1f4bc.png", "briefcase", "💼", true, true, true, true);

		/// <summary>
		/// :minidisc: 💽 minidisc
		/// </summary>
		public static readonly EmojiInfo Emoji_minidisc = new EmojiInfo("minidisc", "1f4bd.png", "minidisc", "💽", true, true, true, true);

		/// <summary>
		/// :floppy_disk: 💾 floppy disk
		/// </summary>
		public static readonly EmojiInfo Emoji_floppy_disk = new EmojiInfo("floppy_disk", "1f4be.png", "floppy disk", "💾", true, true, true, true);

		/// <summary>
		/// :cd: 💿 optical disc
		/// </summary>
		public static readonly EmojiInfo Emoji_cd = new EmojiInfo("cd", "1f4bf.png", "optical disc", "💿", true, true, true, true);

		/// <summary>
		/// :dvd: 📀 dvd
		/// </summary>
		public static readonly EmojiInfo Emoji_dvd = new EmojiInfo("dvd", "1f4c0.png", "dvd", "📀", true, true, true, true);

		/// <summary>
		/// :file_folder: 📁 file folder
		/// </summary>
		public static readonly EmojiInfo Emoji_file_folder = new EmojiInfo("file_folder", "1f4c1.png", "file folder", "📁", true, true, true, true);

		/// <summary>
		/// :open_file_folder: 📂 open file folder
		/// </summary>
		public static readonly EmojiInfo Emoji_open_file_folder = new EmojiInfo("open_file_folder", "1f4c2.png", "open file folder", "📂", true, true, true, true);

		/// <summary>
		/// :page_with_curl: 📃 page with curl
		/// </summary>
		public static readonly EmojiInfo Emoji_page_with_curl = new EmojiInfo("page_with_curl", "1f4c3.png", "page with curl", "📃", true, true, true, true);

		/// <summary>
		/// :page_facing_up: 📄 page facing up
		/// </summary>
		public static readonly EmojiInfo Emoji_page_facing_up = new EmojiInfo("page_facing_up", "1f4c4.png", "page facing up", "📄", true, true, true, true);

		/// <summary>
		/// :date: 📅 calendar
		/// </summary>
		public static readonly EmojiInfo Emoji_date = new EmojiInfo("date", "1f4c5.png", "calendar", "📅", true, true, true, true);

		/// <summary>
		/// :calendar: 📆 tear-off calendar
		/// </summary>
		public static readonly EmojiInfo Emoji_calendar = new EmojiInfo("calendar", "1f4c6.png", "tear-off calendar", "📆", true, true, true, true);

		/// <summary>
		/// :card_index: 📇 card index
		/// </summary>
		public static readonly EmojiInfo Emoji_card_index = new EmojiInfo("card_index", "1f4c7.png", "card index", "📇", true, true, true, true);

		/// <summary>
		/// :chart_with_upwards_trend: 📈 chart with upwards trend
		/// </summary>
		public static readonly EmojiInfo Emoji_chart_with_upwards_trend = new EmojiInfo("chart_with_upwards_trend", "1f4c8.png", "chart with upwards trend", "📈", true, true, true, true);

		/// <summary>
		/// :chart_with_downwards_trend: 📉 chart with downwards trend
		/// </summary>
		public static readonly EmojiInfo Emoji_chart_with_downwards_trend = new EmojiInfo("chart_with_downwards_trend", "1f4c9.png", "chart with downwards trend", "📉", true, true, true, true);

		/// <summary>
		/// :bar_chart: 📊 bar chart
		/// </summary>
		public static readonly EmojiInfo Emoji_bar_chart = new EmojiInfo("bar_chart", "1f4ca.png", "bar chart", "📊", true, true, true, true);

		/// <summary>
		/// :clipboard: 📋 clipboard
		/// </summary>
		public static readonly EmojiInfo Emoji_clipboard = new EmojiInfo("clipboard", "1f4cb.png", "clipboard", "📋", true, true, true, true);

		/// <summary>
		/// :pushpin: 📌 pushpin
		/// </summary>
		public static readonly EmojiInfo Emoji_pushpin = new EmojiInfo("pushpin", "1f4cc.png", "pushpin", "📌", true, true, true, true);

		/// <summary>
		/// :round_pushpin: 📍 round pushpin
		/// </summary>
		public static readonly EmojiInfo Emoji_round_pushpin = new EmojiInfo("round_pushpin", "1f4cd.png", "round pushpin", "📍", true, true, true, true);

		/// <summary>
		/// :paperclip: 📎 paperclip
		/// </summary>
		public static readonly EmojiInfo Emoji_paperclip = new EmojiInfo("paperclip", "1f4ce.png", "paperclip", "📎", true, true, true, true);

		/// <summary>
		/// :straight_ruler: 📏 straight ruler
		/// </summary>
		public static readonly EmojiInfo Emoji_straight_ruler = new EmojiInfo("straight_ruler", "1f4cf.png", "straight ruler", "📏", true, true, true, true);

		/// <summary>
		/// :triangular_ruler: 📐 triangular ruler
		/// </summary>
		public static readonly EmojiInfo Emoji_triangular_ruler = new EmojiInfo("triangular_ruler", "1f4d0.png", "triangular ruler", "📐", true, true, true, true);

		/// <summary>
		/// :bookmark_tabs: 📑 bookmark tabs
		/// </summary>
		public static readonly EmojiInfo Emoji_bookmark_tabs = new EmojiInfo("bookmark_tabs", "1f4d1.png", "bookmark tabs", "📑", true, true, true, true);

		/// <summary>
		/// :ledger: 📒 ledger
		/// </summary>
		public static readonly EmojiInfo Emoji_ledger = new EmojiInfo("ledger", "1f4d2.png", "ledger", "📒", true, true, true, true);

		/// <summary>
		/// :notebook: 📓 notebook
		/// </summary>
		public static readonly EmojiInfo Emoji_notebook = new EmojiInfo("notebook", "1f4d3.png", "notebook", "📓", true, true, true, true);

		/// <summary>
		/// :notebook_with_decorative_cover: 📔 notebook with decorative cover
		/// </summary>
		public static readonly EmojiInfo Emoji_notebook_with_decorative_cover = new EmojiInfo("notebook_with_decorative_cover", "1f4d4.png", "notebook with decorative cover", "📔", true, true, true, true);

		/// <summary>
		/// :closed_book: 📕 closed book
		/// </summary>
		public static readonly EmojiInfo Emoji_closed_book = new EmojiInfo("closed_book", "1f4d5.png", "closed book", "📕", true, true, true, true);

		/// <summary>
		/// :book: 📖 open book
		/// </summary>
		public static readonly EmojiInfo Emoji_book = new EmojiInfo("book", "1f4d6.png", "open book", "📖", true, true, true, true);

		/// <summary>
		/// :green_book: 📗 green book
		/// </summary>
		public static readonly EmojiInfo Emoji_green_book = new EmojiInfo("green_book", "1f4d7.png", "green book", "📗", true, true, true, true);

		/// <summary>
		/// :blue_book: 📘 blue book
		/// </summary>
		public static readonly EmojiInfo Emoji_blue_book = new EmojiInfo("blue_book", "1f4d8.png", "blue book", "📘", true, true, true, true);

		/// <summary>
		/// :orange_book: 📙 orange book
		/// </summary>
		public static readonly EmojiInfo Emoji_orange_book = new EmojiInfo("orange_book", "1f4d9.png", "orange book", "📙", true, true, true, true);

		/// <summary>
		/// :books: 📚 books
		/// </summary>
		public static readonly EmojiInfo Emoji_books = new EmojiInfo("books", "1f4da.png", "books", "📚", true, true, true, true);

		/// <summary>
		/// :name_badge: 📛 name badge
		/// </summary>
		public static readonly EmojiInfo Emoji_name_badge = new EmojiInfo("name_badge", "1f4db.png", "name badge", "📛", true, true, true, true);

		/// <summary>
		/// :scroll: 📜 scroll
		/// </summary>
		public static readonly EmojiInfo Emoji_scroll = new EmojiInfo("scroll", "1f4dc.png", "scroll", "📜", true, true, true, true);

		/// <summary>
		/// :memo: 📝 memo
		/// </summary>
		public static readonly EmojiInfo Emoji_memo = new EmojiInfo("memo", "1f4dd.png", "memo", "📝", true, true, true, true);

		/// <summary>
		/// :telephone_receiver: 📞 telephone receiver
		/// </summary>
		public static readonly EmojiInfo Emoji_telephone_receiver = new EmojiInfo("telephone_receiver", "1f4de.png", "telephone receiver", "📞", true, true, true, true);

		/// <summary>
		/// :pager: 📟 pager
		/// </summary>
		public static readonly EmojiInfo Emoji_pager = new EmojiInfo("pager", "1f4df.png", "pager", "📟", true, true, true, true);

		/// <summary>
		/// :fax: 📠 fax machine
		/// </summary>
		public static readonly EmojiInfo Emoji_fax = new EmojiInfo("fax", "1f4e0.png", "fax machine", "📠", true, true, true, true);

		/// <summary>
		/// :satellite: 📡 satellite antenna
		/// </summary>
		public static readonly EmojiInfo Emoji_satellite = new EmojiInfo("satellite", "1f4e1.png", "satellite antenna", "📡", true, true, true, true);

		/// <summary>
		/// :loudspeaker: 📢 public address loudspeaker
		/// </summary>
		public static readonly EmojiInfo Emoji_loudspeaker = new EmojiInfo("loudspeaker", "1f4e2.png", "public address loudspeaker", "📢", true, true, true, true);

		/// <summary>
		/// :mega: 📣 cheering megaphone
		/// </summary>
		public static readonly EmojiInfo Emoji_mega = new EmojiInfo("mega", "1f4e3.png", "cheering megaphone", "📣", true, true, true, true);

		/// <summary>
		/// :outbox_tray: 📤 outbox tray
		/// </summary>
		public static readonly EmojiInfo Emoji_outbox_tray = new EmojiInfo("outbox_tray", "1f4e4.png", "outbox tray", "📤", true, true, true, true);

		/// <summary>
		/// :inbox_tray: 📥 inbox tray
		/// </summary>
		public static readonly EmojiInfo Emoji_inbox_tray = new EmojiInfo("inbox_tray", "1f4e5.png", "inbox tray", "📥", true, true, true, true);

		/// <summary>
		/// :package: 📦 package
		/// </summary>
		public static readonly EmojiInfo Emoji_package = new EmojiInfo("package", "1f4e6.png", "package", "📦", true, true, true, true);

		/// <summary>
		/// :e-mail: 📧 e-mail symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_e_mail = new EmojiInfo("e-mail", "1f4e7.png", "e-mail symbol", "📧", true, true, true, true);

		/// <summary>
		/// :incoming_envelope: 📨 incoming envelope
		/// </summary>
		public static readonly EmojiInfo Emoji_incoming_envelope = new EmojiInfo("incoming_envelope", "1f4e8.png", "incoming envelope", "📨", true, true, true, true);

		/// <summary>
		/// :envelope_with_arrow: 📩 envelope with downwards arrow above
		/// </summary>
		public static readonly EmojiInfo Emoji_envelope_with_arrow = new EmojiInfo("envelope_with_arrow", "1f4e9.png", "envelope with downwards arrow above", "📩", true, true, true, true);

		/// <summary>
		/// :mailbox_closed: 📪 closed mailbox with lowered flag
		/// </summary>
		public static readonly EmojiInfo Emoji_mailbox_closed = new EmojiInfo("mailbox_closed", "1f4ea.png", "closed mailbox with lowered flag", "📪", true, true, true, true);

		/// <summary>
		/// :mailbox: 📫 closed mailbox with raised flag
		/// </summary>
		public static readonly EmojiInfo Emoji_mailbox = new EmojiInfo("mailbox", "1f4eb.png", "closed mailbox with raised flag", "📫", true, true, true, true);

		/// <summary>
		/// :mailbox_with_mail: 📬 open mailbox with raised flag
		/// </summary>
		public static readonly EmojiInfo Emoji_mailbox_with_mail = new EmojiInfo("mailbox_with_mail", "1f4ec.png", "open mailbox with raised flag", "📬", true, true, true, true);

		/// <summary>
		/// :mailbox_with_no_mail: 📭 open mailbox with lowered flag
		/// </summary>
		public static readonly EmojiInfo Emoji_mailbox_with_no_mail = new EmojiInfo("mailbox_with_no_mail", "1f4ed.png", "open mailbox with lowered flag", "📭", true, true, true, true);

		/// <summary>
		/// :postbox: 📮 postbox
		/// </summary>
		public static readonly EmojiInfo Emoji_postbox = new EmojiInfo("postbox", "1f4ee.png", "postbox", "📮", true, true, true, true);

		/// <summary>
		/// :postal_horn: 📯 postal horn
		/// </summary>
		public static readonly EmojiInfo Emoji_postal_horn = new EmojiInfo("postal_horn", "1f4ef.png", "postal horn", "📯", true, true, true, true);

		/// <summary>
		/// :newspaper: 📰 newspaper
		/// </summary>
		public static readonly EmojiInfo Emoji_newspaper = new EmojiInfo("newspaper", "1f4f0.png", "newspaper", "📰", true, true, true, true);

		/// <summary>
		/// :iphone: 📱 mobile phone
		/// </summary>
		public static readonly EmojiInfo Emoji_iphone = new EmojiInfo("iphone", "1f4f1.png", "mobile phone", "📱", true, true, true, true);

		/// <summary>
		/// :calling: 📲 mobile phone with rightwards arrow at left
		/// </summary>
		public static readonly EmojiInfo Emoji_calling = new EmojiInfo("calling", "1f4f2.png", "mobile phone with rightwards arrow at left", "📲", true, true, true, true);

		/// <summary>
		/// :vibration_mode: 📳 vibration mode
		/// </summary>
		public static readonly EmojiInfo Emoji_vibration_mode = new EmojiInfo("vibration_mode", "1f4f3.png", "vibration mode", "📳", true, true, true, true);

		/// <summary>
		/// :mobile_phone_off: 📴 mobile phone off
		/// </summary>
		public static readonly EmojiInfo Emoji_mobile_phone_off = new EmojiInfo("mobile_phone_off", "1f4f4.png", "mobile phone off", "📴", true, true, true, true);

		/// <summary>
		/// :no_mobile_phones: 📵 no mobile phones
		/// </summary>
		public static readonly EmojiInfo Emoji_no_mobile_phones = new EmojiInfo("no_mobile_phones", "1f4f5.png", "no mobile phones", "📵", true, true, true, true);

		/// <summary>
		/// :signal_strength: 📶 antenna with bars
		/// </summary>
		public static readonly EmojiInfo Emoji_signal_strength = new EmojiInfo("signal_strength", "1f4f6.png", "antenna with bars", "📶", true, true, true, true);

		/// <summary>
		/// :camera: 📷 camera
		/// </summary>
		public static readonly EmojiInfo Emoji_camera = new EmojiInfo("camera", "1f4f7.png", "camera", "📷", true, true, true, true);

		/// <summary>
		/// :camera_with_flash: 📸 camera with flash
		/// </summary>
		public static readonly EmojiInfo Emoji_camera_with_flash = new EmojiInfo("camera_with_flash", "1f4f8.png", "camera with flash", "📸", true, true, true, true);

		/// <summary>
		/// :video_camera: 📹 video camera
		/// </summary>
		public static readonly EmojiInfo Emoji_video_camera = new EmojiInfo("video_camera", "1f4f9.png", "video camera", "📹", true, true, true, true);

		/// <summary>
		/// :tv: 📺 television
		/// </summary>
		public static readonly EmojiInfo Emoji_tv = new EmojiInfo("tv", "1f4fa.png", "television", "📺", true, true, true, true);

		/// <summary>
		/// :radio: 📻 radio
		/// </summary>
		public static readonly EmojiInfo Emoji_radio = new EmojiInfo("radio", "1f4fb.png", "radio", "📻", true, true, true, true);

		/// <summary>
		/// :vhs: 📼 videocassette
		/// </summary>
		public static readonly EmojiInfo Emoji_vhs = new EmojiInfo("vhs", "1f4fc.png", "videocassette", "📼", true, true, true, true);

		/// <summary>
		/// :film_projector: 📽 film projector
		/// </summary>
		public static readonly EmojiInfo Emoji_film_projector = new EmojiInfo("film_projector", "1f4fd.png", "film projector", "📽", true, true, true, true);

		/// <summary>
		/// :prayer_beads: 📿 prayer beads
		/// </summary>
		public static readonly EmojiInfo Emoji_prayer_beads = new EmojiInfo("prayer_beads", "1f4ff.png", "prayer beads", "📿", true, true, true, false);

		/// <summary>
		/// :twisted_rightwards_arrows: 🔀 twisted rightwards arrows
		/// </summary>
		public static readonly EmojiInfo Emoji_twisted_rightwards_arrows = new EmojiInfo("twisted_rightwards_arrows", "1f500.png", "twisted rightwards arrows", "🔀", true, true, true, true);

		/// <summary>
		/// :repeat: 🔁 clockwise rightwards and leftwards open circle arrows
		/// </summary>
		public static readonly EmojiInfo Emoji_repeat = new EmojiInfo("repeat", "1f501.png", "clockwise rightwards and leftwards open circle arrows", "🔁", true, true, true, true);

		/// <summary>
		/// :repeat_one: 🔂 clockwise rightwards and leftwards open circle arrows with circled one overlay
		/// </summary>
		public static readonly EmojiInfo Emoji_repeat_one = new EmojiInfo("repeat_one", "1f502.png", "clockwise rightwards and leftwards open circle arrows with circled one overlay", "🔂", true, true, true, true);

		/// <summary>
		/// :arrows_clockwise: 🔃 clockwise downwards and upwards open circle arrows
		/// </summary>
		public static readonly EmojiInfo Emoji_arrows_clockwise = new EmojiInfo("arrows_clockwise", "1f503.png", "clockwise downwards and upwards open circle arrows", "🔃", true, true, true, true);

		/// <summary>
		/// :arrows_counterclockwise: 🔄 anticlockwise downwards and upwards open circle arrows
		/// </summary>
		public static readonly EmojiInfo Emoji_arrows_counterclockwise = new EmojiInfo("arrows_counterclockwise", "1f504.png", "anticlockwise downwards and upwards open circle arrows", "🔄", true, true, true, true);

		/// <summary>
		/// :low_brightness: 🔅 low brightness symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_low_brightness = new EmojiInfo("low_brightness", "1f505.png", "low brightness symbol", "🔅", true, true, true, true);

		/// <summary>
		/// :high_brightness: 🔆 high brightness symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_high_brightness = new EmojiInfo("high_brightness", "1f506.png", "high brightness symbol", "🔆", true, true, true, true);

		/// <summary>
		/// :mute: 🔇 speaker with cancellation stroke
		/// </summary>
		public static readonly EmojiInfo Emoji_mute = new EmojiInfo("mute", "1f507.png", "speaker with cancellation stroke", "🔇", true, true, true, true);

		/// <summary>
		/// :speaker: 🔈 speaker
		/// </summary>
		public static readonly EmojiInfo Emoji_speaker = new EmojiInfo("speaker", "1f508.png", "speaker", "🔈", true, true, true, true);

		/// <summary>
		/// :sound: 🔉 speaker with one sound wave
		/// </summary>
		public static readonly EmojiInfo Emoji_sound = new EmojiInfo("sound", "1f509.png", "speaker with one sound wave", "🔉", true, true, true, true);

		/// <summary>
		/// :loud_sound: 🔊 speaker with three sound waves
		/// </summary>
		public static readonly EmojiInfo Emoji_loud_sound = new EmojiInfo("loud_sound", "1f50a.png", "speaker with three sound waves", "🔊", true, true, true, true);

		/// <summary>
		/// :battery: 🔋 battery
		/// </summary>
		public static readonly EmojiInfo Emoji_battery = new EmojiInfo("battery", "1f50b.png", "battery", "🔋", true, true, true, true);

		/// <summary>
		/// :electric_plug: 🔌 electric plug
		/// </summary>
		public static readonly EmojiInfo Emoji_electric_plug = new EmojiInfo("electric_plug", "1f50c.png", "electric plug", "🔌", true, true, true, true);

		/// <summary>
		/// :mag: 🔍 left-pointing magnifying glass
		/// </summary>
		public static readonly EmojiInfo Emoji_mag = new EmojiInfo("mag", "1f50d.png", "left-pointing magnifying glass", "🔍", true, true, true, true);

		/// <summary>
		/// :mag_right: 🔎 right-pointing magnifying glass
		/// </summary>
		public static readonly EmojiInfo Emoji_mag_right = new EmojiInfo("mag_right", "1f50e.png", "right-pointing magnifying glass", "🔎", true, true, true, true);

		/// <summary>
		/// :lock_with_ink_pen: 🔏 lock with ink pen
		/// </summary>
		public static readonly EmojiInfo Emoji_lock_with_ink_pen = new EmojiInfo("lock_with_ink_pen", "1f50f.png", "lock with ink pen", "🔏", true, true, true, true);

		/// <summary>
		/// :closed_lock_with_key: 🔐 closed lock with key
		/// </summary>
		public static readonly EmojiInfo Emoji_closed_lock_with_key = new EmojiInfo("closed_lock_with_key", "1f510.png", "closed lock with key", "🔐", true, true, true, true);

		/// <summary>
		/// :key: 🔑 key
		/// </summary>
		public static readonly EmojiInfo Emoji_key = new EmojiInfo("key", "1f511.png", "key", "🔑", true, true, true, true);

		/// <summary>
		/// :lock: 🔒 lock
		/// </summary>
		public static readonly EmojiInfo Emoji_lock = new EmojiInfo("lock", "1f512.png", "lock", "🔒", true, true, true, true);

		/// <summary>
		/// :unlock: 🔓 open lock
		/// </summary>
		public static readonly EmojiInfo Emoji_unlock = new EmojiInfo("unlock", "1f513.png", "open lock", "🔓", true, true, true, true);

		/// <summary>
		/// :bell: 🔔 bell
		/// </summary>
		public static readonly EmojiInfo Emoji_bell = new EmojiInfo("bell", "1f514.png", "bell", "🔔", true, true, true, true);

		/// <summary>
		/// :no_bell: 🔕 bell with cancellation stroke
		/// </summary>
		public static readonly EmojiInfo Emoji_no_bell = new EmojiInfo("no_bell", "1f515.png", "bell with cancellation stroke", "🔕", true, true, true, true);

		/// <summary>
		/// :bookmark: 🔖 bookmark
		/// </summary>
		public static readonly EmojiInfo Emoji_bookmark = new EmojiInfo("bookmark", "1f516.png", "bookmark", "🔖", true, true, true, true);

		/// <summary>
		/// :link: 🔗 link symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_link = new EmojiInfo("link", "1f517.png", "link symbol", "🔗", true, true, true, true);

		/// <summary>
		/// :radio_button: 🔘 radio button
		/// </summary>
		public static readonly EmojiInfo Emoji_radio_button = new EmojiInfo("radio_button", "1f518.png", "radio button", "🔘", true, true, true, true);

		/// <summary>
		/// :back: 🔙 back with leftwards arrow above
		/// </summary>
		public static readonly EmojiInfo Emoji_back = new EmojiInfo("back", "1f519.png", "back with leftwards arrow above", "🔙", true, true, true, true);

		/// <summary>
		/// :end: 🔚 end with leftwards arrow above
		/// </summary>
		public static readonly EmojiInfo Emoji_end = new EmojiInfo("end", "1f51a.png", "end with leftwards arrow above", "🔚", true, true, true, true);

		/// <summary>
		/// :on: 🔛 on with exclamation mark with left right arrow above
		/// </summary>
		public static readonly EmojiInfo Emoji_on = new EmojiInfo("on", "1f51b.png", "on with exclamation mark with left right arrow above", "🔛", true, true, true, true);

		/// <summary>
		/// :soon: 🔜 soon with rightwards arrow above
		/// </summary>
		public static readonly EmojiInfo Emoji_soon = new EmojiInfo("soon", "1f51c.png", "soon with rightwards arrow above", "🔜", true, true, true, true);

		/// <summary>
		/// :top: 🔝 top with upwards arrow above
		/// </summary>
		public static readonly EmojiInfo Emoji_top = new EmojiInfo("top", "1f51d.png", "top with upwards arrow above", "🔝", true, true, true, true);

		/// <summary>
		/// :underage: 🔞 no one under eighteen symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_underage = new EmojiInfo("underage", "1f51e.png", "no one under eighteen symbol", "🔞", true, true, true, true);

		/// <summary>
		/// :keycap_ten: 🔟 keycap ten
		/// </summary>
		public static readonly EmojiInfo Emoji_keycap_ten = new EmojiInfo("keycap_ten", "1f51f.png", "keycap ten", "🔟", true, true, true, true);

		/// <summary>
		/// :capital_abcd: 🔠 input symbol for latin capital letters
		/// </summary>
		public static readonly EmojiInfo Emoji_capital_abcd = new EmojiInfo("capital_abcd", "1f520.png", "input symbol for latin capital letters", "🔠", true, true, true, true);

		/// <summary>
		/// :abcd: 🔡 input symbol for latin small letters
		/// </summary>
		public static readonly EmojiInfo Emoji_abcd = new EmojiInfo("abcd", "1f521.png", "input symbol for latin small letters", "🔡", true, true, true, true);

		/// <summary>
		/// :1234: 🔢 input symbol for numbers
		/// </summary>
		public static readonly EmojiInfo Emoji_1234 = new EmojiInfo("1234", "1f522.png", "input symbol for numbers", "🔢", true, true, true, true);

		/// <summary>
		/// :symbols: 🔣 input symbol for symbols
		/// </summary>
		public static readonly EmojiInfo Emoji_symbols = new EmojiInfo("symbols", "1f523.png", "input symbol for symbols", "🔣", true, true, true, true);

		/// <summary>
		/// :abc: 🔤 input symbol for latin letters
		/// </summary>
		public static readonly EmojiInfo Emoji_abc = new EmojiInfo("abc", "1f524.png", "input symbol for latin letters", "🔤", true, true, true, true);

		/// <summary>
		/// :fire: 🔥 fire
		/// </summary>
		public static readonly EmojiInfo Emoji_fire = new EmojiInfo("fire", "1f525.png", "fire", "🔥", true, true, true, true);

		/// <summary>
		/// :flashlight: 🔦 electric torch
		/// </summary>
		public static readonly EmojiInfo Emoji_flashlight = new EmojiInfo("flashlight", "1f526.png", "electric torch", "🔦", true, true, true, true);

		/// <summary>
		/// :wrench: 🔧 wrench
		/// </summary>
		public static readonly EmojiInfo Emoji_wrench = new EmojiInfo("wrench", "1f527.png", "wrench", "🔧", true, true, true, true);

		/// <summary>
		/// :hammer: 🔨 hammer
		/// </summary>
		public static readonly EmojiInfo Emoji_hammer = new EmojiInfo("hammer", "1f528.png", "hammer", "🔨", true, true, true, true);

		/// <summary>
		/// :nut_and_bolt: 🔩 nut and bolt
		/// </summary>
		public static readonly EmojiInfo Emoji_nut_and_bolt = new EmojiInfo("nut_and_bolt", "1f529.png", "nut and bolt", "🔩", true, true, true, true);

		/// <summary>
		/// :hocho: 🔪 hocho
		/// </summary>
		public static readonly EmojiInfo Emoji_hocho = new EmojiInfo("hocho", "1f52a.png", "hocho", "🔪", true, true, true, true);

		/// <summary>
		/// :gun: 🔫 pistol
		/// </summary>
		public static readonly EmojiInfo Emoji_gun = new EmojiInfo("gun", "1f52b.png", "pistol", "🔫", true, true, true, true);

		/// <summary>
		/// :microscope: 🔬 microscope
		/// </summary>
		public static readonly EmojiInfo Emoji_microscope = new EmojiInfo("microscope", "1f52c.png", "microscope", "🔬", true, true, true, true);

		/// <summary>
		/// :telescope: 🔭 telescope
		/// </summary>
		public static readonly EmojiInfo Emoji_telescope = new EmojiInfo("telescope", "1f52d.png", "telescope", "🔭", true, true, true, true);

		/// <summary>
		/// :crystal_ball: 🔮 crystal ball
		/// </summary>
		public static readonly EmojiInfo Emoji_crystal_ball = new EmojiInfo("crystal_ball", "1f52e.png", "crystal ball", "🔮", true, true, true, true);

		/// <summary>
		/// :six_pointed_star: 🔯 six pointed star with middle dot
		/// </summary>
		public static readonly EmojiInfo Emoji_six_pointed_star = new EmojiInfo("six_pointed_star", "1f52f.png", "six pointed star with middle dot", "🔯", true, true, true, true);

		/// <summary>
		/// :beginner: 🔰 japanese symbol for beginner
		/// </summary>
		public static readonly EmojiInfo Emoji_beginner = new EmojiInfo("beginner", "1f530.png", "japanese symbol for beginner", "🔰", true, true, true, true);

		/// <summary>
		/// :trident: 🔱 trident emblem
		/// </summary>
		public static readonly EmojiInfo Emoji_trident = new EmojiInfo("trident", "1f531.png", "trident emblem", "🔱", true, true, true, true);

		/// <summary>
		/// :black_square_button: 🔲 black square button
		/// </summary>
		public static readonly EmojiInfo Emoji_black_square_button = new EmojiInfo("black_square_button", "1f532.png", "black square button", "🔲", true, true, true, true);

		/// <summary>
		/// :white_square_button: 🔳 white square button
		/// </summary>
		public static readonly EmojiInfo Emoji_white_square_button = new EmojiInfo("white_square_button", "1f533.png", "white square button", "🔳", true, true, true, true);

		/// <summary>
		/// :red_circle: 🔴 large red circle
		/// </summary>
		public static readonly EmojiInfo Emoji_red_circle = new EmojiInfo("red_circle", "1f534.png", "large red circle", "🔴", true, true, true, true);

		/// <summary>
		/// :large_blue_circle: 🔵 large blue circle
		/// </summary>
		public static readonly EmojiInfo Emoji_large_blue_circle = new EmojiInfo("large_blue_circle", "1f535.png", "large blue circle", "🔵", true, true, true, true);

		/// <summary>
		/// :large_orange_diamond: 🔶 large orange diamond
		/// </summary>
		public static readonly EmojiInfo Emoji_large_orange_diamond = new EmojiInfo("large_orange_diamond", "1f536.png", "large orange diamond", "🔶", true, true, true, true);

		/// <summary>
		/// :large_blue_diamond: 🔷 large blue diamond
		/// </summary>
		public static readonly EmojiInfo Emoji_large_blue_diamond = new EmojiInfo("large_blue_diamond", "1f537.png", "large blue diamond", "🔷", true, true, true, true);

		/// <summary>
		/// :small_orange_diamond: 🔸 small orange diamond
		/// </summary>
		public static readonly EmojiInfo Emoji_small_orange_diamond = new EmojiInfo("small_orange_diamond", "1f538.png", "small orange diamond", "🔸", true, true, true, true);

		/// <summary>
		/// :small_blue_diamond: 🔹 small blue diamond
		/// </summary>
		public static readonly EmojiInfo Emoji_small_blue_diamond = new EmojiInfo("small_blue_diamond", "1f539.png", "small blue diamond", "🔹", true, true, true, true);

		/// <summary>
		/// :small_red_triangle: 🔺 up-pointing red triangle
		/// </summary>
		public static readonly EmojiInfo Emoji_small_red_triangle = new EmojiInfo("small_red_triangle", "1f53a.png", "up-pointing red triangle", "🔺", true, true, true, true);

		/// <summary>
		/// :small_red_triangle_down: 🔻 down-pointing red triangle
		/// </summary>
		public static readonly EmojiInfo Emoji_small_red_triangle_down = new EmojiInfo("small_red_triangle_down", "1f53b.png", "down-pointing red triangle", "🔻", true, true, true, true);

		/// <summary>
		/// :arrow_up_small: 🔼 up-pointing small red triangle
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_up_small = new EmojiInfo("arrow_up_small", "1f53c.png", "up-pointing small red triangle", "🔼", true, true, true, true);

		/// <summary>
		/// :arrow_down_small: 🔽 down-pointing small red triangle
		/// </summary>
		public static readonly EmojiInfo Emoji_arrow_down_small = new EmojiInfo("arrow_down_small", "1f53d.png", "down-pointing small red triangle", "🔽", true, true, true, true);

		/// <summary>
		/// :om_symbol: 🕉 om symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_om_symbol = new EmojiInfo("om_symbol", "1f549.png", "om symbol", "🕉", true, true, true, true);

		/// <summary>
		/// :dove_of_peace: 🕊 dove of peace
		/// </summary>
		public static readonly EmojiInfo Emoji_dove_of_peace = new EmojiInfo("dove_of_peace", "1f54a.png", "dove of peace", "🕊", true, true, true, true);

		/// <summary>
		/// :kaaba: 🕋 kaaba
		/// </summary>
		public static readonly EmojiInfo Emoji_kaaba = new EmojiInfo("kaaba", "1f54b.png", "kaaba", "🕋", true, true, true, false);

		/// <summary>
		/// :mosque: 🕌 mosque
		/// </summary>
		public static readonly EmojiInfo Emoji_mosque = new EmojiInfo("mosque", "1f54c.png", "mosque", "🕌", true, true, true, false);

		/// <summary>
		/// :synagogue: 🕍 synagogue
		/// </summary>
		public static readonly EmojiInfo Emoji_synagogue = new EmojiInfo("synagogue", "1f54d.png", "synagogue", "🕍", true, true, true, false);

		/// <summary>
		/// :menorah_with_nine_branches: 🕎 menorah with nine branches
		/// </summary>
		public static readonly EmojiInfo Emoji_menorah_with_nine_branches = new EmojiInfo("menorah_with_nine_branches", "1f54e.png", "menorah with nine branches", "🕎", true, true, true, false);

		/// <summary>
		/// :clock1: 🕐 clock face one oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock1 = new EmojiInfo("clock1", "1f550.png", "clock face one oclock", "🕐", true, true, true, true);

		/// <summary>
		/// :clock2: 🕑 clock face two oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock2 = new EmojiInfo("clock2", "1f551.png", "clock face two oclock", "🕑", true, true, true, true);

		/// <summary>
		/// :clock3: 🕒 clock face three oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock3 = new EmojiInfo("clock3", "1f552.png", "clock face three oclock", "🕒", true, true, true, true);

		/// <summary>
		/// :clock4: 🕓 clock face four oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock4 = new EmojiInfo("clock4", "1f553.png", "clock face four oclock", "🕓", true, true, true, true);

		/// <summary>
		/// :clock5: 🕔 clock face five oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock5 = new EmojiInfo("clock5", "1f554.png", "clock face five oclock", "🕔", true, true, true, true);

		/// <summary>
		/// :clock6: 🕕 clock face six oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock6 = new EmojiInfo("clock6", "1f555.png", "clock face six oclock", "🕕", true, true, true, true);

		/// <summary>
		/// :clock7: 🕖 clock face seven oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock7 = new EmojiInfo("clock7", "1f556.png", "clock face seven oclock", "🕖", true, true, true, true);

		/// <summary>
		/// :clock8: 🕗 clock face eight oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock8 = new EmojiInfo("clock8", "1f557.png", "clock face eight oclock", "🕗", true, true, true, true);

		/// <summary>
		/// :clock9: 🕘 clock face nine oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock9 = new EmojiInfo("clock9", "1f558.png", "clock face nine oclock", "🕘", true, true, true, true);

		/// <summary>
		/// :clock10: 🕙 clock face ten oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock10 = new EmojiInfo("clock10", "1f559.png", "clock face ten oclock", "🕙", true, true, true, true);

		/// <summary>
		/// :clock11: 🕚 clock face eleven oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock11 = new EmojiInfo("clock11", "1f55a.png", "clock face eleven oclock", "🕚", true, true, true, true);

		/// <summary>
		/// :clock12: 🕛 clock face twelve oclock
		/// </summary>
		public static readonly EmojiInfo Emoji_clock12 = new EmojiInfo("clock12", "1f55b.png", "clock face twelve oclock", "🕛", true, true, true, true);

		/// <summary>
		/// :clock130: 🕜 clock face one-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock130 = new EmojiInfo("clock130", "1f55c.png", "clock face one-thirty", "🕜", true, true, true, true);

		/// <summary>
		/// :clock230: 🕝 clock face two-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock230 = new EmojiInfo("clock230", "1f55d.png", "clock face two-thirty", "🕝", true, true, true, true);

		/// <summary>
		/// :clock330: 🕞 clock face three-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock330 = new EmojiInfo("clock330", "1f55e.png", "clock face three-thirty", "🕞", true, true, true, true);

		/// <summary>
		/// :clock430: 🕟 clock face four-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock430 = new EmojiInfo("clock430", "1f55f.png", "clock face four-thirty", "🕟", true, true, true, true);

		/// <summary>
		/// :clock530: 🕠 clock face five-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock530 = new EmojiInfo("clock530", "1f560.png", "clock face five-thirty", "🕠", true, true, true, true);

		/// <summary>
		/// :clock630: 🕡 clock face six-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock630 = new EmojiInfo("clock630", "1f561.png", "clock face six-thirty", "🕡", true, true, true, true);

		/// <summary>
		/// :clock730: 🕢 clock face seven-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock730 = new EmojiInfo("clock730", "1f562.png", "clock face seven-thirty", "🕢", true, true, true, true);

		/// <summary>
		/// :clock830: 🕣 clock face eight-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock830 = new EmojiInfo("clock830", "1f563.png", "clock face eight-thirty", "🕣", true, true, true, true);

		/// <summary>
		/// :clock930: 🕤 clock face nine-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock930 = new EmojiInfo("clock930", "1f564.png", "clock face nine-thirty", "🕤", true, true, true, true);

		/// <summary>
		/// :clock1030: 🕥 clock face ten-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock1030 = new EmojiInfo("clock1030", "1f565.png", "clock face ten-thirty", "🕥", true, true, true, true);

		/// <summary>
		/// :clock1130: 🕦 clock face eleven-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock1130 = new EmojiInfo("clock1130", "1f566.png", "clock face eleven-thirty", "🕦", true, true, true, true);

		/// <summary>
		/// :clock1230: 🕧 clock face twelve-thirty
		/// </summary>
		public static readonly EmojiInfo Emoji_clock1230 = new EmojiInfo("clock1230", "1f567.png", "clock face twelve-thirty", "🕧", true, true, true, true);

		/// <summary>
		/// :candle: 🕯 candle
		/// </summary>
		public static readonly EmojiInfo Emoji_candle = new EmojiInfo("candle", "1f56f.png", "candle", "🕯", true, true, true, true);

		/// <summary>
		/// :mantelpiece_clock: 🕰 mantelpiece clock
		/// </summary>
		public static readonly EmojiInfo Emoji_mantelpiece_clock = new EmojiInfo("mantelpiece_clock", "1f570.png", "mantelpiece clock", "🕰", true, true, true, true);

		/// <summary>
		/// :hole: 🕳 hole
		/// </summary>
		public static readonly EmojiInfo Emoji_hole = new EmojiInfo("hole", "1f573.png", "hole", "🕳", true, true, true, true);

		/// <summary>
		/// :man_in_business_suit_levitating: 🕴 man in business suit levitating
		/// </summary>
		public static readonly EmojiInfo Emoji_man_in_business_suit_levitating = new EmojiInfo("man_in_business_suit_levitating", "1f574.png", "man in business suit levitating", "🕴", true, true, true, true);

		/// <summary>
		/// :sleuth_or_spy: 🕵 sleuth or spy
		/// </summary>
		public static readonly EmojiInfo Emoji_sleuth_or_spy = new EmojiInfo("sleuth_or_spy", "1f575.png", "sleuth or spy", "🕵", true, true, true, true);

		/// <summary>
		/// :dark_sunglasses: 🕶 dark sunglasses
		/// </summary>
		public static readonly EmojiInfo Emoji_dark_sunglasses = new EmojiInfo("dark_sunglasses", "1f576.png", "dark sunglasses", "🕶", true, true, true, true);

		/// <summary>
		/// :spider: 🕷 spider
		/// </summary>
		public static readonly EmojiInfo Emoji_spider = new EmojiInfo("spider", "1f577.png", "spider", "🕷", true, true, true, true);

		/// <summary>
		/// :spider_web: 🕸 spider web
		/// </summary>
		public static readonly EmojiInfo Emoji_spider_web = new EmojiInfo("spider_web", "1f578.png", "spider web", "🕸", true, true, true, true);

		/// <summary>
		/// :joystick: 🕹 joystick
		/// </summary>
		public static readonly EmojiInfo Emoji_joystick = new EmojiInfo("joystick", "1f579.png", "joystick", "🕹", true, true, true, true);

		/// <summary>
		/// :linked_paperclips: 🖇 linked paperclips
		/// </summary>
		public static readonly EmojiInfo Emoji_linked_paperclips = new EmojiInfo("linked_paperclips", "1f587.png", "linked paperclips", "🖇", true, true, true, true);

		/// <summary>
		/// :lower_left_ballpoint_pen: 🖊 lower left ballpoint pen
		/// </summary>
		public static readonly EmojiInfo Emoji_lower_left_ballpoint_pen = new EmojiInfo("lower_left_ballpoint_pen", "1f58a.png", "lower left ballpoint pen", "🖊", true, true, true, true);

		/// <summary>
		/// :lower_left_fountain_pen: 🖋 lower left fountain pen
		/// </summary>
		public static readonly EmojiInfo Emoji_lower_left_fountain_pen = new EmojiInfo("lower_left_fountain_pen", "1f58b.png", "lower left fountain pen", "🖋", true, true, true, true);

		/// <summary>
		/// :lower_left_paintbrush: 🖌 lower left paintbrush
		/// </summary>
		public static readonly EmojiInfo Emoji_lower_left_paintbrush = new EmojiInfo("lower_left_paintbrush", "1f58c.png", "lower left paintbrush", "🖌", true, true, true, true);

		/// <summary>
		/// :lower_left_crayon: 🖍 lower left crayon
		/// </summary>
		public static readonly EmojiInfo Emoji_lower_left_crayon = new EmojiInfo("lower_left_crayon", "1f58d.png", "lower left crayon", "🖍", true, true, true, true);

		/// <summary>
		/// :raised_hand_with_fingers_splayed: 🖐 raised hand with fingers splayed
		/// </summary>
		public static readonly EmojiInfo Emoji_raised_hand_with_fingers_splayed = new EmojiInfo("raised_hand_with_fingers_splayed", "1f590.png", "raised hand with fingers splayed", "🖐", true, true, true, true);

		/// <summary>
		/// :middle_finger: 🖕 reversed hand with middle finger extended
		/// </summary>
		public static readonly EmojiInfo Emoji_middle_finger = new EmojiInfo("middle_finger", "1f595.png", "reversed hand with middle finger extended", "🖕", true, true, true, true);

		/// <summary>
		/// :spock-hand: 🖖 raised hand with part between middle and ring fingers
		/// </summary>
		public static readonly EmojiInfo Emoji_spock_hand = new EmojiInfo("spock-hand", "1f596.png", "raised hand with part between middle and ring fingers", "🖖", true, true, true, true);

		/// <summary>
		/// :desktop_computer: 🖥 desktop computer
		/// </summary>
		public static readonly EmojiInfo Emoji_desktop_computer = new EmojiInfo("desktop_computer", "1f5a5.png", "desktop computer", "🖥", true, true, true, true);

		/// <summary>
		/// :printer: 🖨 printer
		/// </summary>
		public static readonly EmojiInfo Emoji_printer = new EmojiInfo("printer", "1f5a8.png", "printer", "🖨", true, true, true, true);

		/// <summary>
		/// :three_button_mouse: 🖱 three button mouse
		/// </summary>
		public static readonly EmojiInfo Emoji_three_button_mouse = new EmojiInfo("three_button_mouse", "1f5b1.png", "three button mouse", "🖱", true, true, true, false);

		/// <summary>
		/// :trackball: 🖲 trackball
		/// </summary>
		public static readonly EmojiInfo Emoji_trackball = new EmojiInfo("trackball", "1f5b2.png", "trackball", "🖲", true, true, true, true);

		/// <summary>
		/// :frame_with_picture: 🖼 frame with picture
		/// </summary>
		public static readonly EmojiInfo Emoji_frame_with_picture = new EmojiInfo("frame_with_picture", "1f5bc.png", "frame with picture", "🖼", true, true, true, true);

		/// <summary>
		/// :card_index_dividers: 🗂 card index dividers
		/// </summary>
		public static readonly EmojiInfo Emoji_card_index_dividers = new EmojiInfo("card_index_dividers", "1f5c2.png", "card index dividers", "🗂", true, true, true, true);

		/// <summary>
		/// :card_file_box: 🗃 card file box
		/// </summary>
		public static readonly EmojiInfo Emoji_card_file_box = new EmojiInfo("card_file_box", "1f5c3.png", "card file box", "🗃", true, true, true, true);

		/// <summary>
		/// :file_cabinet: 🗄 file cabinet
		/// </summary>
		public static readonly EmojiInfo Emoji_file_cabinet = new EmojiInfo("file_cabinet", "1f5c4.png", "file cabinet", "🗄", true, true, true, true);

		/// <summary>
		/// :wastebasket: 🗑 wastebasket
		/// </summary>
		public static readonly EmojiInfo Emoji_wastebasket = new EmojiInfo("wastebasket", "1f5d1.png", "wastebasket", "🗑", true, true, true, true);

		/// <summary>
		/// :spiral_note_pad: 🗒 spiral note pad
		/// </summary>
		public static readonly EmojiInfo Emoji_spiral_note_pad = new EmojiInfo("spiral_note_pad", "1f5d2.png", "spiral note pad", "🗒", true, true, true, true);

		/// <summary>
		/// :spiral_calendar_pad: 🗓 spiral calendar pad
		/// </summary>
		public static readonly EmojiInfo Emoji_spiral_calendar_pad = new EmojiInfo("spiral_calendar_pad", "1f5d3.png", "spiral calendar pad", "🗓", true, true, true, true);

		/// <summary>
		/// :compression: 🗜 compression
		/// </summary>
		public static readonly EmojiInfo Emoji_compression = new EmojiInfo("compression", "1f5dc.png", "compression", "🗜", true, true, true, true);

		/// <summary>
		/// :old_key: 🗝 old key
		/// </summary>
		public static readonly EmojiInfo Emoji_old_key = new EmojiInfo("old_key", "1f5dd.png", "old key", "🗝", true, true, true, true);

		/// <summary>
		/// :rolled_up_newspaper: 🗞 rolled-up newspaper
		/// </summary>
		public static readonly EmojiInfo Emoji_rolled_up_newspaper = new EmojiInfo("rolled_up_newspaper", "1f5de.png", "rolled-up newspaper", "🗞", true, true, true, true);

		/// <summary>
		/// :dagger_knife: 🗡 dagger knife
		/// </summary>
		public static readonly EmojiInfo Emoji_dagger_knife = new EmojiInfo("dagger_knife", "1f5e1.png", "dagger knife", "🗡", true, true, true, true);

		/// <summary>
		/// :speaking_head_in_silhouette: 🗣 speaking head in silhouette
		/// </summary>
		public static readonly EmojiInfo Emoji_speaking_head_in_silhouette = new EmojiInfo("speaking_head_in_silhouette", "1f5e3.png", "speaking head in silhouette", "🗣", true, true, true, true);

		/// <summary>
		/// :left_speech_bubble: 🗨 left speech bubble
		/// </summary>
		public static readonly EmojiInfo Emoji_left_speech_bubble = new EmojiInfo("left_speech_bubble", "1f5e8.png", "left speech bubble", "🗨", true, true, true, true);

		/// <summary>
		/// :right_anger_bubble: 🗯 right anger bubble
		/// </summary>
		public static readonly EmojiInfo Emoji_right_anger_bubble = new EmojiInfo("right_anger_bubble", "1f5ef.png", "right anger bubble", "🗯", true, true, true, true);

		/// <summary>
		/// :ballot_box_with_ballot: 🗳 ballot box with ballot
		/// </summary>
		public static readonly EmojiInfo Emoji_ballot_box_with_ballot = new EmojiInfo("ballot_box_with_ballot", "1f5f3.png", "ballot box with ballot", "🗳", true, true, true, true);

		/// <summary>
		/// :world_map: 🗺 world map
		/// </summary>
		public static readonly EmojiInfo Emoji_world_map = new EmojiInfo("world_map", "1f5fa.png", "world map", "🗺", true, true, true, true);

		/// <summary>
		/// :mount_fuji: 🗻 mount fuji
		/// </summary>
		public static readonly EmojiInfo Emoji_mount_fuji = new EmojiInfo("mount_fuji", "1f5fb.png", "mount fuji", "🗻", true, true, true, true);

		/// <summary>
		/// :tokyo_tower: 🗼 tokyo tower
		/// </summary>
		public static readonly EmojiInfo Emoji_tokyo_tower = new EmojiInfo("tokyo_tower", "1f5fc.png", "tokyo tower", "🗼", true, true, true, true);

		/// <summary>
		/// :statue_of_liberty: 🗽 statue of liberty
		/// </summary>
		public static readonly EmojiInfo Emoji_statue_of_liberty = new EmojiInfo("statue_of_liberty", "1f5fd.png", "statue of liberty", "🗽", true, true, true, true);

		/// <summary>
		/// :japan: 🗾 silhouette of japan
		/// </summary>
		public static readonly EmojiInfo Emoji_japan = new EmojiInfo("japan", "1f5fe.png", "silhouette of japan", "🗾", true, true, true, true);

		/// <summary>
		/// :moyai: 🗿 moyai
		/// </summary>
		public static readonly EmojiInfo Emoji_moyai = new EmojiInfo("moyai", "1f5ff.png", "moyai", "🗿", true, true, true, true);

		/// <summary>
		/// :grinning: 😀 grinning face
		/// </summary>
		public static readonly EmojiInfo Emoji_grinning = new EmojiInfo("grinning", "1f600.png", "grinning face", "😀", true, true, true, true);

		/// <summary>
		/// :grin: 😁 grinning face with smiling eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_grin = new EmojiInfo("grin", "1f601.png", "grinning face with smiling eyes", "😁", true, true, true, true);

		/// <summary>
		/// :joy: 😂 face with tears of joy
		/// </summary>
		public static readonly EmojiInfo Emoji_joy = new EmojiInfo("joy", "1f602.png", "face with tears of joy", "😂", true, true, true, true);

		/// <summary>
		/// :smiley: 😃 smiling face with open mouth
		/// </summary>
		public static readonly EmojiInfo Emoji_smiley = new EmojiInfo("smiley", "1f603.png", "smiling face with open mouth", "😃", true, true, true, true);

		/// <summary>
		/// :smile: 😄 smiling face with open mouth and smiling eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_smile = new EmojiInfo("smile", "1f604.png", "smiling face with open mouth and smiling eyes", "😄", true, true, true, true);

		/// <summary>
		/// :sweat_smile: 😅 smiling face with open mouth and cold sweat
		/// </summary>
		public static readonly EmojiInfo Emoji_sweat_smile = new EmojiInfo("sweat_smile", "1f605.png", "smiling face with open mouth and cold sweat", "😅", true, true, true, true);

		/// <summary>
		/// :laughing: 😆 smiling face with open mouth and tightly-closed eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_laughing = new EmojiInfo("laughing", "1f606.png", "smiling face with open mouth and tightly-closed eyes", "😆", true, true, true, true);

		/// <summary>
		/// :innocent: 😇 smiling face with halo
		/// </summary>
		public static readonly EmojiInfo Emoji_innocent = new EmojiInfo("innocent", "1f607.png", "smiling face with halo", "😇", true, true, true, true);

		/// <summary>
		/// :smiling_imp: 😈 smiling face with horns
		/// </summary>
		public static readonly EmojiInfo Emoji_smiling_imp = new EmojiInfo("smiling_imp", "1f608.png", "smiling face with horns", "😈", true, true, true, true);

		/// <summary>
		/// :wink: 😉 winking face
		/// </summary>
		public static readonly EmojiInfo Emoji_wink = new EmojiInfo("wink", "1f609.png", "winking face", "😉", true, true, true, true);

		/// <summary>
		/// :blush: 😊 smiling face with smiling eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_blush = new EmojiInfo("blush", "1f60a.png", "smiling face with smiling eyes", "😊", true, true, true, true);

		/// <summary>
		/// :yum: 😋 face savouring delicious food
		/// </summary>
		public static readonly EmojiInfo Emoji_yum = new EmojiInfo("yum", "1f60b.png", "face savouring delicious food", "😋", true, true, true, true);

		/// <summary>
		/// :relieved: 😌 relieved face
		/// </summary>
		public static readonly EmojiInfo Emoji_relieved = new EmojiInfo("relieved", "1f60c.png", "relieved face", "😌", true, true, true, true);

		/// <summary>
		/// :heart_eyes: 😍 smiling face with heart-shaped eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_heart_eyes = new EmojiInfo("heart_eyes", "1f60d.png", "smiling face with heart-shaped eyes", "😍", true, true, true, true);

		/// <summary>
		/// :sunglasses: 😎 smiling face with sunglasses
		/// </summary>
		public static readonly EmojiInfo Emoji_sunglasses = new EmojiInfo("sunglasses", "1f60e.png", "smiling face with sunglasses", "😎", true, true, true, true);

		/// <summary>
		/// :smirk: 😏 smirking face
		/// </summary>
		public static readonly EmojiInfo Emoji_smirk = new EmojiInfo("smirk", "1f60f.png", "smirking face", "😏", true, true, true, true);

		/// <summary>
		/// :neutral_face: 😐 neutral face
		/// </summary>
		public static readonly EmojiInfo Emoji_neutral_face = new EmojiInfo("neutral_face", "1f610.png", "neutral face", "😐", true, true, true, true);

		/// <summary>
		/// :expressionless: 😑 expressionless face
		/// </summary>
		public static readonly EmojiInfo Emoji_expressionless = new EmojiInfo("expressionless", "1f611.png", "expressionless face", "😑", true, true, true, true);

		/// <summary>
		/// :unamused: 😒 unamused face
		/// </summary>
		public static readonly EmojiInfo Emoji_unamused = new EmojiInfo("unamused", "1f612.png", "unamused face", "😒", true, true, true, true);

		/// <summary>
		/// :sweat: 😓 face with cold sweat
		/// </summary>
		public static readonly EmojiInfo Emoji_sweat = new EmojiInfo("sweat", "1f613.png", "face with cold sweat", "😓", true, true, true, true);

		/// <summary>
		/// :pensive: 😔 pensive face
		/// </summary>
		public static readonly EmojiInfo Emoji_pensive = new EmojiInfo("pensive", "1f614.png", "pensive face", "😔", true, true, true, true);

		/// <summary>
		/// :confused: 😕 confused face
		/// </summary>
		public static readonly EmojiInfo Emoji_confused = new EmojiInfo("confused", "1f615.png", "confused face", "😕", true, true, true, true);

		/// <summary>
		/// :confounded: 😖 confounded face
		/// </summary>
		public static readonly EmojiInfo Emoji_confounded = new EmojiInfo("confounded", "1f616.png", "confounded face", "😖", true, true, true, true);

		/// <summary>
		/// :kissing: 😗 kissing face
		/// </summary>
		public static readonly EmojiInfo Emoji_kissing = new EmojiInfo("kissing", "1f617.png", "kissing face", "😗", true, true, true, true);

		/// <summary>
		/// :kissing_heart: 😘 face throwing a kiss
		/// </summary>
		public static readonly EmojiInfo Emoji_kissing_heart = new EmojiInfo("kissing_heart", "1f618.png", "face throwing a kiss", "😘", true, true, true, true);

		/// <summary>
		/// :kissing_smiling_eyes: 😙 kissing face with smiling eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_kissing_smiling_eyes = new EmojiInfo("kissing_smiling_eyes", "1f619.png", "kissing face with smiling eyes", "😙", true, true, true, true);

		/// <summary>
		/// :kissing_closed_eyes: 😚 kissing face with closed eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_kissing_closed_eyes = new EmojiInfo("kissing_closed_eyes", "1f61a.png", "kissing face with closed eyes", "😚", true, true, true, true);

		/// <summary>
		/// :stuck_out_tongue: 😛 face with stuck-out tongue
		/// </summary>
		public static readonly EmojiInfo Emoji_stuck_out_tongue = new EmojiInfo("stuck_out_tongue", "1f61b.png", "face with stuck-out tongue", "😛", true, true, true, true);

		/// <summary>
		/// :stuck_out_tongue_winking_eye: 😜 face with stuck-out tongue and winking eye
		/// </summary>
		public static readonly EmojiInfo Emoji_stuck_out_tongue_winking_eye = new EmojiInfo("stuck_out_tongue_winking_eye", "1f61c.png", "face with stuck-out tongue and winking eye", "😜", true, true, true, true);

		/// <summary>
		/// :stuck_out_tongue_closed_eyes: 😝 face with stuck-out tongue and tightly-closed eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_stuck_out_tongue_closed_eyes = new EmojiInfo("stuck_out_tongue_closed_eyes", "1f61d.png", "face with stuck-out tongue and tightly-closed eyes", "😝", true, true, true, true);

		/// <summary>
		/// :disappointed: 😞 disappointed face
		/// </summary>
		public static readonly EmojiInfo Emoji_disappointed = new EmojiInfo("disappointed", "1f61e.png", "disappointed face", "😞", true, true, true, true);

		/// <summary>
		/// :worried: 😟 worried face
		/// </summary>
		public static readonly EmojiInfo Emoji_worried = new EmojiInfo("worried", "1f61f.png", "worried face", "😟", true, true, true, true);

		/// <summary>
		/// :angry: 😠 angry face
		/// </summary>
		public static readonly EmojiInfo Emoji_angry = new EmojiInfo("angry", "1f620.png", "angry face", "😠", true, true, true, true);

		/// <summary>
		/// :rage: 😡 pouting face
		/// </summary>
		public static readonly EmojiInfo Emoji_rage = new EmojiInfo("rage", "1f621.png", "pouting face", "😡", true, true, true, true);

		/// <summary>
		/// :cry: 😢 crying face
		/// </summary>
		public static readonly EmojiInfo Emoji_cry = new EmojiInfo("cry", "1f622.png", "crying face", "😢", true, true, true, true);

		/// <summary>
		/// :persevere: 😣 persevering face
		/// </summary>
		public static readonly EmojiInfo Emoji_persevere = new EmojiInfo("persevere", "1f623.png", "persevering face", "😣", true, true, true, true);

		/// <summary>
		/// :triumph: 😤 face with look of triumph
		/// </summary>
		public static readonly EmojiInfo Emoji_triumph = new EmojiInfo("triumph", "1f624.png", "face with look of triumph", "😤", true, true, true, true);

		/// <summary>
		/// :disappointed_relieved: 😥 disappointed but relieved face
		/// </summary>
		public static readonly EmojiInfo Emoji_disappointed_relieved = new EmojiInfo("disappointed_relieved", "1f625.png", "disappointed but relieved face", "😥", true, true, true, true);

		/// <summary>
		/// :frowning: 😦 frowning face with open mouth
		/// </summary>
		public static readonly EmojiInfo Emoji_frowning = new EmojiInfo("frowning", "1f626.png", "frowning face with open mouth", "😦", true, true, true, true);

		/// <summary>
		/// :anguished: 😧 anguished face
		/// </summary>
		public static readonly EmojiInfo Emoji_anguished = new EmojiInfo("anguished", "1f627.png", "anguished face", "😧", true, true, true, true);

		/// <summary>
		/// :fearful: 😨 fearful face
		/// </summary>
		public static readonly EmojiInfo Emoji_fearful = new EmojiInfo("fearful", "1f628.png", "fearful face", "😨", true, true, true, true);

		/// <summary>
		/// :weary: 😩 weary face
		/// </summary>
		public static readonly EmojiInfo Emoji_weary = new EmojiInfo("weary", "1f629.png", "weary face", "😩", true, true, true, true);

		/// <summary>
		/// :sleepy: 😪 sleepy face
		/// </summary>
		public static readonly EmojiInfo Emoji_sleepy = new EmojiInfo("sleepy", "1f62a.png", "sleepy face", "😪", true, true, true, true);

		/// <summary>
		/// :tired_face: 😫 tired face
		/// </summary>
		public static readonly EmojiInfo Emoji_tired_face = new EmojiInfo("tired_face", "1f62b.png", "tired face", "😫", true, true, true, true);

		/// <summary>
		/// :grimacing: 😬 grimacing face
		/// </summary>
		public static readonly EmojiInfo Emoji_grimacing = new EmojiInfo("grimacing", "1f62c.png", "grimacing face", "😬", true, true, true, true);

		/// <summary>
		/// :sob: 😭 loudly crying face
		/// </summary>
		public static readonly EmojiInfo Emoji_sob = new EmojiInfo("sob", "1f62d.png", "loudly crying face", "😭", true, true, true, true);

		/// <summary>
		/// :open_mouth: 😮 face with open mouth
		/// </summary>
		public static readonly EmojiInfo Emoji_open_mouth = new EmojiInfo("open_mouth", "1f62e.png", "face with open mouth", "😮", true, true, true, true);

		/// <summary>
		/// :hushed: 😯 hushed face
		/// </summary>
		public static readonly EmojiInfo Emoji_hushed = new EmojiInfo("hushed", "1f62f.png", "hushed face", "😯", true, true, true, true);

		/// <summary>
		/// :cold_sweat: 😰 face with open mouth and cold sweat
		/// </summary>
		public static readonly EmojiInfo Emoji_cold_sweat = new EmojiInfo("cold_sweat", "1f630.png", "face with open mouth and cold sweat", "😰", true, true, true, true);

		/// <summary>
		/// :scream: 😱 face screaming in fear
		/// </summary>
		public static readonly EmojiInfo Emoji_scream = new EmojiInfo("scream", "1f631.png", "face screaming in fear", "😱", true, true, true, true);

		/// <summary>
		/// :astonished: 😲 astonished face
		/// </summary>
		public static readonly EmojiInfo Emoji_astonished = new EmojiInfo("astonished", "1f632.png", "astonished face", "😲", true, true, true, true);

		/// <summary>
		/// :flushed: 😳 flushed face
		/// </summary>
		public static readonly EmojiInfo Emoji_flushed = new EmojiInfo("flushed", "1f633.png", "flushed face", "😳", true, true, true, true);

		/// <summary>
		/// :sleeping: 😴 sleeping face
		/// </summary>
		public static readonly EmojiInfo Emoji_sleeping = new EmojiInfo("sleeping", "1f634.png", "sleeping face", "😴", true, true, true, true);

		/// <summary>
		/// :dizzy_face: 😵 dizzy face
		/// </summary>
		public static readonly EmojiInfo Emoji_dizzy_face = new EmojiInfo("dizzy_face", "1f635.png", "dizzy face", "😵", true, true, true, true);

		/// <summary>
		/// :no_mouth: 😶 face without mouth
		/// </summary>
		public static readonly EmojiInfo Emoji_no_mouth = new EmojiInfo("no_mouth", "1f636.png", "face without mouth", "😶", true, true, true, true);

		/// <summary>
		/// :mask: 😷 face with medical mask
		/// </summary>
		public static readonly EmojiInfo Emoji_mask = new EmojiInfo("mask", "1f637.png", "face with medical mask", "😷", true, true, true, true);

		/// <summary>
		/// :smile_cat: 😸 grinning cat face with smiling eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_smile_cat = new EmojiInfo("smile_cat", "1f638.png", "grinning cat face with smiling eyes", "😸", true, true, true, true);

		/// <summary>
		/// :joy_cat: 😹 cat face with tears of joy
		/// </summary>
		public static readonly EmojiInfo Emoji_joy_cat = new EmojiInfo("joy_cat", "1f639.png", "cat face with tears of joy", "😹", true, true, true, true);

		/// <summary>
		/// :smiley_cat: 😺 smiling cat face with open mouth
		/// </summary>
		public static readonly EmojiInfo Emoji_smiley_cat = new EmojiInfo("smiley_cat", "1f63a.png", "smiling cat face with open mouth", "😺", true, true, true, true);

		/// <summary>
		/// :heart_eyes_cat: 😻 smiling cat face with heart-shaped eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_heart_eyes_cat = new EmojiInfo("heart_eyes_cat", "1f63b.png", "smiling cat face with heart-shaped eyes", "😻", true, true, true, true);

		/// <summary>
		/// :smirk_cat: 😼 cat face with wry smile
		/// </summary>
		public static readonly EmojiInfo Emoji_smirk_cat = new EmojiInfo("smirk_cat", "1f63c.png", "cat face with wry smile", "😼", true, true, true, true);

		/// <summary>
		/// :kissing_cat: 😽 kissing cat face with closed eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_kissing_cat = new EmojiInfo("kissing_cat", "1f63d.png", "kissing cat face with closed eyes", "😽", true, true, true, true);

		/// <summary>
		/// :pouting_cat: 😾 pouting cat face
		/// </summary>
		public static readonly EmojiInfo Emoji_pouting_cat = new EmojiInfo("pouting_cat", "1f63e.png", "pouting cat face", "😾", true, true, true, true);

		/// <summary>
		/// :crying_cat_face: 😿 crying cat face
		/// </summary>
		public static readonly EmojiInfo Emoji_crying_cat_face = new EmojiInfo("crying_cat_face", "1f63f.png", "crying cat face", "😿", true, true, true, true);

		/// <summary>
		/// :scream_cat: 🙀 weary cat face
		/// </summary>
		public static readonly EmojiInfo Emoji_scream_cat = new EmojiInfo("scream_cat", "1f640.png", "weary cat face", "🙀", true, true, true, true);

		/// <summary>
		/// :slightly_frowning_face: 🙁 slightly frowning face
		/// </summary>
		public static readonly EmojiInfo Emoji_slightly_frowning_face = new EmojiInfo("slightly_frowning_face", "1f641.png", "slightly frowning face", "🙁", true, true, true, true);

		/// <summary>
		/// :slightly_smiling_face: 🙂 slightly smiling face
		/// </summary>
		public static readonly EmojiInfo Emoji_slightly_smiling_face = new EmojiInfo("slightly_smiling_face", "1f642.png", "slightly smiling face", "🙂", true, true, true, true);

		/// <summary>
		/// :upside_down_face: 🙃 upside-down face
		/// </summary>
		public static readonly EmojiInfo Emoji_upside_down_face = new EmojiInfo("upside_down_face", "1f643.png", "upside-down face", "🙃", true, true, true, false);

		/// <summary>
		/// :face_with_rolling_eyes: 🙄 face with rolling eyes
		/// </summary>
		public static readonly EmojiInfo Emoji_face_with_rolling_eyes = new EmojiInfo("face_with_rolling_eyes", "1f644.png", "face with rolling eyes", "🙄", true, true, true, false);

		/// <summary>
		/// :no_good: 🙅 face with no good gesture
		/// </summary>
		public static readonly EmojiInfo Emoji_no_good = new EmojiInfo("no_good", "1f645.png", "face with no good gesture", "🙅", true, true, true, true);

		/// <summary>
		/// :ok_woman: 🙆 face with ok gesture
		/// </summary>
		public static readonly EmojiInfo Emoji_ok_woman = new EmojiInfo("ok_woman", "1f646.png", "face with ok gesture", "🙆", true, true, true, true);

		/// <summary>
		/// :bow: 🙇 person bowing deeply
		/// </summary>
		public static readonly EmojiInfo Emoji_bow = new EmojiInfo("bow", "1f647.png", "person bowing deeply", "🙇", true, true, true, true);

		/// <summary>
		/// :see_no_evil: 🙈 see-no-evil monkey
		/// </summary>
		public static readonly EmojiInfo Emoji_see_no_evil = new EmojiInfo("see_no_evil", "1f648.png", "see-no-evil monkey", "🙈", true, true, true, true);

		/// <summary>
		/// :hear_no_evil: 🙉 hear-no-evil monkey
		/// </summary>
		public static readonly EmojiInfo Emoji_hear_no_evil = new EmojiInfo("hear_no_evil", "1f649.png", "hear-no-evil monkey", "🙉", true, true, true, true);

		/// <summary>
		/// :speak_no_evil: 🙊 speak-no-evil monkey
		/// </summary>
		public static readonly EmojiInfo Emoji_speak_no_evil = new EmojiInfo("speak_no_evil", "1f64a.png", "speak-no-evil monkey", "🙊", true, true, true, true);

		/// <summary>
		/// :raising_hand: 🙋 happy person raising one hand
		/// </summary>
		public static readonly EmojiInfo Emoji_raising_hand = new EmojiInfo("raising_hand", "1f64b.png", "happy person raising one hand", "🙋", true, true, true, true);

		/// <summary>
		/// :raised_hands: 🙌 person raising both hands in celebration
		/// </summary>
		public static readonly EmojiInfo Emoji_raised_hands = new EmojiInfo("raised_hands", "1f64c.png", "person raising both hands in celebration", "🙌", true, true, true, true);

		/// <summary>
		/// :person_frowning: 🙍 person frowning
		/// </summary>
		public static readonly EmojiInfo Emoji_person_frowning = new EmojiInfo("person_frowning", "1f64d.png", "person frowning", "🙍", true, true, true, true);

		/// <summary>
		/// :person_with_pouting_face: 🙎 person with pouting face
		/// </summary>
		public static readonly EmojiInfo Emoji_person_with_pouting_face = new EmojiInfo("person_with_pouting_face", "1f64e.png", "person with pouting face", "🙎", true, true, true, true);

		/// <summary>
		/// :pray: 🙏 person with folded hands
		/// </summary>
		public static readonly EmojiInfo Emoji_pray = new EmojiInfo("pray", "1f64f.png", "person with folded hands", "🙏", true, true, true, true);

		/// <summary>
		/// :rocket: 🚀 rocket
		/// </summary>
		public static readonly EmojiInfo Emoji_rocket = new EmojiInfo("rocket", "1f680.png", "rocket", "🚀", true, true, true, true);

		/// <summary>
		/// :helicopter: 🚁 helicopter
		/// </summary>
		public static readonly EmojiInfo Emoji_helicopter = new EmojiInfo("helicopter", "1f681.png", "helicopter", "🚁", true, true, true, true);

		/// <summary>
		/// :steam_locomotive: 🚂 steam locomotive
		/// </summary>
		public static readonly EmojiInfo Emoji_steam_locomotive = new EmojiInfo("steam_locomotive", "1f682.png", "steam locomotive", "🚂", true, true, true, true);

		/// <summary>
		/// :railway_car: 🚃 railway car
		/// </summary>
		public static readonly EmojiInfo Emoji_railway_car = new EmojiInfo("railway_car", "1f683.png", "railway car", "🚃", true, true, true, true);

		/// <summary>
		/// :bullettrain_side: 🚄 high-speed train
		/// </summary>
		public static readonly EmojiInfo Emoji_bullettrain_side = new EmojiInfo("bullettrain_side", "1f684.png", "high-speed train", "🚄", true, true, true, true);

		/// <summary>
		/// :bullettrain_front: 🚅 high-speed train with bullet nose
		/// </summary>
		public static readonly EmojiInfo Emoji_bullettrain_front = new EmojiInfo("bullettrain_front", "1f685.png", "high-speed train with bullet nose", "🚅", true, true, true, true);

		/// <summary>
		/// :train2: 🚆 train
		/// </summary>
		public static readonly EmojiInfo Emoji_train2 = new EmojiInfo("train2", "1f686.png", "train", "🚆", true, true, true, true);

		/// <summary>
		/// :metro: 🚇 metro
		/// </summary>
		public static readonly EmojiInfo Emoji_metro = new EmojiInfo("metro", "1f687.png", "metro", "🚇", true, true, true, true);

		/// <summary>
		/// :light_rail: 🚈 light rail
		/// </summary>
		public static readonly EmojiInfo Emoji_light_rail = new EmojiInfo("light_rail", "1f688.png", "light rail", "🚈", true, true, true, true);

		/// <summary>
		/// :station: 🚉 station
		/// </summary>
		public static readonly EmojiInfo Emoji_station = new EmojiInfo("station", "1f689.png", "station", "🚉", true, true, true, true);

		/// <summary>
		/// :tram: 🚊 tram
		/// </summary>
		public static readonly EmojiInfo Emoji_tram = new EmojiInfo("tram", "1f68a.png", "tram", "🚊", true, true, true, true);

		/// <summary>
		/// :train: 🚋 tram car
		/// </summary>
		public static readonly EmojiInfo Emoji_train = new EmojiInfo("train", "1f68b.png", "tram car", "🚋", true, true, true, true);

		/// <summary>
		/// :bus: 🚌 bus
		/// </summary>
		public static readonly EmojiInfo Emoji_bus = new EmojiInfo("bus", "1f68c.png", "bus", "🚌", true, true, true, true);

		/// <summary>
		/// :oncoming_bus: 🚍 oncoming bus
		/// </summary>
		public static readonly EmojiInfo Emoji_oncoming_bus = new EmojiInfo("oncoming_bus", "1f68d.png", "oncoming bus", "🚍", true, true, true, true);

		/// <summary>
		/// :trolleybus: 🚎 trolleybus
		/// </summary>
		public static readonly EmojiInfo Emoji_trolleybus = new EmojiInfo("trolleybus", "1f68e.png", "trolleybus", "🚎", true, true, true, true);

		/// <summary>
		/// :busstop: 🚏 bus stop
		/// </summary>
		public static readonly EmojiInfo Emoji_busstop = new EmojiInfo("busstop", "1f68f.png", "bus stop", "🚏", true, true, true, true);

		/// <summary>
		/// :minibus: 🚐 minibus
		/// </summary>
		public static readonly EmojiInfo Emoji_minibus = new EmojiInfo("minibus", "1f690.png", "minibus", "🚐", true, true, true, true);

		/// <summary>
		/// :ambulance: 🚑 ambulance
		/// </summary>
		public static readonly EmojiInfo Emoji_ambulance = new EmojiInfo("ambulance", "1f691.png", "ambulance", "🚑", true, true, true, true);

		/// <summary>
		/// :fire_engine: 🚒 fire engine
		/// </summary>
		public static readonly EmojiInfo Emoji_fire_engine = new EmojiInfo("fire_engine", "1f692.png", "fire engine", "🚒", true, true, true, true);

		/// <summary>
		/// :police_car: 🚓 police car
		/// </summary>
		public static readonly EmojiInfo Emoji_police_car = new EmojiInfo("police_car", "1f693.png", "police car", "🚓", true, true, true, true);

		/// <summary>
		/// :oncoming_police_car: 🚔 oncoming police car
		/// </summary>
		public static readonly EmojiInfo Emoji_oncoming_police_car = new EmojiInfo("oncoming_police_car", "1f694.png", "oncoming police car", "🚔", true, true, true, true);

		/// <summary>
		/// :taxi: 🚕 taxi
		/// </summary>
		public static readonly EmojiInfo Emoji_taxi = new EmojiInfo("taxi", "1f695.png", "taxi", "🚕", true, true, true, true);

		/// <summary>
		/// :oncoming_taxi: 🚖 oncoming taxi
		/// </summary>
		public static readonly EmojiInfo Emoji_oncoming_taxi = new EmojiInfo("oncoming_taxi", "1f696.png", "oncoming taxi", "🚖", true, true, true, true);

		/// <summary>
		/// :car: 🚗 automobile
		/// </summary>
		public static readonly EmojiInfo Emoji_car = new EmojiInfo("car", "1f697.png", "automobile", "🚗", true, true, true, true);

		/// <summary>
		/// :oncoming_automobile: 🚘 oncoming automobile
		/// </summary>
		public static readonly EmojiInfo Emoji_oncoming_automobile = new EmojiInfo("oncoming_automobile", "1f698.png", "oncoming automobile", "🚘", true, true, true, true);

		/// <summary>
		/// :blue_car: 🚙 recreational vehicle
		/// </summary>
		public static readonly EmojiInfo Emoji_blue_car = new EmojiInfo("blue_car", "1f699.png", "recreational vehicle", "🚙", true, true, true, true);

		/// <summary>
		/// :truck: 🚚 delivery truck
		/// </summary>
		public static readonly EmojiInfo Emoji_truck = new EmojiInfo("truck", "1f69a.png", "delivery truck", "🚚", true, true, true, true);

		/// <summary>
		/// :articulated_lorry: 🚛 articulated lorry
		/// </summary>
		public static readonly EmojiInfo Emoji_articulated_lorry = new EmojiInfo("articulated_lorry", "1f69b.png", "articulated lorry", "🚛", true, true, true, true);

		/// <summary>
		/// :tractor: 🚜 tractor
		/// </summary>
		public static readonly EmojiInfo Emoji_tractor = new EmojiInfo("tractor", "1f69c.png", "tractor", "🚜", true, true, true, true);

		/// <summary>
		/// :monorail: 🚝 monorail
		/// </summary>
		public static readonly EmojiInfo Emoji_monorail = new EmojiInfo("monorail", "1f69d.png", "monorail", "🚝", true, true, true, true);

		/// <summary>
		/// :mountain_railway: 🚞 mountain railway
		/// </summary>
		public static readonly EmojiInfo Emoji_mountain_railway = new EmojiInfo("mountain_railway", "1f69e.png", "mountain railway", "🚞", true, true, true, true);

		/// <summary>
		/// :suspension_railway: 🚟 suspension railway
		/// </summary>
		public static readonly EmojiInfo Emoji_suspension_railway = new EmojiInfo("suspension_railway", "1f69f.png", "suspension railway", "🚟", true, true, true, true);

		/// <summary>
		/// :mountain_cableway: 🚠 mountain cableway
		/// </summary>
		public static readonly EmojiInfo Emoji_mountain_cableway = new EmojiInfo("mountain_cableway", "1f6a0.png", "mountain cableway", "🚠", true, true, true, true);

		/// <summary>
		/// :aerial_tramway: 🚡 aerial tramway
		/// </summary>
		public static readonly EmojiInfo Emoji_aerial_tramway = new EmojiInfo("aerial_tramway", "1f6a1.png", "aerial tramway", "🚡", true, true, true, true);

		/// <summary>
		/// :ship: 🚢 ship
		/// </summary>
		public static readonly EmojiInfo Emoji_ship = new EmojiInfo("ship", "1f6a2.png", "ship", "🚢", true, true, true, true);

		/// <summary>
		/// :rowboat: 🚣 rowboat
		/// </summary>
		public static readonly EmojiInfo Emoji_rowboat = new EmojiInfo("rowboat", "1f6a3.png", "rowboat", "🚣", true, true, true, true);

		/// <summary>
		/// :speedboat: 🚤 speedboat
		/// </summary>
		public static readonly EmojiInfo Emoji_speedboat = new EmojiInfo("speedboat", "1f6a4.png", "speedboat", "🚤", true, true, true, true);

		/// <summary>
		/// :traffic_light: 🚥 horizontal traffic light
		/// </summary>
		public static readonly EmojiInfo Emoji_traffic_light = new EmojiInfo("traffic_light", "1f6a5.png", "horizontal traffic light", "🚥", true, true, true, true);

		/// <summary>
		/// :vertical_traffic_light: 🚦 vertical traffic light
		/// </summary>
		public static readonly EmojiInfo Emoji_vertical_traffic_light = new EmojiInfo("vertical_traffic_light", "1f6a6.png", "vertical traffic light", "🚦", true, true, true, true);

		/// <summary>
		/// :construction: 🚧 construction sign
		/// </summary>
		public static readonly EmojiInfo Emoji_construction = new EmojiInfo("construction", "1f6a7.png", "construction sign", "🚧", true, true, true, true);

		/// <summary>
		/// :rotating_light: 🚨 police cars revolving light
		/// </summary>
		public static readonly EmojiInfo Emoji_rotating_light = new EmojiInfo("rotating_light", "1f6a8.png", "police cars revolving light", "🚨", true, true, true, true);

		/// <summary>
		/// :triangular_flag_on_post: 🚩 triangular flag on post
		/// </summary>
		public static readonly EmojiInfo Emoji_triangular_flag_on_post = new EmojiInfo("triangular_flag_on_post", "1f6a9.png", "triangular flag on post", "🚩", true, true, true, true);

		/// <summary>
		/// :door: 🚪 door
		/// </summary>
		public static readonly EmojiInfo Emoji_door = new EmojiInfo("door", "1f6aa.png", "door", "🚪", true, true, true, true);

		/// <summary>
		/// :no_entry_sign: 🚫 no entry sign
		/// </summary>
		public static readonly EmojiInfo Emoji_no_entry_sign = new EmojiInfo("no_entry_sign", "1f6ab.png", "no entry sign", "🚫", true, true, true, true);

		/// <summary>
		/// :smoking: 🚬 smoking symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_smoking = new EmojiInfo("smoking", "1f6ac.png", "smoking symbol", "🚬", true, true, true, true);

		/// <summary>
		/// :no_smoking: 🚭 no smoking symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_no_smoking = new EmojiInfo("no_smoking", "1f6ad.png", "no smoking symbol", "🚭", true, true, true, true);

		/// <summary>
		/// :put_litter_in_its_place: 🚮 put litter in its place symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_put_litter_in_its_place = new EmojiInfo("put_litter_in_its_place", "1f6ae.png", "put litter in its place symbol", "🚮", true, true, true, true);

		/// <summary>
		/// :do_not_litter: 🚯 do not litter symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_do_not_litter = new EmojiInfo("do_not_litter", "1f6af.png", "do not litter symbol", "🚯", true, true, true, true);

		/// <summary>
		/// :potable_water: 🚰 potable water symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_potable_water = new EmojiInfo("potable_water", "1f6b0.png", "potable water symbol", "🚰", true, true, true, true);

		/// <summary>
		/// :non-potable_water: 🚱 non-potable water symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_non_potable_water = new EmojiInfo("non-potable_water", "1f6b1.png", "non-potable water symbol", "🚱", true, true, true, true);

		/// <summary>
		/// :bike: 🚲 bicycle
		/// </summary>
		public static readonly EmojiInfo Emoji_bike = new EmojiInfo("bike", "1f6b2.png", "bicycle", "🚲", true, true, true, true);

		/// <summary>
		/// :no_bicycles: 🚳 no bicycles
		/// </summary>
		public static readonly EmojiInfo Emoji_no_bicycles = new EmojiInfo("no_bicycles", "1f6b3.png", "no bicycles", "🚳", true, true, true, true);

		/// <summary>
		/// :bicyclist: 🚴 bicyclist
		/// </summary>
		public static readonly EmojiInfo Emoji_bicyclist = new EmojiInfo("bicyclist", "1f6b4.png", "bicyclist", "🚴", true, true, true, true);

		/// <summary>
		/// :mountain_bicyclist: 🚵 mountain bicyclist
		/// </summary>
		public static readonly EmojiInfo Emoji_mountain_bicyclist = new EmojiInfo("mountain_bicyclist", "1f6b5.png", "mountain bicyclist", "🚵", true, true, true, true);

		/// <summary>
		/// :walking: 🚶 pedestrian
		/// </summary>
		public static readonly EmojiInfo Emoji_walking = new EmojiInfo("walking", "1f6b6.png", "pedestrian", "🚶", true, true, true, true);

		/// <summary>
		/// :no_pedestrians: 🚷 no pedestrians
		/// </summary>
		public static readonly EmojiInfo Emoji_no_pedestrians = new EmojiInfo("no_pedestrians", "1f6b7.png", "no pedestrians", "🚷", true, true, true, true);

		/// <summary>
		/// :children_crossing: 🚸 children crossing
		/// </summary>
		public static readonly EmojiInfo Emoji_children_crossing = new EmojiInfo("children_crossing", "1f6b8.png", "children crossing", "🚸", true, true, true, true);

		/// <summary>
		/// :mens: 🚹 mens symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_mens = new EmojiInfo("mens", "1f6b9.png", "mens symbol", "🚹", true, true, true, true);

		/// <summary>
		/// :womens: 🚺 womens symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_womens = new EmojiInfo("womens", "1f6ba.png", "womens symbol", "🚺", true, true, true, true);

		/// <summary>
		/// :restroom: 🚻 restroom
		/// </summary>
		public static readonly EmojiInfo Emoji_restroom = new EmojiInfo("restroom", "1f6bb.png", "restroom", "🚻", true, true, true, true);

		/// <summary>
		/// :baby_symbol: 🚼 baby symbol
		/// </summary>
		public static readonly EmojiInfo Emoji_baby_symbol = new EmojiInfo("baby_symbol", "1f6bc.png", "baby symbol", "🚼", true, true, true, true);

		/// <summary>
		/// :toilet: 🚽 toilet
		/// </summary>
		public static readonly EmojiInfo Emoji_toilet = new EmojiInfo("toilet", "1f6bd.png", "toilet", "🚽", true, true, true, true);

		/// <summary>
		/// :wc: 🚾 water closet
		/// </summary>
		public static readonly EmojiInfo Emoji_wc = new EmojiInfo("wc", "1f6be.png", "water closet", "🚾", true, true, true, true);

		/// <summary>
		/// :shower: 🚿 shower
		/// </summary>
		public static readonly EmojiInfo Emoji_shower = new EmojiInfo("shower", "1f6bf.png", "shower", "🚿", true, true, true, true);

		/// <summary>
		/// :bath: 🛀 bath
		/// </summary>
		public static readonly EmojiInfo Emoji_bath = new EmojiInfo("bath", "1f6c0.png", "bath", "🛀", true, true, true, true);

		/// <summary>
		/// :bathtub: 🛁 bathtub
		/// </summary>
		public static readonly EmojiInfo Emoji_bathtub = new EmojiInfo("bathtub", "1f6c1.png", "bathtub", "🛁", true, true, true, true);

		/// <summary>
		/// :passport_control: 🛂 passport control
		/// </summary>
		public static readonly EmojiInfo Emoji_passport_control = new EmojiInfo("passport_control", "1f6c2.png", "passport control", "🛂", true, true, true, true);

		/// <summary>
		/// :customs: 🛃 customs
		/// </summary>
		public static readonly EmojiInfo Emoji_customs = new EmojiInfo("customs", "1f6c3.png", "customs", "🛃", true, true, true, true);

		/// <summary>
		/// :baggage_claim: 🛄 baggage claim
		/// </summary>
		public static readonly EmojiInfo Emoji_baggage_claim = new EmojiInfo("baggage_claim", "1f6c4.png", "baggage claim", "🛄", true, true, true, true);

		/// <summary>
		/// :left_luggage: 🛅 left luggage
		/// </summary>
		public static readonly EmojiInfo Emoji_left_luggage = new EmojiInfo("left_luggage", "1f6c5.png", "left luggage", "🛅", true, true, true, true);

		/// <summary>
		/// :couch_and_lamp: 🛋 couch and lamp
		/// </summary>
		public static readonly EmojiInfo Emoji_couch_and_lamp = new EmojiInfo("couch_and_lamp", "1f6cb.png", "couch and lamp", "🛋", true, true, true, true);

		/// <summary>
		/// :sleeping_accommodation: 🛌 sleeping accommodation
		/// </summary>
		public static readonly EmojiInfo Emoji_sleeping_accommodation = new EmojiInfo("sleeping_accommodation", "1f6cc.png", "sleeping accommodation", "🛌", true, true, true, true);

		/// <summary>
		/// :shopping_bags: 🛍 shopping bags
		/// </summary>
		public static readonly EmojiInfo Emoji_shopping_bags = new EmojiInfo("shopping_bags", "1f6cd.png", "shopping bags", "🛍", true, true, true, true);

		/// <summary>
		/// :bellhop_bell: 🛎 bellhop bell
		/// </summary>
		public static readonly EmojiInfo Emoji_bellhop_bell = new EmojiInfo("bellhop_bell", "1f6ce.png", "bellhop bell", "🛎", true, true, true, true);

		/// <summary>
		/// :bed: 🛏 bed
		/// </summary>
		public static readonly EmojiInfo Emoji_bed = new EmojiInfo("bed", "1f6cf.png", "bed", "🛏", true, true, true, true);

		/// <summary>
		/// :place_of_worship: 🛐 place of worship
		/// </summary>
		public static readonly EmojiInfo Emoji_place_of_worship = new EmojiInfo("place_of_worship", "1f6d0.png", "place of worship", "🛐", true, true, true, false);

		/// <summary>
		/// :hammer_and_wrench: 🛠 hammer and wrench
		/// </summary>
		public static readonly EmojiInfo Emoji_hammer_and_wrench = new EmojiInfo("hammer_and_wrench", "1f6e0.png", "hammer and wrench", "🛠", true, true, true, true);

		/// <summary>
		/// :shield: 🛡 shield
		/// </summary>
		public static readonly EmojiInfo Emoji_shield = new EmojiInfo("shield", "1f6e1.png", "shield", "🛡", true, true, true, true);

		/// <summary>
		/// :oil_drum: 🛢 oil drum
		/// </summary>
		public static readonly EmojiInfo Emoji_oil_drum = new EmojiInfo("oil_drum", "1f6e2.png", "oil drum", "🛢", true, true, true, true);

		/// <summary>
		/// :motorway: 🛣 motorway
		/// </summary>
		public static readonly EmojiInfo Emoji_motorway = new EmojiInfo("motorway", "1f6e3.png", "motorway", "🛣", true, true, true, true);

		/// <summary>
		/// :railway_track: 🛤 railway track
		/// </summary>
		public static readonly EmojiInfo Emoji_railway_track = new EmojiInfo("railway_track", "1f6e4.png", "railway track", "🛤", true, true, true, true);

		/// <summary>
		/// :motor_boat: 🛥 motor boat
		/// </summary>
		public static readonly EmojiInfo Emoji_motor_boat = new EmojiInfo("motor_boat", "1f6e5.png", "motor boat", "🛥", true, true, true, true);

		/// <summary>
		/// :small_airplane: 🛩 small airplane
		/// </summary>
		public static readonly EmojiInfo Emoji_small_airplane = new EmojiInfo("small_airplane", "1f6e9.png", "small airplane", "🛩", true, true, true, true);

		/// <summary>
		/// :airplane_departure: 🛫 airplane departure
		/// </summary>
		public static readonly EmojiInfo Emoji_airplane_departure = new EmojiInfo("airplane_departure", "1f6eb.png", "airplane departure", "🛫", true, true, true, true);

		/// <summary>
		/// :airplane_arriving: 🛬 airplane arriving
		/// </summary>
		public static readonly EmojiInfo Emoji_airplane_arriving = new EmojiInfo("airplane_arriving", "1f6ec.png", "airplane arriving", "🛬", true, true, true, true);

		/// <summary>
		/// :satellite: 🛰 satellite
		/// </summary>
		public static readonly EmojiInfo Emoji_satellite2 = new EmojiInfo("satellite", "1f6f0.png", "satellite", "🛰", true, true, true, true);

		/// <summary>
		/// :passenger_ship: 🛳 passenger ship
		/// </summary>
		public static readonly EmojiInfo Emoji_passenger_ship = new EmojiInfo("passenger_ship", "1f6f3.png", "passenger ship", "🛳", true, true, true, true);

		/// <summary>
		/// :zipper_mouth_face: 🤐 zipper-mouth face
		/// </summary>
		public static readonly EmojiInfo Emoji_zipper_mouth_face = new EmojiInfo("zipper_mouth_face", "1f910.png", "zipper-mouth face", "🤐", true, true, true, false);

		/// <summary>
		/// :money_mouth_face: 🤑 money-mouth face
		/// </summary>
		public static readonly EmojiInfo Emoji_money_mouth_face = new EmojiInfo("money_mouth_face", "1f911.png", "money-mouth face", "🤑", true, true, true, false);

		/// <summary>
		/// :face_with_thermometer: 🤒 face with thermometer
		/// </summary>
		public static readonly EmojiInfo Emoji_face_with_thermometer = new EmojiInfo("face_with_thermometer", "1f912.png", "face with thermometer", "🤒", true, true, true, false);

		/// <summary>
		/// :nerd_face: 🤓 nerd face
		/// </summary>
		public static readonly EmojiInfo Emoji_nerd_face = new EmojiInfo("nerd_face", "1f913.png", "nerd face", "🤓", true, true, true, false);

		/// <summary>
		/// :thinking_face: 🤔 thinking face
		/// </summary>
		public static readonly EmojiInfo Emoji_thinking_face = new EmojiInfo("thinking_face", "1f914.png", "thinking face", "🤔", true, true, true, false);

		/// <summary>
		/// :face_with_head_bandage: 🤕 face with head-bandage
		/// </summary>
		public static readonly EmojiInfo Emoji_face_with_head_bandage = new EmojiInfo("face_with_head_bandage", "1f915.png", "face with head-bandage", "🤕", true, true, true, false);

		/// <summary>
		/// :robot_face: 🤖 robot face
		/// </summary>
		public static readonly EmojiInfo Emoji_robot_face = new EmojiInfo("robot_face", "1f916.png", "robot face", "🤖", true, true, true, false);

		/// <summary>
		/// :hugging_face: 🤗 hugging face
		/// </summary>
		public static readonly EmojiInfo Emoji_hugging_face = new EmojiInfo("hugging_face", "1f917.png", "hugging face", "🤗", true, true, true, false);

		/// <summary>
		/// :the_horns: 🤘 sign of the horns
		/// </summary>
		public static readonly EmojiInfo Emoji_the_horns = new EmojiInfo("the_horns", "1f918.png", "sign of the horns", "🤘", true, true, true, false);

		/// <summary>
		/// :crab: 🦀 crab
		/// </summary>
		public static readonly EmojiInfo Emoji_crab = new EmojiInfo("crab", "1f980.png", "crab", "🦀", true, true, true, false);

		/// <summary>
		/// :lion_face: 🦁 lion face
		/// </summary>
		public static readonly EmojiInfo Emoji_lion_face = new EmojiInfo("lion_face", "1f981.png", "lion face", "🦁", true, true, true, false);

		/// <summary>
		/// :scorpion: 🦂 scorpion
		/// </summary>
		public static readonly EmojiInfo Emoji_scorpion = new EmojiInfo("scorpion", "1f982.png", "scorpion", "🦂", true, true, true, false);

		/// <summary>
		/// :turkey: 🦃 turkey
		/// </summary>
		public static readonly EmojiInfo Emoji_turkey = new EmojiInfo("turkey", "1f983.png", "turkey", "🦃", true, true, true, false);

		/// <summary>
		/// :unicorn_face: 🦄 unicorn face
		/// </summary>
		public static readonly EmojiInfo Emoji_unicorn_face = new EmojiInfo("unicorn_face", "1f984.png", "unicorn face", "🦄", true, true, true, false);

		/// <summary>
		/// :cheese_wedge: 🧀 cheese wedge
		/// </summary>
		public static readonly EmojiInfo Emoji_cheese_wedge = new EmojiInfo("cheese_wedge", "1f9c0.png", "cheese wedge", "🧀", true, true, true, false);

		/// <summary>
		/// :hash: #⃣ hash key
		/// </summary>
		public static readonly EmojiInfo Emoji_hash = new EmojiInfo("hash", "0023-20e3.png", "hash key", "#⃣", true, true, true, true);

		/// <summary>
		/// :keycap_star: *⃣ 
		/// </summary>
		public static readonly EmojiInfo Emoji_keycap_star = new EmojiInfo("keycap_star", "002a-20e3.png", "", "*⃣", true, true, true, false);

		/// <summary>
		/// :zero: 0⃣ keycap 0
		/// </summary>
		public static readonly EmojiInfo Emoji_zero = new EmojiInfo("zero", "0030-20e3.png", "keycap 0", "0⃣", true, true, true, true);

		/// <summary>
		/// :one: 1⃣ keycap 1
		/// </summary>
		public static readonly EmojiInfo Emoji_one = new EmojiInfo("one", "0031-20e3.png", "keycap 1", "1⃣", true, true, true, true);

		/// <summary>
		/// :two: 2⃣ keycap 2
		/// </summary>
		public static readonly EmojiInfo Emoji_two = new EmojiInfo("two", "0032-20e3.png", "keycap 2", "2⃣", true, true, true, true);

		/// <summary>
		/// :three: 3⃣ keycap 3
		/// </summary>
		public static readonly EmojiInfo Emoji_three = new EmojiInfo("three", "0033-20e3.png", "keycap 3", "3⃣", true, true, true, true);

		/// <summary>
		/// :four: 4⃣ keycap 4
		/// </summary>
		public static readonly EmojiInfo Emoji_four = new EmojiInfo("four", "0034-20e3.png", "keycap 4", "4⃣", true, true, true, true);

		/// <summary>
		/// :five: 5⃣ keycap 5
		/// </summary>
		public static readonly EmojiInfo Emoji_five = new EmojiInfo("five", "0035-20e3.png", "keycap 5", "5⃣", true, true, true, true);

		/// <summary>
		/// :six: 6⃣ keycap 6
		/// </summary>
		public static readonly EmojiInfo Emoji_six = new EmojiInfo("six", "0036-20e3.png", "keycap 6", "6⃣", true, true, true, true);

		/// <summary>
		/// :seven: 7⃣ keycap 7
		/// </summary>
		public static readonly EmojiInfo Emoji_seven = new EmojiInfo("seven", "0037-20e3.png", "keycap 7", "7⃣", true, true, true, true);

		/// <summary>
		/// :eight: 8⃣ keycap 8
		/// </summary>
		public static readonly EmojiInfo Emoji_eight = new EmojiInfo("eight", "0038-20e3.png", "keycap 8", "8⃣", true, true, true, true);

		/// <summary>
		/// :nine: 9⃣ keycap 9
		/// </summary>
		public static readonly EmojiInfo Emoji_nine = new EmojiInfo("nine", "0039-20e3.png", "keycap 9", "9⃣", true, true, true, true);

		/// <summary>
		/// :flag-ac: 🇦🇨 regional indicator symbol letters ac
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ac = new EmojiInfo("flag-ac", "1f1e6-1f1e8.png", "regional indicator symbol letters ac", "🇦🇨", true, false, true, true);

		/// <summary>
		/// :flag-ad: 🇦🇩 regional indicator symbol letters ad
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ad = new EmojiInfo("flag-ad", "1f1e6-1f1e9.png", "regional indicator symbol letters ad", "🇦🇩", true, true, true, true);

		/// <summary>
		/// :flag-ae: 🇦🇪 regional indicator symbol letters ae
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ae = new EmojiInfo("flag-ae", "1f1e6-1f1ea.png", "regional indicator symbol letters ae", "🇦🇪", true, true, true, true);

		/// <summary>
		/// :flag-af: 🇦🇫 regional indicator symbol letters af
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_af = new EmojiInfo("flag-af", "1f1e6-1f1eb.png", "regional indicator symbol letters af", "🇦🇫", true, true, true, true);

		/// <summary>
		/// :flag-ag: 🇦🇬 regional indicator symbol letters ag
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ag = new EmojiInfo("flag-ag", "1f1e6-1f1ec.png", "regional indicator symbol letters ag", "🇦🇬", true, true, true, true);

		/// <summary>
		/// :flag-ai: 🇦🇮 regional indicator symbol letters ai
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ai = new EmojiInfo("flag-ai", "1f1e6-1f1ee.png", "regional indicator symbol letters ai", "🇦🇮", true, true, true, true);

		/// <summary>
		/// :flag-al: 🇦🇱 regional indicator symbol letters al
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_al = new EmojiInfo("flag-al", "1f1e6-1f1f1.png", "regional indicator symbol letters al", "🇦🇱", true, true, true, true);

		/// <summary>
		/// :flag-am: 🇦🇲 regional indicator symbol letters am
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_am = new EmojiInfo("flag-am", "1f1e6-1f1f2.png", "regional indicator symbol letters am", "🇦🇲", true, true, true, true);

		/// <summary>
		/// :flag-ao: 🇦🇴 regional indicator symbol letters ao
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ao = new EmojiInfo("flag-ao", "1f1e6-1f1f4.png", "regional indicator symbol letters ao", "🇦🇴", true, true, true, true);

		/// <summary>
		/// :flag-aq: 🇦🇶 regional indicator symbol letters aq
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_aq = new EmojiInfo("flag-aq", "1f1e6-1f1f6.png", "regional indicator symbol letters aq", "🇦🇶", true, false, true, false);

		/// <summary>
		/// :flag-ar: 🇦🇷 regional indicator symbol letters ar
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ar = new EmojiInfo("flag-ar", "1f1e6-1f1f7.png", "regional indicator symbol letters ar", "🇦🇷", true, true, true, true);

		/// <summary>
		/// :flag-as: 🇦🇸 regional indicator symbol letters as
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_as = new EmojiInfo("flag-as", "1f1e6-1f1f8.png", "regional indicator symbol letters as", "🇦🇸", true, true, true, false);

		/// <summary>
		/// :flag-at: 🇦🇹 regional indicator symbol letters at
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_at = new EmojiInfo("flag-at", "1f1e6-1f1f9.png", "regional indicator symbol letters at", "🇦🇹", true, true, true, true);

		/// <summary>
		/// :flag-au: 🇦🇺 regional indicator symbol letters au
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_au = new EmojiInfo("flag-au", "1f1e6-1f1fa.png", "regional indicator symbol letters au", "🇦🇺", true, true, true, true);

		/// <summary>
		/// :flag-aw: 🇦🇼 regional indicator symbol letters aw
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_aw = new EmojiInfo("flag-aw", "1f1e6-1f1fc.png", "regional indicator symbol letters aw", "🇦🇼", true, true, true, true);

		/// <summary>
		/// :flag-ax: 🇦🇽 regional indicator symbol letters ax
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ax = new EmojiInfo("flag-ax", "1f1e6-1f1fd.png", "regional indicator symbol letters ax", "🇦🇽", true, true, true, false);

		/// <summary>
		/// :flag-az: 🇦🇿 regional indicator symbol letters az
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_az = new EmojiInfo("flag-az", "1f1e6-1f1ff.png", "regional indicator symbol letters az", "🇦🇿", true, true, true, true);

		/// <summary>
		/// :flag-ba: 🇧🇦 regional indicator symbol letters ba
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ba = new EmojiInfo("flag-ba", "1f1e7-1f1e6.png", "regional indicator symbol letters ba", "🇧🇦", true, true, true, true);

		/// <summary>
		/// :flag-bb: 🇧🇧 regional indicator symbol letters bb
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bb = new EmojiInfo("flag-bb", "1f1e7-1f1e7.png", "regional indicator symbol letters bb", "🇧🇧", true, true, true, true);

		/// <summary>
		/// :flag-bd: 🇧🇩 regional indicator symbol letters bd
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bd = new EmojiInfo("flag-bd", "1f1e7-1f1e9.png", "regional indicator symbol letters bd", "🇧🇩", true, true, true, true);

		/// <summary>
		/// :flag-be: 🇧🇪 regional indicator symbol letters be
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_be = new EmojiInfo("flag-be", "1f1e7-1f1ea.png", "regional indicator symbol letters be", "🇧🇪", true, true, true, true);

		/// <summary>
		/// :flag-bf: 🇧🇫 regional indicator symbol letters bf
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bf = new EmojiInfo("flag-bf", "1f1e7-1f1eb.png", "regional indicator symbol letters bf", "🇧🇫", true, true, true, true);

		/// <summary>
		/// :flag-bg: 🇧🇬 regional indicator symbol letters bg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bg = new EmojiInfo("flag-bg", "1f1e7-1f1ec.png", "regional indicator symbol letters bg", "🇧🇬", true, true, true, true);

		/// <summary>
		/// :flag-bh: 🇧🇭 regional indicator symbol letters bh
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bh = new EmojiInfo("flag-bh", "1f1e7-1f1ed.png", "regional indicator symbol letters bh", "🇧🇭", true, true, true, true);

		/// <summary>
		/// :flag-bi: 🇧🇮 regional indicator symbol letters bi
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bi = new EmojiInfo("flag-bi", "1f1e7-1f1ee.png", "regional indicator symbol letters bi", "🇧🇮", true, true, true, true);

		/// <summary>
		/// :flag-bj: 🇧🇯 regional indicator symbol letters bj
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bj = new EmojiInfo("flag-bj", "1f1e7-1f1ef.png", "regional indicator symbol letters bj", "🇧🇯", true, true, true, true);

		/// <summary>
		/// :flag-bl: 🇧🇱 regional indicator symbol letters bl
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bl = new EmojiInfo("flag-bl", "1f1e7-1f1f1.png", "regional indicator symbol letters bl", "🇧🇱", true, false, true, false);

		/// <summary>
		/// :flag-bm: 🇧🇲 regional indicator symbol letters bm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bm = new EmojiInfo("flag-bm", "1f1e7-1f1f2.png", "regional indicator symbol letters bm", "🇧🇲", true, true, true, true);

		/// <summary>
		/// :flag-bn: 🇧🇳 regional indicator symbol letters bn
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bn = new EmojiInfo("flag-bn", "1f1e7-1f1f3.png", "regional indicator symbol letters bn", "🇧🇳", true, true, true, true);

		/// <summary>
		/// :flag-bo: 🇧🇴 regional indicator symbol letters bo
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bo = new EmojiInfo("flag-bo", "1f1e7-1f1f4.png", "regional indicator symbol letters bo", "🇧🇴", true, true, true, true);

		/// <summary>
		/// :flag-bq: 🇧🇶 regional indicator symbol letters bq
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bq = new EmojiInfo("flag-bq", "1f1e7-1f1f6.png", "regional indicator symbol letters bq", "🇧🇶", true, false, true, false);

		/// <summary>
		/// :flag-br: 🇧🇷 regional indicator symbol letters br
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_br = new EmojiInfo("flag-br", "1f1e7-1f1f7.png", "regional indicator symbol letters br", "🇧🇷", true, true, true, true);

		/// <summary>
		/// :flag-bs: 🇧🇸 regional indicator symbol letters bs
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bs = new EmojiInfo("flag-bs", "1f1e7-1f1f8.png", "regional indicator symbol letters bs", "🇧🇸", true, true, true, true);

		/// <summary>
		/// :flag-bt: 🇧🇹 regional indicator symbol letters bt
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bt = new EmojiInfo("flag-bt", "1f1e7-1f1f9.png", "regional indicator symbol letters bt", "🇧🇹", true, true, true, true);

		/// <summary>
		/// :flag-bv: 🇧🇻 regional indicator symbol letters bv
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bv = new EmojiInfo("flag-bv", "1f1e7-1f1fb.png", "regional indicator symbol letters bv", "🇧🇻", true, false, true, false);

		/// <summary>
		/// :flag-bw: 🇧🇼 regional indicator symbol letters bw
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bw = new EmojiInfo("flag-bw", "1f1e7-1f1fc.png", "regional indicator symbol letters bw", "🇧🇼", true, true, true, true);

		/// <summary>
		/// :flag-by: 🇧🇾 regional indicator symbol letters by
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_by = new EmojiInfo("flag-by", "1f1e7-1f1fe.png", "regional indicator symbol letters by", "🇧🇾", true, true, true, true);

		/// <summary>
		/// :flag-bz: 🇧🇿 regional indicator symbol letters bz
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_bz = new EmojiInfo("flag-bz", "1f1e7-1f1ff.png", "regional indicator symbol letters bz", "🇧🇿", true, true, true, true);

		/// <summary>
		/// :flag-ca: 🇨🇦 regional indicator symbol letters ca
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ca = new EmojiInfo("flag-ca", "1f1e8-1f1e6.png", "regional indicator symbol letters ca", "🇨🇦", true, true, true, true);

		/// <summary>
		/// :flag-cc: 🇨🇨 regional indicator symbol letters cc
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cc = new EmojiInfo("flag-cc", "1f1e8-1f1e8.png", "regional indicator symbol letters cc", "🇨🇨", true, true, true, false);

		/// <summary>
		/// :flag-cd: 🇨🇩 regional indicator symbol letters cd
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cd = new EmojiInfo("flag-cd", "1f1e8-1f1e9.png", "regional indicator symbol letters cd", "🇨🇩", true, true, true, true);

		/// <summary>
		/// :flag-cf: 🇨🇫 regional indicator symbol letters cf
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cf = new EmojiInfo("flag-cf", "1f1e8-1f1eb.png", "regional indicator symbol letters cf", "🇨🇫", true, true, true, true);

		/// <summary>
		/// :flag-cg: 🇨🇬 regional indicator symbol letters cg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cg = new EmojiInfo("flag-cg", "1f1e8-1f1ec.png", "regional indicator symbol letters cg", "🇨🇬", true, true, true, true);

		/// <summary>
		/// :flag-ch: 🇨🇭 regional indicator symbol letters ch
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ch = new EmojiInfo("flag-ch", "1f1e8-1f1ed.png", "regional indicator symbol letters ch", "🇨🇭", true, true, true, true);

		/// <summary>
		/// :flag-ci: 🇨🇮 regional indicator symbol letters ci
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ci = new EmojiInfo("flag-ci", "1f1e8-1f1ee.png", "regional indicator symbol letters ci", "🇨🇮", true, true, true, true);

		/// <summary>
		/// :flag-ck: 🇨🇰 regional indicator symbol letters ck
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ck = new EmojiInfo("flag-ck", "1f1e8-1f1f0.png", "regional indicator symbol letters ck", "🇨🇰", true, true, true, false);

		/// <summary>
		/// :flag-cl: 🇨🇱 regional indicator symbol letters cl
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cl = new EmojiInfo("flag-cl", "1f1e8-1f1f1.png", "regional indicator symbol letters cl", "🇨🇱", true, true, true, true);

		/// <summary>
		/// :flag-cm: 🇨🇲 regional indicator symbol letters cm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cm = new EmojiInfo("flag-cm", "1f1e8-1f1f2.png", "regional indicator symbol letters cm", "🇨🇲", true, true, true, true);

		/// <summary>
		/// :flag-cn: 🇨🇳 regional indicator symbol letters cn
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cn = new EmojiInfo("flag-cn", "1f1e8-1f1f3.png", "regional indicator symbol letters cn", "🇨🇳", true, true, true, true);

		/// <summary>
		/// :flag-co: 🇨🇴 regional indicator symbol letters co
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_co = new EmojiInfo("flag-co", "1f1e8-1f1f4.png", "regional indicator symbol letters co", "🇨🇴", true, true, true, true);

		/// <summary>
		/// :flag-cp: 🇨🇵 regional indicator symbol letters cp
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cp = new EmojiInfo("flag-cp", "1f1e8-1f1f5.png", "regional indicator symbol letters cp", "🇨🇵", true, false, true, false);

		/// <summary>
		/// :flag-cr: 🇨🇷 regional indicator symbol letters cr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cr = new EmojiInfo("flag-cr", "1f1e8-1f1f7.png", "regional indicator symbol letters cr", "🇨🇷", true, true, true, true);

		/// <summary>
		/// :flag-cu: 🇨🇺 regional indicator symbol letters cu
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cu = new EmojiInfo("flag-cu", "1f1e8-1f1fa.png", "regional indicator symbol letters cu", "🇨🇺", true, true, true, true);

		/// <summary>
		/// :flag-cv: 🇨🇻 regional indicator symbol letters cv
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cv = new EmojiInfo("flag-cv", "1f1e8-1f1fb.png", "regional indicator symbol letters cv", "🇨🇻", true, true, true, true);

		/// <summary>
		/// :flag-cw: 🇨🇼 regional indicator symbol letters cw
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cw = new EmojiInfo("flag-cw", "1f1e8-1f1fc.png", "regional indicator symbol letters cw", "🇨🇼", true, true, true, false);

		/// <summary>
		/// :flag-cx: 🇨🇽 regional indicator symbol letters cx
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cx = new EmojiInfo("flag-cx", "1f1e8-1f1fd.png", "regional indicator symbol letters cx", "🇨🇽", true, true, true, false);

		/// <summary>
		/// :flag-cy: 🇨🇾 regional indicator symbol letters cy
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cy = new EmojiInfo("flag-cy", "1f1e8-1f1fe.png", "regional indicator symbol letters cy", "🇨🇾", true, true, true, true);

		/// <summary>
		/// :flag-cz: 🇨🇿 regional indicator symbol letters cz
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_cz = new EmojiInfo("flag-cz", "1f1e8-1f1ff.png", "regional indicator symbol letters cz", "🇨🇿", true, true, true, true);

		/// <summary>
		/// :flag-de: 🇩🇪 regional indicator symbol letters de
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_de = new EmojiInfo("flag-de", "1f1e9-1f1ea.png", "regional indicator symbol letters de", "🇩🇪", true, true, true, true);

		/// <summary>
		/// :flag-dg: 🇩🇬 regional indicator symbol letters dg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_dg = new EmojiInfo("flag-dg", "1f1e9-1f1ec.png", "regional indicator symbol letters dg", "🇩🇬", true, false, true, false);

		/// <summary>
		/// :flag-dj: 🇩🇯 regional indicator symbol letters dj
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_dj = new EmojiInfo("flag-dj", "1f1e9-1f1ef.png", "regional indicator symbol letters dj", "🇩🇯", true, true, true, true);

		/// <summary>
		/// :flag-dk: 🇩🇰 regional indicator symbol letters dk
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_dk = new EmojiInfo("flag-dk", "1f1e9-1f1f0.png", "regional indicator symbol letters dk", "🇩🇰", true, true, true, true);

		/// <summary>
		/// :flag-dm: 🇩🇲 regional indicator symbol letters dm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_dm = new EmojiInfo("flag-dm", "1f1e9-1f1f2.png", "regional indicator symbol letters dm", "🇩🇲", true, true, true, true);

		/// <summary>
		/// :flag-do: 🇩🇴 regional indicator symbol letters do
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_do = new EmojiInfo("flag-do", "1f1e9-1f1f4.png", "regional indicator symbol letters do", "🇩🇴", true, true, true, true);

		/// <summary>
		/// :flag-dz: 🇩🇿 regional indicator symbol letters dz
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_dz = new EmojiInfo("flag-dz", "1f1e9-1f1ff.png", "regional indicator symbol letters dz", "🇩🇿", true, true, true, true);

		/// <summary>
		/// :flag-ea: 🇪🇦 regional indicator symbol letters ea
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ea = new EmojiInfo("flag-ea", "1f1ea-1f1e6.png", "regional indicator symbol letters ea", "🇪🇦", true, false, true, false);

		/// <summary>
		/// :flag-ec: 🇪🇨 regional indicator symbol letters ec
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ec = new EmojiInfo("flag-ec", "1f1ea-1f1e8.png", "regional indicator symbol letters ec", "🇪🇨", true, true, true, true);

		/// <summary>
		/// :flag-ee: 🇪🇪 regional indicator symbol letters ee
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ee = new EmojiInfo("flag-ee", "1f1ea-1f1ea.png", "regional indicator symbol letters ee", "🇪🇪", true, true, true, true);

		/// <summary>
		/// :flag-eg: 🇪🇬 regional indicator symbol letters eg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_eg = new EmojiInfo("flag-eg", "1f1ea-1f1ec.png", "regional indicator symbol letters eg", "🇪🇬", true, true, true, true);

		/// <summary>
		/// :flag-eh: 🇪🇭 regional indicator symbol letters eh
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_eh = new EmojiInfo("flag-eh", "1f1ea-1f1ed.png", "regional indicator symbol letters eh", "🇪🇭", true, false, true, true);

		/// <summary>
		/// :flag-er: 🇪🇷 regional indicator symbol letters er
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_er = new EmojiInfo("flag-er", "1f1ea-1f1f7.png", "regional indicator symbol letters er", "🇪🇷", true, true, true, true);

		/// <summary>
		/// :flag-es: 🇪🇸 regional indicator symbol letters es
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_es = new EmojiInfo("flag-es", "1f1ea-1f1f8.png", "regional indicator symbol letters es", "🇪🇸", true, true, true, true);

		/// <summary>
		/// :flag-et: 🇪🇹 regional indicator symbol letters et
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_et = new EmojiInfo("flag-et", "1f1ea-1f1f9.png", "regional indicator symbol letters et", "🇪🇹", true, true, true, true);

		/// <summary>
		/// :flag-eu: 🇪🇺 regional indicator symbol letters eu
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_eu = new EmojiInfo("flag-eu", "1f1ea-1f1fa.png", "regional indicator symbol letters eu", "🇪🇺", true, true, true, false);

		/// <summary>
		/// :flag-fi: 🇫🇮 regional indicator symbol letters fi
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_fi = new EmojiInfo("flag-fi", "1f1eb-1f1ee.png", "regional indicator symbol letters fi", "🇫🇮", true, true, true, true);

		/// <summary>
		/// :flag-fj: 🇫🇯 regional indicator symbol letters fj
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_fj = new EmojiInfo("flag-fj", "1f1eb-1f1ef.png", "regional indicator symbol letters fj", "🇫🇯", true, true, true, true);

		/// <summary>
		/// :flag-fk: 🇫🇰 regional indicator symbol letters fk
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_fk = new EmojiInfo("flag-fk", "1f1eb-1f1f0.png", "regional indicator symbol letters fk", "🇫🇰", true, false, true, true);

		/// <summary>
		/// :flag-fm: 🇫🇲 regional indicator symbol letters fm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_fm = new EmojiInfo("flag-fm", "1f1eb-1f1f2.png", "regional indicator symbol letters fm", "🇫🇲", true, true, true, true);

		/// <summary>
		/// :flag-fo: 🇫🇴 regional indicator symbol letters fo
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_fo = new EmojiInfo("flag-fo", "1f1eb-1f1f4.png", "regional indicator symbol letters fo", "🇫🇴", true, true, true, true);

		/// <summary>
		/// :flag-fr: 🇫🇷 regional indicator symbol letters fr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_fr = new EmojiInfo("flag-fr", "1f1eb-1f1f7.png", "regional indicator symbol letters fr", "🇫🇷", true, true, true, true);

		/// <summary>
		/// :flag-ga: 🇬🇦 regional indicator symbol letters ga
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ga = new EmojiInfo("flag-ga", "1f1ec-1f1e6.png", "regional indicator symbol letters ga", "🇬🇦", true, true, true, true);

		/// <summary>
		/// :flag-gb: 🇬🇧 regional indicator symbol letters gb
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gb = new EmojiInfo("flag-gb", "1f1ec-1f1e7.png", "regional indicator symbol letters gb", "🇬🇧", true, true, true, true);

		/// <summary>
		/// :flag-gd: 🇬🇩 regional indicator symbol letters gd
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gd = new EmojiInfo("flag-gd", "1f1ec-1f1e9.png", "regional indicator symbol letters gd", "🇬🇩", true, true, true, true);

		/// <summary>
		/// :flag-ge: 🇬🇪 regional indicator symbol letters ge
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ge = new EmojiInfo("flag-ge", "1f1ec-1f1ea.png", "regional indicator symbol letters ge", "🇬🇪", true, true, true, true);

		/// <summary>
		/// :flag-gf: 🇬🇫 regional indicator symbol letters gf
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gf = new EmojiInfo("flag-gf", "1f1ec-1f1eb.png", "regional indicator symbol letters gf", "🇬🇫", true, false, true, false);

		/// <summary>
		/// :flag-gg: 🇬🇬 regional indicator symbol letters gg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gg = new EmojiInfo("flag-gg", "1f1ec-1f1ec.png", "regional indicator symbol letters gg", "🇬🇬", true, true, true, false);

		/// <summary>
		/// :flag-gh: 🇬🇭 regional indicator symbol letters gh
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gh = new EmojiInfo("flag-gh", "1f1ec-1f1ed.png", "regional indicator symbol letters gh", "🇬🇭", true, true, true, true);

		/// <summary>
		/// :flag-gi: 🇬🇮 regional indicator symbol letters gi
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gi = new EmojiInfo("flag-gi", "1f1ec-1f1ee.png", "regional indicator symbol letters gi", "🇬🇮", true, true, true, true);

		/// <summary>
		/// :flag-gl: 🇬🇱 regional indicator symbol letters gl
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gl = new EmojiInfo("flag-gl", "1f1ec-1f1f1.png", "regional indicator symbol letters gl", "🇬🇱", true, true, true, true);

		/// <summary>
		/// :flag-gm: 🇬🇲 regional indicator symbol letters gm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gm = new EmojiInfo("flag-gm", "1f1ec-1f1f2.png", "regional indicator symbol letters gm", "🇬🇲", true, true, true, true);

		/// <summary>
		/// :flag-gn: 🇬🇳 regional indicator symbol letters gn
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gn = new EmojiInfo("flag-gn", "1f1ec-1f1f3.png", "regional indicator symbol letters gn", "🇬🇳", true, true, true, true);

		/// <summary>
		/// :flag-gp: 🇬🇵 regional indicator symbol letters gp
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gp = new EmojiInfo("flag-gp", "1f1ec-1f1f5.png", "regional indicator symbol letters gp", "🇬🇵", true, false, true, false);

		/// <summary>
		/// :flag-gq: 🇬🇶 regional indicator symbol letters gq
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gq = new EmojiInfo("flag-gq", "1f1ec-1f1f6.png", "regional indicator symbol letters gq", "🇬🇶", true, true, true, true);

		/// <summary>
		/// :flag-gr: 🇬🇷 regional indicator symbol letters gr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gr = new EmojiInfo("flag-gr", "1f1ec-1f1f7.png", "regional indicator symbol letters gr", "🇬🇷", true, true, true, true);

		/// <summary>
		/// :flag-gs: 🇬🇸 regional indicator symbol letters gs
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gs = new EmojiInfo("flag-gs", "1f1ec-1f1f8.png", "regional indicator symbol letters gs", "🇬🇸", true, false, true, false);

		/// <summary>
		/// :flag-gt: 🇬🇹 regional indicator symbol letters gt
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gt = new EmojiInfo("flag-gt", "1f1ec-1f1f9.png", "regional indicator symbol letters gt", "🇬🇹", true, true, true, true);

		/// <summary>
		/// :flag-gu: 🇬🇺 regional indicator symbol letters gu
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gu = new EmojiInfo("flag-gu", "1f1ec-1f1fa.png", "regional indicator symbol letters gu", "🇬🇺", true, true, true, true);

		/// <summary>
		/// :flag-gw: 🇬🇼 regional indicator symbol letters gw
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gw = new EmojiInfo("flag-gw", "1f1ec-1f1fc.png", "regional indicator symbol letters gw", "🇬🇼", true, true, true, true);

		/// <summary>
		/// :flag-gy: 🇬🇾 regional indicator symbol letters gy
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_gy = new EmojiInfo("flag-gy", "1f1ec-1f1fe.png", "regional indicator symbol letters gy", "🇬🇾", true, true, true, true);

		/// <summary>
		/// :flag-hk: 🇭🇰 regional indicator symbol letters hk
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_hk = new EmojiInfo("flag-hk", "1f1ed-1f1f0.png", "regional indicator symbol letters hk", "🇭🇰", true, true, true, true);

		/// <summary>
		/// :flag-hm: 🇭🇲 regional indicator symbol letters hm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_hm = new EmojiInfo("flag-hm", "1f1ed-1f1f2.png", "regional indicator symbol letters hm", "🇭🇲", true, false, true, false);

		/// <summary>
		/// :flag-hn: 🇭🇳 regional indicator symbol letters hn
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_hn = new EmojiInfo("flag-hn", "1f1ed-1f1f3.png", "regional indicator symbol letters hn", "🇭🇳", true, true, true, true);

		/// <summary>
		/// :flag-hr: 🇭🇷 regional indicator symbol letters hr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_hr = new EmojiInfo("flag-hr", "1f1ed-1f1f7.png", "regional indicator symbol letters hr", "🇭🇷", true, true, true, true);

		/// <summary>
		/// :flag-ht: 🇭🇹 regional indicator symbol letters ht
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ht = new EmojiInfo("flag-ht", "1f1ed-1f1f9.png", "regional indicator symbol letters ht", "🇭🇹", true, true, true, true);

		/// <summary>
		/// :flag-hu: 🇭🇺 regional indicator symbol letters hu
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_hu = new EmojiInfo("flag-hu", "1f1ed-1f1fa.png", "regional indicator symbol letters hu", "🇭🇺", true, true, true, true);

		/// <summary>
		/// :flag-ic: 🇮🇨 regional indicator symbol letters ic
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ic = new EmojiInfo("flag-ic", "1f1ee-1f1e8.png", "regional indicator symbol letters ic", "🇮🇨", true, false, true, false);

		/// <summary>
		/// :flag-id: 🇮🇩 regional indicator symbol letters id
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_id = new EmojiInfo("flag-id", "1f1ee-1f1e9.png", "regional indicator symbol letters id", "🇮🇩", true, true, true, true);

		/// <summary>
		/// :flag-ie: 🇮🇪 regional indicator symbol letters ie
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ie = new EmojiInfo("flag-ie", "1f1ee-1f1ea.png", "regional indicator symbol letters ie", "🇮🇪", true, true, true, true);

		/// <summary>
		/// :flag-il: 🇮🇱 regional indicator symbol letters il
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_il = new EmojiInfo("flag-il", "1f1ee-1f1f1.png", "regional indicator symbol letters il", "🇮🇱", true, true, true, true);

		/// <summary>
		/// :flag-im: 🇮🇲 regional indicator symbol letters im
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_im = new EmojiInfo("flag-im", "1f1ee-1f1f2.png", "regional indicator symbol letters im", "🇮🇲", true, true, true, false);

		/// <summary>
		/// :flag-in: 🇮🇳 regional indicator symbol letters in
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_in = new EmojiInfo("flag-in", "1f1ee-1f1f3.png", "regional indicator symbol letters in", "🇮🇳", true, true, true, true);

		/// <summary>
		/// :flag-io: 🇮🇴 regional indicator symbol letters io
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_io = new EmojiInfo("flag-io", "1f1ee-1f1f4.png", "regional indicator symbol letters io", "🇮🇴", true, true, true, false);

		/// <summary>
		/// :flag-iq: 🇮🇶 regional indicator symbol letters iq
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_iq = new EmojiInfo("flag-iq", "1f1ee-1f1f6.png", "regional indicator symbol letters iq", "🇮🇶", true, true, true, true);

		/// <summary>
		/// :flag-ir: 🇮🇷 regional indicator symbol letters ir
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ir = new EmojiInfo("flag-ir", "1f1ee-1f1f7.png", "regional indicator symbol letters ir", "🇮🇷", true, true, true, true);

		/// <summary>
		/// :flag-is: 🇮🇸 regional indicator symbol letters is
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_is = new EmojiInfo("flag-is", "1f1ee-1f1f8.png", "regional indicator symbol letters is", "🇮🇸", true, true, true, true);

		/// <summary>
		/// :flag-it: 🇮🇹 regional indicator symbol letters it
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_it = new EmojiInfo("flag-it", "1f1ee-1f1f9.png", "regional indicator symbol letters it", "🇮🇹", true, true, true, true);

		/// <summary>
		/// :flag-je: 🇯🇪 regional indicator symbol letters je
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_je = new EmojiInfo("flag-je", "1f1ef-1f1ea.png", "regional indicator symbol letters je", "🇯🇪", true, true, true, true);

		/// <summary>
		/// :flag-jm: 🇯🇲 regional indicator symbol letters jm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_jm = new EmojiInfo("flag-jm", "1f1ef-1f1f2.png", "regional indicator symbol letters jm", "🇯🇲", true, true, true, true);

		/// <summary>
		/// :flag-jo: 🇯🇴 regional indicator symbol letters jo
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_jo = new EmojiInfo("flag-jo", "1f1ef-1f1f4.png", "regional indicator symbol letters jo", "🇯🇴", true, true, true, true);

		/// <summary>
		/// :flag-jp: 🇯🇵 regional indicator symbol letters jp
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_jp = new EmojiInfo("flag-jp", "1f1ef-1f1f5.png", "regional indicator symbol letters jp", "🇯🇵", true, true, true, true);

		/// <summary>
		/// :flag-ke: 🇰🇪 regional indicator symbol letters ke
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ke = new EmojiInfo("flag-ke", "1f1f0-1f1ea.png", "regional indicator symbol letters ke", "🇰🇪", true, true, true, true);

		/// <summary>
		/// :flag-kg: 🇰🇬 regional indicator symbol letters kg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_kg = new EmojiInfo("flag-kg", "1f1f0-1f1ec.png", "regional indicator symbol letters kg", "🇰🇬", true, true, true, true);

		/// <summary>
		/// :flag-kh: 🇰🇭 regional indicator symbol letters kh
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_kh = new EmojiInfo("flag-kh", "1f1f0-1f1ed.png", "regional indicator symbol letters kh", "🇰🇭", true, true, true, true);

		/// <summary>
		/// :flag-ki: 🇰🇮 regional indicator symbol letters ki
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ki = new EmojiInfo("flag-ki", "1f1f0-1f1ee.png", "regional indicator symbol letters ki", "🇰🇮", true, true, true, true);

		/// <summary>
		/// :flag-km: 🇰🇲 regional indicator symbol letters km
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_km = new EmojiInfo("flag-km", "1f1f0-1f1f2.png", "regional indicator symbol letters km", "🇰🇲", true, true, true, true);

		/// <summary>
		/// :flag-kn: 🇰🇳 regional indicator symbol letters kn
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_kn = new EmojiInfo("flag-kn", "1f1f0-1f1f3.png", "regional indicator symbol letters kn", "🇰🇳", true, true, true, true);

		/// <summary>
		/// :flag-kp: 🇰🇵 regional indicator symbol letters kp
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_kp = new EmojiInfo("flag-kp", "1f1f0-1f1f5.png", "regional indicator symbol letters kp", "🇰🇵", true, true, true, true);

		/// <summary>
		/// :flag-kr: 🇰🇷 regional indicator symbol letters kr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_kr = new EmojiInfo("flag-kr", "1f1f0-1f1f7.png", "regional indicator symbol letters kr", "🇰🇷", true, true, true, true);

		/// <summary>
		/// :flag-kw: 🇰🇼 regional indicator symbol letters kw
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_kw = new EmojiInfo("flag-kw", "1f1f0-1f1fc.png", "regional indicator symbol letters kw", "🇰🇼", true, true, true, true);

		/// <summary>
		/// :flag-ky: 🇰🇾 regional indicator symbol letters ky
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ky = new EmojiInfo("flag-ky", "1f1f0-1f1fe.png", "regional indicator symbol letters ky", "🇰🇾", true, true, true, true);

		/// <summary>
		/// :flag-kz: 🇰🇿 regional indicator symbol letters kz
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_kz = new EmojiInfo("flag-kz", "1f1f0-1f1ff.png", "regional indicator symbol letters kz", "🇰🇿", true, true, true, true);

		/// <summary>
		/// :flag-la: 🇱🇦 regional indicator symbol letters la
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_la = new EmojiInfo("flag-la", "1f1f1-1f1e6.png", "regional indicator symbol letters la", "🇱🇦", true, true, true, true);

		/// <summary>
		/// :flag-lb: 🇱🇧 regional indicator symbol letters lb
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_lb = new EmojiInfo("flag-lb", "1f1f1-1f1e7.png", "regional indicator symbol letters lb", "🇱🇧", true, true, true, true);

		/// <summary>
		/// :flag-lc: 🇱🇨 regional indicator symbol letters lc
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_lc = new EmojiInfo("flag-lc", "1f1f1-1f1e8.png", "regional indicator symbol letters lc", "🇱🇨", true, true, true, true);

		/// <summary>
		/// :flag-li: 🇱🇮 regional indicator symbol letters li
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_li = new EmojiInfo("flag-li", "1f1f1-1f1ee.png", "regional indicator symbol letters li", "🇱🇮", true, true, true, true);

		/// <summary>
		/// :flag-lk: 🇱🇰 regional indicator symbol letters lk
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_lk = new EmojiInfo("flag-lk", "1f1f1-1f1f0.png", "regional indicator symbol letters lk", "🇱🇰", true, true, true, true);

		/// <summary>
		/// :flag-lr: 🇱🇷 regional indicator symbol letters lr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_lr = new EmojiInfo("flag-lr", "1f1f1-1f1f7.png", "regional indicator symbol letters lr", "🇱🇷", true, true, true, true);

		/// <summary>
		/// :flag-ls: 🇱🇸 regional indicator symbol letters ls
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ls = new EmojiInfo("flag-ls", "1f1f1-1f1f8.png", "regional indicator symbol letters ls", "🇱🇸", true, true, true, true);

		/// <summary>
		/// :flag-lt: 🇱🇹 regional indicator symbol letters lt
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_lt = new EmojiInfo("flag-lt", "1f1f1-1f1f9.png", "regional indicator symbol letters lt", "🇱🇹", true, true, true, true);

		/// <summary>
		/// :flag-lu: 🇱🇺 regional indicator symbol letters lu
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_lu = new EmojiInfo("flag-lu", "1f1f1-1f1fa.png", "regional indicator symbol letters lu", "🇱🇺", true, true, true, true);

		/// <summary>
		/// :flag-lv: 🇱🇻 regional indicator symbol letters lv
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_lv = new EmojiInfo("flag-lv", "1f1f1-1f1fb.png", "regional indicator symbol letters lv", "🇱🇻", true, true, true, true);

		/// <summary>
		/// :flag-ly: 🇱🇾 regional indicator symbol letters ly
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ly = new EmojiInfo("flag-ly", "1f1f1-1f1fe.png", "regional indicator symbol letters ly", "🇱🇾", true, true, true, true);

		/// <summary>
		/// :flag-ma: 🇲🇦 regional indicator symbol letters ma
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ma = new EmojiInfo("flag-ma", "1f1f2-1f1e6.png", "regional indicator symbol letters ma", "🇲🇦", true, true, true, true);

		/// <summary>
		/// :flag-mc: 🇲🇨 regional indicator symbol letters mc
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mc = new EmojiInfo("flag-mc", "1f1f2-1f1e8.png", "regional indicator symbol letters mc", "🇲🇨", true, true, true, true);

		/// <summary>
		/// :flag-md: 🇲🇩 regional indicator symbol letters md
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_md = new EmojiInfo("flag-md", "1f1f2-1f1e9.png", "regional indicator symbol letters md", "🇲🇩", true, true, true, true);

		/// <summary>
		/// :flag-me: 🇲🇪 regional indicator symbol letters me
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_me = new EmojiInfo("flag-me", "1f1f2-1f1ea.png", "regional indicator symbol letters me", "🇲🇪", true, true, true, true);

		/// <summary>
		/// :flag-mf: 🇲🇫 regional indicator symbol letters mf
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mf = new EmojiInfo("flag-mf", "1f1f2-1f1eb.png", "regional indicator symbol letters mf", "🇲🇫", true, false, true, false);

		/// <summary>
		/// :flag-mg: 🇲🇬 regional indicator symbol letters mg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mg = new EmojiInfo("flag-mg", "1f1f2-1f1ec.png", "regional indicator symbol letters mg", "🇲🇬", true, true, true, true);

		/// <summary>
		/// :flag-mh: 🇲🇭 regional indicator symbol letters mh
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mh = new EmojiInfo("flag-mh", "1f1f2-1f1ed.png", "regional indicator symbol letters mh", "🇲🇭", true, true, true, true);

		/// <summary>
		/// :flag-mk: 🇲🇰 regional indicator symbol letters mk
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mk = new EmojiInfo("flag-mk", "1f1f2-1f1f0.png", "regional indicator symbol letters mk", "🇲🇰", true, true, true, true);

		/// <summary>
		/// :flag-ml: 🇲🇱 regional indicator symbol letters ml
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ml = new EmojiInfo("flag-ml", "1f1f2-1f1f1.png", "regional indicator symbol letters ml", "🇲🇱", true, true, true, true);

		/// <summary>
		/// :flag-mm: 🇲🇲 regional indicator symbol letters mm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mm = new EmojiInfo("flag-mm", "1f1f2-1f1f2.png", "regional indicator symbol letters mm", "🇲🇲", true, true, true, true);

		/// <summary>
		/// :flag-mn: 🇲🇳 regional indicator symbol letters mn
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mn = new EmojiInfo("flag-mn", "1f1f2-1f1f3.png", "regional indicator symbol letters mn", "🇲🇳", true, true, true, true);

		/// <summary>
		/// :flag-mo: 🇲🇴 regional indicator symbol letters mo
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mo = new EmojiInfo("flag-mo", "1f1f2-1f1f4.png", "regional indicator symbol letters mo", "🇲🇴", true, true, true, true);

		/// <summary>
		/// :flag-mp: 🇲🇵 regional indicator symbol letters mp
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mp = new EmojiInfo("flag-mp", "1f1f2-1f1f5.png", "regional indicator symbol letters mp", "🇲🇵", true, true, true, false);

		/// <summary>
		/// :flag-mq: 🇲🇶 regional indicator symbol letters mq
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mq = new EmojiInfo("flag-mq", "1f1f2-1f1f6.png", "regional indicator symbol letters mq", "🇲🇶", true, false, true, false);

		/// <summary>
		/// :flag-mr: 🇲🇷 regional indicator symbol letters mr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mr = new EmojiInfo("flag-mr", "1f1f2-1f1f7.png", "regional indicator symbol letters mr", "🇲🇷", true, true, true, true);

		/// <summary>
		/// :flag-ms: 🇲🇸 regional indicator symbol letters ms
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ms = new EmojiInfo("flag-ms", "1f1f2-1f1f8.png", "regional indicator symbol letters ms", "🇲🇸", true, true, true, true);

		/// <summary>
		/// :flag-mt: 🇲🇹 regional indicator symbol letters mt
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mt = new EmojiInfo("flag-mt", "1f1f2-1f1f9.png", "regional indicator symbol letters mt", "🇲🇹", true, true, true, true);

		/// <summary>
		/// :flag-mu: 🇲🇺 regional indicator symbol letters mu
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mu = new EmojiInfo("flag-mu", "1f1f2-1f1fa.png", "regional indicator symbol letters mu", "🇲🇺", true, true, true, true);

		/// <summary>
		/// :flag-mv: 🇲🇻 regional indicator symbol letters mv
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mv = new EmojiInfo("flag-mv", "1f1f2-1f1fb.png", "regional indicator symbol letters mv", "🇲🇻", true, true, true, true);

		/// <summary>
		/// :flag-mw: 🇲🇼 regional indicator symbol letters mw
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mw = new EmojiInfo("flag-mw", "1f1f2-1f1fc.png", "regional indicator symbol letters mw", "🇲🇼", true, true, true, true);

		/// <summary>
		/// :flag-mx: 🇲🇽 regional indicator symbol letters mx
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mx = new EmojiInfo("flag-mx", "1f1f2-1f1fd.png", "regional indicator symbol letters mx", "🇲🇽", true, true, true, true);

		/// <summary>
		/// :flag-my: 🇲🇾 regional indicator symbol letters my
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_my = new EmojiInfo("flag-my", "1f1f2-1f1fe.png", "regional indicator symbol letters my", "🇲🇾", true, true, true, true);

		/// <summary>
		/// :flag-mz: 🇲🇿 regional indicator symbol letters mz
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_mz = new EmojiInfo("flag-mz", "1f1f2-1f1ff.png", "regional indicator symbol letters mz", "🇲🇿", true, true, true, true);

		/// <summary>
		/// :flag-na: 🇳🇦 regional indicator symbol letters na
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_na = new EmojiInfo("flag-na", "1f1f3-1f1e6.png", "regional indicator symbol letters na", "🇳🇦", true, true, true, true);

		/// <summary>
		/// :flag-nc: 🇳🇨 regional indicator symbol letters nc
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_nc = new EmojiInfo("flag-nc", "1f1f3-1f1e8.png", "regional indicator symbol letters nc", "🇳🇨", true, false, true, true);

		/// <summary>
		/// :flag-ne: 🇳🇪 regional indicator symbol letters ne
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ne = new EmojiInfo("flag-ne", "1f1f3-1f1ea.png", "regional indicator symbol letters ne", "🇳🇪", true, true, true, true);

		/// <summary>
		/// :flag-nf: 🇳🇫 regional indicator symbol letters nf
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_nf = new EmojiInfo("flag-nf", "1f1f3-1f1eb.png", "regional indicator symbol letters nf", "🇳🇫", true, true, true, false);

		/// <summary>
		/// :flag-ng: 🇳🇬 regional indicator symbol letters ng
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ng = new EmojiInfo("flag-ng", "1f1f3-1f1ec.png", "regional indicator symbol letters ng", "🇳🇬", true, true, true, true);

		/// <summary>
		/// :flag-ni: 🇳🇮 regional indicator symbol letters ni
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ni = new EmojiInfo("flag-ni", "1f1f3-1f1ee.png", "regional indicator symbol letters ni", "🇳🇮", true, true, true, true);

		/// <summary>
		/// :flag-nl: 🇳🇱 regional indicator symbol letters nl
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_nl = new EmojiInfo("flag-nl", "1f1f3-1f1f1.png", "regional indicator symbol letters nl", "🇳🇱", true, true, true, true);

		/// <summary>
		/// :flag-no: 🇳🇴 regional indicator symbol letters no
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_no = new EmojiInfo("flag-no", "1f1f3-1f1f4.png", "regional indicator symbol letters no", "🇳🇴", true, true, true, true);

		/// <summary>
		/// :flag-np: 🇳🇵 regional indicator symbol letters np
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_np = new EmojiInfo("flag-np", "1f1f3-1f1f5.png", "regional indicator symbol letters np", "🇳🇵", true, true, true, true);

		/// <summary>
		/// :flag-nr: 🇳🇷 regional indicator symbol letters nr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_nr = new EmojiInfo("flag-nr", "1f1f3-1f1f7.png", "regional indicator symbol letters nr", "🇳🇷", true, true, true, true);

		/// <summary>
		/// :flag-nu: 🇳🇺 regional indicator symbol letters nu
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_nu = new EmojiInfo("flag-nu", "1f1f3-1f1fa.png", "regional indicator symbol letters nu", "🇳🇺", true, true, true, true);

		/// <summary>
		/// :flag-nz: 🇳🇿 regional indicator symbol letters nz
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_nz = new EmojiInfo("flag-nz", "1f1f3-1f1ff.png", "regional indicator symbol letters nz", "🇳🇿", true, true, true, true);

		/// <summary>
		/// :flag-om: 🇴🇲 regional indicator symbol letters om
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_om = new EmojiInfo("flag-om", "1f1f4-1f1f2.png", "regional indicator symbol letters om", "🇴🇲", true, true, true, true);

		/// <summary>
		/// :flag-pa: 🇵🇦 regional indicator symbol letters pa
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pa = new EmojiInfo("flag-pa", "1f1f5-1f1e6.png", "regional indicator symbol letters pa", "🇵🇦", true, true, true, true);

		/// <summary>
		/// :flag-pe: 🇵🇪 regional indicator symbol letters pe
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pe = new EmojiInfo("flag-pe", "1f1f5-1f1ea.png", "regional indicator symbol letters pe", "🇵🇪", true, true, true, true);

		/// <summary>
		/// :flag-pf: 🇵🇫 regional indicator symbol letters pf
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pf = new EmojiInfo("flag-pf", "1f1f5-1f1eb.png", "regional indicator symbol letters pf", "🇵🇫", true, true, true, true);

		/// <summary>
		/// :flag-pg: 🇵🇬 regional indicator symbol letters pg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pg = new EmojiInfo("flag-pg", "1f1f5-1f1ec.png", "regional indicator symbol letters pg", "🇵🇬", true, true, true, true);

		/// <summary>
		/// :flag-ph: 🇵🇭 regional indicator symbol letters ph
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ph = new EmojiInfo("flag-ph", "1f1f5-1f1ed.png", "regional indicator symbol letters ph", "🇵🇭", true, true, true, true);

		/// <summary>
		/// :flag-pk: 🇵🇰 regional indicator symbol letters pk
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pk = new EmojiInfo("flag-pk", "1f1f5-1f1f0.png", "regional indicator symbol letters pk", "🇵🇰", true, true, true, true);

		/// <summary>
		/// :flag-pl: 🇵🇱 regional indicator symbol letters pl
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pl = new EmojiInfo("flag-pl", "1f1f5-1f1f1.png", "regional indicator symbol letters pl", "🇵🇱", true, true, true, true);

		/// <summary>
		/// :flag-pm: 🇵🇲 regional indicator symbol letters pm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pm = new EmojiInfo("flag-pm", "1f1f5-1f1f2.png", "regional indicator symbol letters pm", "🇵🇲", true, false, true, false);

		/// <summary>
		/// :flag-pn: 🇵🇳 regional indicator symbol letters pn
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pn = new EmojiInfo("flag-pn", "1f1f5-1f1f3.png", "regional indicator symbol letters pn", "🇵🇳", true, true, true, false);

		/// <summary>
		/// :flag-pr: 🇵🇷 regional indicator symbol letters pr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pr = new EmojiInfo("flag-pr", "1f1f5-1f1f7.png", "regional indicator symbol letters pr", "🇵🇷", true, true, true, true);

		/// <summary>
		/// :flag-ps: 🇵🇸 regional indicator symbol letters ps
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ps = new EmojiInfo("flag-ps", "1f1f5-1f1f8.png", "regional indicator symbol letters ps", "🇵🇸", true, true, true, true);

		/// <summary>
		/// :flag-pt: 🇵🇹 regional indicator symbol letters pt
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pt = new EmojiInfo("flag-pt", "1f1f5-1f1f9.png", "regional indicator symbol letters pt", "🇵🇹", true, true, true, true);

		/// <summary>
		/// :flag-pw: 🇵🇼 regional indicator symbol letters pw
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_pw = new EmojiInfo("flag-pw", "1f1f5-1f1fc.png", "regional indicator symbol letters pw", "🇵🇼", true, true, true, true);

		/// <summary>
		/// :flag-py: 🇵🇾 regional indicator symbol letters py
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_py = new EmojiInfo("flag-py", "1f1f5-1f1fe.png", "regional indicator symbol letters py", "🇵🇾", true, true, true, true);

		/// <summary>
		/// :flag-qa: 🇶🇦 regional indicator symbol letters qa
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_qa = new EmojiInfo("flag-qa", "1f1f6-1f1e6.png", "regional indicator symbol letters qa", "🇶🇦", true, true, true, true);

		/// <summary>
		/// :flag-re: 🇷🇪 regional indicator symbol letters re
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_re = new EmojiInfo("flag-re", "1f1f7-1f1ea.png", "regional indicator symbol letters re", "🇷🇪", true, false, true, false);

		/// <summary>
		/// :flag-ro: 🇷🇴 regional indicator symbol letters ro
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ro = new EmojiInfo("flag-ro", "1f1f7-1f1f4.png", "regional indicator symbol letters ro", "🇷🇴", true, true, true, true);

		/// <summary>
		/// :flag-rs: 🇷🇸 regional indicator symbol letters rs
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_rs = new EmojiInfo("flag-rs", "1f1f7-1f1f8.png", "regional indicator symbol letters rs", "🇷🇸", true, true, true, true);

		/// <summary>
		/// :flag-ru: 🇷🇺 regional indicator symbol letters ru
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ru = new EmojiInfo("flag-ru", "1f1f7-1f1fa.png", "regional indicator symbol letters ru", "🇷🇺", true, true, true, true);

		/// <summary>
		/// :flag-rw: 🇷🇼 regional indicator symbol letters rw
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_rw = new EmojiInfo("flag-rw", "1f1f7-1f1fc.png", "regional indicator symbol letters rw", "🇷🇼", true, true, true, true);

		/// <summary>
		/// :flag-sa: 🇸🇦 regional indicator symbol letters sa
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sa = new EmojiInfo("flag-sa", "1f1f8-1f1e6.png", "regional indicator symbol letters sa", "🇸🇦", true, true, true, true);

		/// <summary>
		/// :flag-sb: 🇸🇧 regional indicator symbol letters sb
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sb = new EmojiInfo("flag-sb", "1f1f8-1f1e7.png", "regional indicator symbol letters sb", "🇸🇧", true, true, true, true);

		/// <summary>
		/// :flag-sc: 🇸🇨 regional indicator symbol letters sc
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sc = new EmojiInfo("flag-sc", "1f1f8-1f1e8.png", "regional indicator symbol letters sc", "🇸🇨", true, true, true, true);

		/// <summary>
		/// :flag-sd: 🇸🇩 regional indicator symbol letters sd
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sd = new EmojiInfo("flag-sd", "1f1f8-1f1e9.png", "regional indicator symbol letters sd", "🇸🇩", true, true, true, true);

		/// <summary>
		/// :flag-se: 🇸🇪 regional indicator symbol letters se
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_se = new EmojiInfo("flag-se", "1f1f8-1f1ea.png", "regional indicator symbol letters se", "🇸🇪", true, true, true, true);

		/// <summary>
		/// :flag-sg: 🇸🇬 regional indicator symbol letters sg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sg = new EmojiInfo("flag-sg", "1f1f8-1f1ec.png", "regional indicator symbol letters sg", "🇸🇬", true, true, true, true);

		/// <summary>
		/// :flag-sh: 🇸🇭 regional indicator symbol letters sh
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sh = new EmojiInfo("flag-sh", "1f1f8-1f1ed.png", "regional indicator symbol letters sh", "🇸🇭", true, false, true, true);

		/// <summary>
		/// :flag-si: 🇸🇮 regional indicator symbol letters si
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_si = new EmojiInfo("flag-si", "1f1f8-1f1ee.png", "regional indicator symbol letters si", "🇸🇮", true, true, true, true);

		/// <summary>
		/// :flag-sj: 🇸🇯 regional indicator symbol letters sj
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sj = new EmojiInfo("flag-sj", "1f1f8-1f1ef.png", "regional indicator symbol letters sj", "🇸🇯", true, false, true, false);

		/// <summary>
		/// :flag-sk: 🇸🇰 regional indicator symbol letters sk
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sk = new EmojiInfo("flag-sk", "1f1f8-1f1f0.png", "regional indicator symbol letters sk", "🇸🇰", true, true, true, true);

		/// <summary>
		/// :flag-sl: 🇸🇱 regional indicator symbol letters sl
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sl = new EmojiInfo("flag-sl", "1f1f8-1f1f1.png", "regional indicator symbol letters sl", "🇸🇱", true, true, true, true);

		/// <summary>
		/// :flag-sm: 🇸🇲 regional indicator symbol letters sm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sm = new EmojiInfo("flag-sm", "1f1f8-1f1f2.png", "regional indicator symbol letters sm", "🇸🇲", true, true, true, true);

		/// <summary>
		/// :flag-sn: 🇸🇳 regional indicator symbol letters sn
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sn = new EmojiInfo("flag-sn", "1f1f8-1f1f3.png", "regional indicator symbol letters sn", "🇸🇳", true, true, true, true);

		/// <summary>
		/// :flag-so: 🇸🇴 regional indicator symbol letters so
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_so = new EmojiInfo("flag-so", "1f1f8-1f1f4.png", "regional indicator symbol letters so", "🇸🇴", true, true, true, true);

		/// <summary>
		/// :flag-sr: 🇸🇷 regional indicator symbol letters sr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sr = new EmojiInfo("flag-sr", "1f1f8-1f1f7.png", "regional indicator symbol letters sr", "🇸🇷", true, true, true, true);

		/// <summary>
		/// :flag-ss: 🇸🇸 regional indicator symbol letters ss
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ss = new EmojiInfo("flag-ss", "1f1f8-1f1f8.png", "regional indicator symbol letters ss", "🇸🇸", true, true, true, false);

		/// <summary>
		/// :flag-st: 🇸🇹 regional indicator symbol letters st
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_st = new EmojiInfo("flag-st", "1f1f8-1f1f9.png", "regional indicator symbol letters st", "🇸🇹", true, true, true, true);

		/// <summary>
		/// :flag-sv: 🇸🇻 regional indicator symbol letters sv
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sv = new EmojiInfo("flag-sv", "1f1f8-1f1fb.png", "regional indicator symbol letters sv", "🇸🇻", true, true, true, true);

		/// <summary>
		/// :flag-sx: 🇸🇽 regional indicator symbol letters sx
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sx = new EmojiInfo("flag-sx", "1f1f8-1f1fd.png", "regional indicator symbol letters sx", "🇸🇽", true, true, true, false);

		/// <summary>
		/// :flag-sy: 🇸🇾 regional indicator symbol letters sy
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sy = new EmojiInfo("flag-sy", "1f1f8-1f1fe.png", "regional indicator symbol letters sy", "🇸🇾", true, true, true, true);

		/// <summary>
		/// :flag-sz: 🇸🇿 regional indicator symbol letters sz
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_sz = new EmojiInfo("flag-sz", "1f1f8-1f1ff.png", "regional indicator symbol letters sz", "🇸🇿", true, true, true, true);

		/// <summary>
		/// :flag-ta: 🇹🇦 regional indicator symbol letters ta
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ta = new EmojiInfo("flag-ta", "1f1f9-1f1e6.png", "regional indicator symbol letters ta", "🇹🇦", true, false, true, false);

		/// <summary>
		/// :flag-tc: 🇹🇨 regional indicator symbol letters tc
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tc = new EmojiInfo("flag-tc", "1f1f9-1f1e8.png", "regional indicator symbol letters tc", "🇹🇨", true, true, true, false);

		/// <summary>
		/// :flag-td: 🇹🇩 regional indicator symbol letters td
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_td = new EmojiInfo("flag-td", "1f1f9-1f1e9.png", "regional indicator symbol letters td", "🇹🇩", true, true, true, true);

		/// <summary>
		/// :flag-tf: 🇹🇫 regional indicator symbol letters tf
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tf = new EmojiInfo("flag-tf", "1f1f9-1f1eb.png", "regional indicator symbol letters tf", "🇹🇫", true, false, true, false);

		/// <summary>
		/// :flag-tg: 🇹🇬 regional indicator symbol letters tg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tg = new EmojiInfo("flag-tg", "1f1f9-1f1ec.png", "regional indicator symbol letters tg", "🇹🇬", true, true, true, true);

		/// <summary>
		/// :flag-th: 🇹🇭 regional indicator symbol letters th
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_th = new EmojiInfo("flag-th", "1f1f9-1f1ed.png", "regional indicator symbol letters th", "🇹🇭", true, true, true, true);

		/// <summary>
		/// :flag-tj: 🇹🇯 regional indicator symbol letters tj
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tj = new EmojiInfo("flag-tj", "1f1f9-1f1ef.png", "regional indicator symbol letters tj", "🇹🇯", true, true, true, true);

		/// <summary>
		/// :flag-tk: 🇹🇰 regional indicator symbol letters tk
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tk = new EmojiInfo("flag-tk", "1f1f9-1f1f0.png", "regional indicator symbol letters tk", "🇹🇰", true, true, true, false);

		/// <summary>
		/// :flag-tl: 🇹🇱 regional indicator symbol letters tl
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tl = new EmojiInfo("flag-tl", "1f1f9-1f1f1.png", "regional indicator symbol letters tl", "🇹🇱", true, true, true, true);

		/// <summary>
		/// :flag-tm: 🇹🇲 regional indicator symbol letters tm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tm = new EmojiInfo("flag-tm", "1f1f9-1f1f2.png", "regional indicator symbol letters tm", "🇹🇲", true, true, true, true);

		/// <summary>
		/// :flag-tn: 🇹🇳 regional indicator symbol letters tn
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tn = new EmojiInfo("flag-tn", "1f1f9-1f1f3.png", "regional indicator symbol letters tn", "🇹🇳", true, true, true, true);

		/// <summary>
		/// :flag-to: 🇹🇴 regional indicator symbol letters to
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_to = new EmojiInfo("flag-to", "1f1f9-1f1f4.png", "regional indicator symbol letters to", "🇹🇴", true, true, true, true);

		/// <summary>
		/// :flag-tr: 🇹🇷 regional indicator symbol letters tr
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tr = new EmojiInfo("flag-tr", "1f1f9-1f1f7.png", "regional indicator symbol letters tr", "🇹🇷", true, true, true, true);

		/// <summary>
		/// :flag-tt: 🇹🇹 regional indicator symbol letters tt
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tt = new EmojiInfo("flag-tt", "1f1f9-1f1f9.png", "regional indicator symbol letters tt", "🇹🇹", true, true, true, true);

		/// <summary>
		/// :flag-tv: 🇹🇻 regional indicator symbol letters tv
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tv = new EmojiInfo("flag-tv", "1f1f9-1f1fb.png", "regional indicator symbol letters tv", "🇹🇻", true, true, true, true);

		/// <summary>
		/// :flag-tw: 🇹🇼 regional indicator symbol letters tw
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tw = new EmojiInfo("flag-tw", "1f1f9-1f1fc.png", "regional indicator symbol letters tw", "🇹🇼", true, true, true, true);

		/// <summary>
		/// :flag-tz: 🇹🇿 regional indicator symbol letters tz
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_tz = new EmojiInfo("flag-tz", "1f1f9-1f1ff.png", "regional indicator symbol letters tz", "🇹🇿", true, true, true, true);

		/// <summary>
		/// :flag-ua: 🇺🇦 regional indicator symbol letters ua
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ua = new EmojiInfo("flag-ua", "1f1fa-1f1e6.png", "regional indicator symbol letters ua", "🇺🇦", true, true, true, true);

		/// <summary>
		/// :flag-ug: 🇺🇬 regional indicator symbol letters ug
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ug = new EmojiInfo("flag-ug", "1f1fa-1f1ec.png", "regional indicator symbol letters ug", "🇺🇬", true, true, true, true);

		/// <summary>
		/// :flag-um: 🇺🇲 regional indicator symbol letters um
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_um = new EmojiInfo("flag-um", "1f1fa-1f1f2.png", "regional indicator symbol letters um", "🇺🇲", true, false, true, false);

		/// <summary>
		/// :flag-us: 🇺🇸 regional indicator symbol letters us
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_us = new EmojiInfo("flag-us", "1f1fa-1f1f8.png", "regional indicator symbol letters us", "🇺🇸", true, true, true, true);

		/// <summary>
		/// :flag-uy: 🇺🇾 regional indicator symbol letters uy
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_uy = new EmojiInfo("flag-uy", "1f1fa-1f1fe.png", "regional indicator symbol letters uy", "🇺🇾", true, true, true, true);

		/// <summary>
		/// :flag-uz: 🇺🇿 regional indicator symbol letters uz
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_uz = new EmojiInfo("flag-uz", "1f1fa-1f1ff.png", "regional indicator symbol letters uz", "🇺🇿", true, true, true, true);

		/// <summary>
		/// :flag-va: 🇻🇦 regional indicator symbol letters va
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_va = new EmojiInfo("flag-va", "1f1fb-1f1e6.png", "regional indicator symbol letters va", "🇻🇦", true, true, true, true);

		/// <summary>
		/// :flag-vc: 🇻🇨 regional indicator symbol letters vc
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_vc = new EmojiInfo("flag-vc", "1f1fb-1f1e8.png", "regional indicator symbol letters vc", "🇻🇨", true, true, true, true);

		/// <summary>
		/// :flag-ve: 🇻🇪 regional indicator symbol letters ve
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ve = new EmojiInfo("flag-ve", "1f1fb-1f1ea.png", "regional indicator symbol letters ve", "🇻🇪", true, true, true, true);

		/// <summary>
		/// :flag-vg: 🇻🇬 regional indicator symbol letters vg
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_vg = new EmojiInfo("flag-vg", "1f1fb-1f1ec.png", "regional indicator symbol letters vg", "🇻🇬", true, true, true, false);

		/// <summary>
		/// :flag-vi: 🇻🇮 regional indicator symbol letters vi
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_vi = new EmojiInfo("flag-vi", "1f1fb-1f1ee.png", "regional indicator symbol letters vi", "🇻🇮", true, true, true, true);

		/// <summary>
		/// :flag-vn: 🇻🇳 regional indicator symbol letters vn
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_vn = new EmojiInfo("flag-vn", "1f1fb-1f1f3.png", "regional indicator symbol letters vn", "🇻🇳", true, true, true, true);

		/// <summary>
		/// :flag-vu: 🇻🇺 regional indicator symbol letters vu
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_vu = new EmojiInfo("flag-vu", "1f1fb-1f1fa.png", "regional indicator symbol letters vu", "🇻🇺", true, true, true, true);

		/// <summary>
		/// :flag-wf: 🇼🇫 regional indicator symbol letters wf
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_wf = new EmojiInfo("flag-wf", "1f1fc-1f1eb.png", "regional indicator symbol letters wf", "🇼🇫", true, false, true, true);

		/// <summary>
		/// :flag-ws: 🇼🇸 regional indicator symbol letters ws
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ws = new EmojiInfo("flag-ws", "1f1fc-1f1f8.png", "regional indicator symbol letters ws", "🇼🇸", true, true, true, true);

		/// <summary>
		/// :flag-xk: 🇽🇰 regional indicator symbol letters xk
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_xk = new EmojiInfo("flag-xk", "1f1fd-1f1f0.png", "regional indicator symbol letters xk", "🇽🇰", true, false, true, true);

		/// <summary>
		/// :flag-ye: 🇾🇪 regional indicator symbol letters ye
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_ye = new EmojiInfo("flag-ye", "1f1fe-1f1ea.png", "regional indicator symbol letters ye", "🇾🇪", true, true, true, true);

		/// <summary>
		/// :flag-yt: 🇾🇹 regional indicator symbol letters yt
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_yt = new EmojiInfo("flag-yt", "1f1fe-1f1f9.png", "regional indicator symbol letters yt", "🇾🇹", true, false, true, false);

		/// <summary>
		/// :flag-za: 🇿🇦 regional indicator symbol letters za
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_za = new EmojiInfo("flag-za", "1f1ff-1f1e6.png", "regional indicator symbol letters za", "🇿🇦", true, true, true, true);

		/// <summary>
		/// :flag-zm: 🇿🇲 regional indicator symbol letters zm
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_zm = new EmojiInfo("flag-zm", "1f1ff-1f1f2.png", "regional indicator symbol letters zm", "🇿🇲", true, true, true, true);

		/// <summary>
		/// :flag-zw: 🇿🇼 regional indicator symbol letters zw
		/// </summary>
		public static readonly EmojiInfo Emoji_flag_zw = new EmojiInfo("flag-zw", "1f1ff-1f1fc.png", "regional indicator symbol letters zw", "🇿🇼", true, true, true, true);

		/// <summary>
		/// :man-man-boy: 👨‍👨‍👦 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_man_boy = new EmojiInfo("man-man-boy", "1f468-200d-1f468-200d-1f466.png", "", "👨‍👨‍👦", true, true, true, true);

		/// <summary>
		/// :man-man-boy-boy: 👨‍👨‍👦‍👦 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_man_boy_boy = new EmojiInfo("man-man-boy-boy", "1f468-200d-1f468-200d-1f466-200d-1f466.png", "", "👨‍👨‍👦‍👦", true, true, true, true);

		/// <summary>
		/// :man-man-girl: 👨‍👨‍👧 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_man_girl = new EmojiInfo("man-man-girl", "1f468-200d-1f468-200d-1f467.png", "", "👨‍👨‍👧", true, true, true, true);

		/// <summary>
		/// :man-man-girl-boy: 👨‍👨‍👧‍👦 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_man_girl_boy = new EmojiInfo("man-man-girl-boy", "1f468-200d-1f468-200d-1f467-200d-1f466.png", "", "👨‍👨‍👧‍👦", true, true, true, true);

		/// <summary>
		/// :man-man-girl-girl: 👨‍👨‍👧‍👧 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_man_girl_girl = new EmojiInfo("man-man-girl-girl", "1f468-200d-1f468-200d-1f467-200d-1f467.png", "", "👨‍👨‍👧‍👧", true, true, true, true);

		/// <summary>
		/// :man-woman-boy-boy: 👨‍👩‍👦‍👦 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_woman_boy_boy = new EmojiInfo("man-woman-boy-boy", "1f468-200d-1f469-200d-1f466-200d-1f466.png", "", "👨‍👩‍👦‍👦", true, true, true, true);

		/// <summary>
		/// :man-woman-girl: 👨‍👩‍👧 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_woman_girl = new EmojiInfo("man-woman-girl", "1f468-200d-1f469-200d-1f467.png", "", "👨‍👩‍👧", true, true, true, true);

		/// <summary>
		/// :man-woman-girl-boy: 👨‍👩‍👧‍👦 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_woman_girl_boy = new EmojiInfo("man-woman-girl-boy", "1f468-200d-1f469-200d-1f467-200d-1f466.png", "", "👨‍👩‍👧‍👦", true, true, true, true);

		/// <summary>
		/// :man-woman-girl-girl: 👨‍👩‍👧‍👧 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_woman_girl_girl = new EmojiInfo("man-woman-girl-girl", "1f468-200d-1f469-200d-1f467-200d-1f467.png", "", "👨‍👩‍👧‍👧", true, true, true, true);

		/// <summary>
		/// :man-heart-man: 👨‍❤️‍👨 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_heart_man = new EmojiInfo("man-heart-man", "1f468-200d-2764-fe0f-200d-1f468.png", "", "👨‍❤️‍👨", true, true, true, false);

		/// <summary>
		/// :man-kiss-man: 👨‍❤️‍💋‍👨 
		/// </summary>
		public static readonly EmojiInfo Emoji_man_kiss_man = new EmojiInfo("man-kiss-man", "1f468-200d-2764-fe0f-200d-1f48b-200d-1f468.png", "", "👨‍❤️‍💋‍👨", true, true, true, false);

		/// <summary>
		/// :woman-woman-boy: 👩‍👩‍👦 
		/// </summary>
		public static readonly EmojiInfo Emoji_woman_woman_boy = new EmojiInfo("woman-woman-boy", "1f469-200d-1f469-200d-1f466.png", "", "👩‍👩‍👦", true, true, true, true);

		/// <summary>
		/// :woman-woman-boy-boy: 👩‍👩‍👦‍👦 
		/// </summary>
		public static readonly EmojiInfo Emoji_woman_woman_boy_boy = new EmojiInfo("woman-woman-boy-boy", "1f469-200d-1f469-200d-1f466-200d-1f466.png", "", "👩‍👩‍👦‍👦", true, true, true, true);

		/// <summary>
		/// :woman-woman-girl: 👩‍👩‍👧 
		/// </summary>
		public static readonly EmojiInfo Emoji_woman_woman_girl = new EmojiInfo("woman-woman-girl", "1f469-200d-1f469-200d-1f467.png", "", "👩‍👩‍👧", true, true, true, true);

		/// <summary>
		/// :woman-woman-girl-boy: 👩‍👩‍👧‍👦 
		/// </summary>
		public static readonly EmojiInfo Emoji_woman_woman_girl_boy = new EmojiInfo("woman-woman-girl-boy", "1f469-200d-1f469-200d-1f467-200d-1f466.png", "", "👩‍👩‍👧‍👦", true, true, true, true);

		/// <summary>
		/// :woman-woman-girl-girl: 👩‍👩‍👧‍👧 
		/// </summary>
		public static readonly EmojiInfo Emoji_woman_woman_girl_girl = new EmojiInfo("woman-woman-girl-girl", "1f469-200d-1f469-200d-1f467-200d-1f467.png", "", "👩‍👩‍👧‍👧", true, true, true, true);

		/// <summary>
		/// :woman-heart-woman: 👩‍❤️‍👩 
		/// </summary>
		public static readonly EmojiInfo Emoji_woman_heart_woman = new EmojiInfo("woman-heart-woman", "1f469-200d-2764-fe0f-200d-1f469.png", "", "👩‍❤️‍👩", true, true, true, false);

		/// <summary>
		/// :woman-kiss-woman: 👩‍❤️‍💋‍👩 
		/// </summary>
		public static readonly EmojiInfo Emoji_woman_kiss_woman = new EmojiInfo("woman-kiss-woman", "1f469-200d-2764-fe0f-200d-1f48b-200d-1f469.png", "", "👩‍❤️‍💋‍👩", true, true, true, false);
	}

	/// <summary>
	/// Contains information about an emoji.
	/// </summary>
	public class EmojiInfo
	{
		private string shortName;
		private string fileName;
		private string description;
		private string unicode;
		private bool appleSupport;
		private bool googleSupport;
		private bool twitterSupport;
		private bool emoji1Support;

		/// <summary>
		/// Contains information about an emoji.
		/// </summary>
		/// <param name="ShortName">Emoji short name.</param>
		/// <param name="FileName">Emoji file name.</param>
		/// <param name="Description">Short description of emoji.</param>
		/// <param name="Unicode">Unicode representation of emoji.</param>
		/// <param name="AppleSupport">If the emoji is supported by Apple.</param>
		/// <param name="GoogleSupport">If the emoji is supported by Google.</param>
		/// <param name="TwitterSupport">If the emoji is supported by Twitter.</param>
		/// <param name="Emoji1Support">If the emoji is supported by emoji-1.</param>
		public EmojiInfo(string ShortName, string FileName, string Description, string Unicode,
			bool AppleSupport, bool GoogleSupport, bool TwitterSupport, bool Emoji1Support)
		{
			this.shortName = ShortName;
			this.fileName = FileName;
			this.description = Description;
			this.unicode = Unicode;
			this.appleSupport = AppleSupport;
			this.googleSupport = GoogleSupport;
			this.twitterSupport = TwitterSupport;
			this.emoji1Support = Emoji1Support;
		}

		/// <summary>
		/// Emoji short name.
		/// </summary>
		public string ShortName { get { return this.shortName; } }

		/// <summary>
		/// Emoji file name.
		/// </summary>
		public string FileName { get { return this.fileName; } }

		/// <summary>
		/// Short description of emoji.
		/// </summary>
		public string Description { get { return this.description; } }

		/// <summary>
		/// Unicode representation of emoji.
		/// </summary>
		public string Unicode { get { return this.unicode; } }

		/// <summary>
		/// If the emoji is supported by Apple.
		/// </summary>
		public bool AppleSupport { get { return this.appleSupport; } }

		/// <summary>
		/// If the emoji is supported by Google.
		/// </summary>
		public bool GoogleSupport { get { return this.googleSupport; } }

		/// <summary>
		/// If the emoji is supported by Twitter.
		/// </summary>
		public bool TwitterSupport { get { return this.twitterSupport; } }

		/// <summary>
		/// If the emoji is supported by emoji-1.
		/// </summary>
		public bool Emoji1Support { get { return this.emoji1Support; } }
	}
}
